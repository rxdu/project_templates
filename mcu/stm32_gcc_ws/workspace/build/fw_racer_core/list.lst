   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"list.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.vListInitialise,"ax",%progbits
  16              		.align	1
  17              		.global	vListInitialise
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu fpv4-sp-d16
  23              	vListInitialise:
  24              	.LFB5:
  25              		.file 1 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c"
   1:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** /*
   2:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * FreeRTOS Kernel V10.1.1
   3:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  *
   5:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * the Software without restriction, including without limitation the rights to
   8:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * subject to the following conditions:
  11:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  *
  12:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * The above copyright notice and this permission notice shall be included in all
  13:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * copies or substantial portions of the Software.
  14:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  *
  15:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  *
  22:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * http://www.FreeRTOS.org
  23:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * http://aws.amazon.com/freertos
  24:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  *
  25:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * 1 tab == 4 spaces!
  26:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  */
  27:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  28:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  29:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** #include <stdlib.h>
  30:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** #include "FreeRTOS.h"
  31:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** #include "list.h"
  32:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  33:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------
  34:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  * PUBLIC LIST API documented in list.h
  35:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c ****  *----------------------------------------------------------*/
  36:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  37:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** void vListInitialise( List_t * const pxList )
  38:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** {
  26              		.loc 1 38 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 8
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31 0000 82B0     		sub	sp, sp, #8
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34 0002 0190     		str	r0, [sp, #4]
  39:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* The list structure contains a list item which is used to mark the
  40:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	end of the list.  To initialise the list the list end is inserted
  41:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	as the only list entry. */
  42:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxList->pxIndex = ( ListItem_t * ) &( pxList->xListEnd );			/*lint !e826 !e740 !e9087 The mini lis
  35              		.loc 1 42 0
  36 0004 019B     		ldr	r3, [sp, #4]
  37 0006 03F10802 		add	r2, r3, #8
  38 000a 019B     		ldr	r3, [sp, #4]
  39 000c 5A60     		str	r2, [r3, #4]
  43:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  44:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* The list end value is the highest possible value in the list to
  45:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	ensure it remains at the end of the list. */
  46:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxList->xListEnd.xItemValue = portMAX_DELAY;
  40              		.loc 1 46 0
  41 000e 019B     		ldr	r3, [sp, #4]
  42 0010 4FF0FF32 		mov	r2, #-1
  43 0014 9A60     		str	r2, [r3, #8]
  47:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  48:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* The list end next and previous pointers point to itself so we know
  49:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	when the list is empty. */
  50:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxNext = ( ListItem_t * ) &( pxList->xListEnd );	/*lint !e826 !e740 !e9087 The mi
  44              		.loc 1 50 0
  45 0016 019B     		ldr	r3, [sp, #4]
  46 0018 03F10802 		add	r2, r3, #8
  47 001c 019B     		ldr	r3, [sp, #4]
  48 001e DA60     		str	r2, [r3, #12]
  51:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxList->xListEnd.pxPrevious = ( ListItem_t * ) &( pxList->xListEnd );/*lint !e826 !e740 !e9087 The
  49              		.loc 1 51 0
  50 0020 019B     		ldr	r3, [sp, #4]
  51 0022 03F10802 		add	r2, r3, #8
  52 0026 019B     		ldr	r3, [sp, #4]
  53 0028 1A61     		str	r2, [r3, #16]
  52:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  53:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxList->uxNumberOfItems = ( UBaseType_t ) 0U;
  54              		.loc 1 53 0
  55 002a 019B     		ldr	r3, [sp, #4]
  56 002c 0022     		movs	r2, #0
  57 002e 1A60     		str	r2, [r3]
  54:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  55:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Write known values into the list if
  56:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  57:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_1_VALUE( pxList );
  58:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	listSET_LIST_INTEGRITY_CHECK_2_VALUE( pxList );
  59:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** }
  58              		.loc 1 59 0
  59 0030 00BF     		nop
  60 0032 02B0     		add	sp, sp, #8
  61              	.LCFI1:
  62              		.cfi_def_cfa_offset 0
  63              		@ sp needed
  64 0034 7047     		bx	lr
  65              		.cfi_endproc
  66              	.LFE5:
  68              		.section	.text.vListInitialiseItem,"ax",%progbits
  69              		.align	1
  70              		.global	vListInitialiseItem
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  74              		.fpu fpv4-sp-d16
  76              	vListInitialiseItem:
  77              	.LFB6:
  60:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
  61:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  62:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** void vListInitialiseItem( ListItem_t * const pxItem )
  63:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** {
  78              		.loc 1 63 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 8
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83 0000 82B0     		sub	sp, sp, #8
  84              	.LCFI2:
  85              		.cfi_def_cfa_offset 8
  86 0002 0190     		str	r0, [sp, #4]
  64:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Make sure the list item is not recorded as being on a list. */
  65:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxItem->pxContainer = NULL;
  87              		.loc 1 65 0
  88 0004 019B     		ldr	r3, [sp, #4]
  89 0006 0022     		movs	r2, #0
  90 0008 1A61     		str	r2, [r3, #16]
  66:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  67:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Write known values into the list item if
  68:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	configUSE_LIST_DATA_INTEGRITY_CHECK_BYTES is set to 1. */
  69:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	listSET_FIRST_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  70:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	listSET_SECOND_LIST_ITEM_INTEGRITY_CHECK_VALUE( pxItem );
  71:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** }
  91              		.loc 1 71 0
  92 000a 00BF     		nop
  93 000c 02B0     		add	sp, sp, #8
  94              	.LCFI3:
  95              		.cfi_def_cfa_offset 0
  96              		@ sp needed
  97 000e 7047     		bx	lr
  98              		.cfi_endproc
  99              	.LFE6:
 101              		.section	.text.vListInsertEnd,"ax",%progbits
 102              		.align	1
 103              		.global	vListInsertEnd
 104              		.syntax unified
 105              		.thumb
 106              		.thumb_func
 107              		.fpu fpv4-sp-d16
 109              	vListInsertEnd:
 110              	.LFB7:
  72:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
  73:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  74:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** void vListInsertEnd( List_t * const pxList, ListItem_t * const pxNewListItem )
  75:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** {
 111              		.loc 1 75 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 16
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116 0000 84B0     		sub	sp, sp, #16
 117              	.LCFI4:
 118              		.cfi_def_cfa_offset 16
 119 0002 0190     		str	r0, [sp, #4]
 120 0004 0091     		str	r1, [sp]
  76:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** ListItem_t * const pxIndex = pxList->pxIndex;
 121              		.loc 1 76 0
 122 0006 019B     		ldr	r3, [sp, #4]
 123 0008 5B68     		ldr	r3, [r3, #4]
 124 000a 0393     		str	r3, [sp, #12]
  77:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  78:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
  79:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
  80:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
  81:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
  82:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
  83:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  84:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Insert a new list item into pxList, but rather than sort the list,
  85:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	makes the new list item the last item to be removed by a call to
  86:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	listGET_OWNER_OF_NEXT_ENTRY(). */
  87:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIndex;
 125              		.loc 1 87 0
 126 000c 009B     		ldr	r3, [sp]
 127 000e 039A     		ldr	r2, [sp, #12]
 128 0010 5A60     		str	r2, [r3, #4]
  88:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIndex->pxPrevious;
 129              		.loc 1 88 0
 130 0012 039B     		ldr	r3, [sp, #12]
 131 0014 9A68     		ldr	r2, [r3, #8]
 132 0016 009B     		ldr	r3, [sp]
 133 0018 9A60     		str	r2, [r3, #8]
  89:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  90:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
  91:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
  92:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  93:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious->pxNext = pxNewListItem;
 134              		.loc 1 93 0
 135 001a 039B     		ldr	r3, [sp, #12]
 136 001c 9B68     		ldr	r3, [r3, #8]
 137 001e 009A     		ldr	r2, [sp]
 138 0020 5A60     		str	r2, [r3, #4]
  94:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxIndex->pxPrevious = pxNewListItem;
 139              		.loc 1 94 0
 140 0022 039B     		ldr	r3, [sp, #12]
 141 0024 009A     		ldr	r2, [sp]
 142 0026 9A60     		str	r2, [r3, #8]
  95:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  96:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in. */
  97:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxNewListItem->pxContainer = pxList;
 143              		.loc 1 97 0
 144 0028 009B     		ldr	r3, [sp]
 145 002a 019A     		ldr	r2, [sp, #4]
 146 002c 1A61     		str	r2, [r3, #16]
  98:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
  99:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 147              		.loc 1 99 0
 148 002e 019B     		ldr	r3, [sp, #4]
 149 0030 1B68     		ldr	r3, [r3]
 150 0032 5A1C     		adds	r2, r3, #1
 151 0034 019B     		ldr	r3, [sp, #4]
 152 0036 1A60     		str	r2, [r3]
 100:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** }
 153              		.loc 1 100 0
 154 0038 00BF     		nop
 155 003a 04B0     		add	sp, sp, #16
 156              	.LCFI5:
 157              		.cfi_def_cfa_offset 0
 158              		@ sp needed
 159 003c 7047     		bx	lr
 160              		.cfi_endproc
 161              	.LFE7:
 163              		.section	.text.vListInsert,"ax",%progbits
 164              		.align	1
 165              		.global	vListInsert
 166              		.syntax unified
 167              		.thumb
 168              		.thumb_func
 169              		.fpu fpv4-sp-d16
 171              	vListInsert:
 172              	.LFB8:
 101:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 102:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 103:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** void vListInsert( List_t * const pxList, ListItem_t * const pxNewListItem )
 104:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** {
 173              		.loc 1 104 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 16
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              		@ link register save eliminated.
 178 0000 84B0     		sub	sp, sp, #16
 179              	.LCFI6:
 180              		.cfi_def_cfa_offset 16
 181 0002 0190     		str	r0, [sp, #4]
 182 0004 0091     		str	r1, [sp]
 105:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** ListItem_t *pxIterator;
 106:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** const TickType_t xValueOfInsertion = pxNewListItem->xItemValue;
 183              		.loc 1 106 0
 184 0006 009B     		ldr	r3, [sp]
 185 0008 1B68     		ldr	r3, [r3]
 186 000a 0293     		str	r3, [sp, #8]
 107:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 108:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Only effective when configASSERT() is also defined, these tests may catch
 109:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	the list data structures being overwritten in memory.  They will not catch
 110:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	data errors caused by incorrect configuration or use of FreeRTOS. */
 111:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	listTEST_LIST_INTEGRITY( pxList );
 112:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	listTEST_LIST_ITEM_INTEGRITY( pxNewListItem );
 113:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 114:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Insert the new list item into the list, sorted in xItemValue order.
 115:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 116:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	If the list already contains a list item with the same item value then the
 117:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	new list item should be placed after it.  This ensures that TCBs which are
 118:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	stored in ready lists (all of which have the same xItemValue value) get a
 119:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	share of the CPU.  However, if the xItemValue is the same as the back marker
 120:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	the iteration loop below will not end.  Therefore the value is checked
 121:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	first, and the algorithm slightly modified if necessary. */
 122:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	if( xValueOfInsertion == portMAX_DELAY )
 187              		.loc 1 122 0
 188 000c 029B     		ldr	r3, [sp, #8]
 189 000e B3F1FF3F 		cmp	r3, #-1
 190 0012 03D1     		bne	.L5
 123:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	{
 124:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		pxIterator = pxList->xListEnd.pxPrevious;
 191              		.loc 1 124 0
 192 0014 019B     		ldr	r3, [sp, #4]
 193 0016 1B69     		ldr	r3, [r3, #16]
 194 0018 0393     		str	r3, [sp, #12]
 195 001a 0CE0     		b	.L6
 196              	.L5:
 125:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	}
 126:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	else
 127:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	{
 128:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		/* *** NOTE ***********************************************************
 129:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		If you find your application is crashing here then likely causes are
 130:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		listed below.  In addition see https://www.freertos.org/FAQHelp.html for
 131:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		more tips, and ensure configASSERT() is defined!
 132:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		https://www.freertos.org/a00110.html#configASSERT
 133:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 134:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			1) Stack overflow -
 135:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   see https://www.freertos.org/Stacks-and-stack-overflow-checking.html
 136:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			2) Incorrect interrupt priority assignment, especially on Cortex-M
 137:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   parts where numerically high priority values denote low actual
 138:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   interrupt priorities, which can seem counter intuitive.  See
 139:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   https://www.freertos.org/RTOS-Cortex-M3-M4.html and the definition
 140:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   of configMAX_SYSCALL_INTERRUPT_PRIORITY on
 141:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   https://www.freertos.org/a00110.html
 142:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			3) Calling an API function from within a critical section or when
 143:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   the scheduler is suspended, or calling an API function that does
 144:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   not end in "FromISR" from an interrupt.
 145:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			4) Using a queue or semaphore before it has been initialised or
 146:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   before the scheduler has been started (are interrupts firing
 147:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			   before vTaskStartScheduler() has been called?).
 148:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		**********************************************************************/
 149:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 150:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		for( pxIterator = ( ListItem_t * ) &( pxList->xListEnd ); pxIterator->pxNext->xItemValue <= xValu
 197              		.loc 1 150 0
 198 001c 019B     		ldr	r3, [sp, #4]
 199 001e 0833     		adds	r3, r3, #8
 200 0020 0393     		str	r3, [sp, #12]
 201 0022 02E0     		b	.L7
 202              	.L8:
 203              		.loc 1 150 0 is_stmt 0 discriminator 3
 204 0024 039B     		ldr	r3, [sp, #12]
 205 0026 5B68     		ldr	r3, [r3, #4]
 206 0028 0393     		str	r3, [sp, #12]
 207              	.L7:
 208              		.loc 1 150 0 discriminator 1
 209 002a 039B     		ldr	r3, [sp, #12]
 210 002c 5B68     		ldr	r3, [r3, #4]
 211 002e 1B68     		ldr	r3, [r3]
 212 0030 029A     		ldr	r2, [sp, #8]
 213 0032 9A42     		cmp	r2, r3
 214 0034 F6D2     		bcs	.L8
 215              	.L6:
 151:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		{
 152:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			/* There is nothing to do here, just iterating to the wanted
 153:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 			insertion position. */
 154:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		}
 155:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	}
 156:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 157:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext = pxIterator->pxNext;
 216              		.loc 1 157 0 is_stmt 1
 217 0036 039B     		ldr	r3, [sp, #12]
 218 0038 5A68     		ldr	r2, [r3, #4]
 219 003a 009B     		ldr	r3, [sp]
 220 003c 5A60     		str	r2, [r3, #4]
 158:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxNewListItem->pxNext->pxPrevious = pxNewListItem;
 221              		.loc 1 158 0
 222 003e 009B     		ldr	r3, [sp]
 223 0040 5B68     		ldr	r3, [r3, #4]
 224 0042 009A     		ldr	r2, [sp]
 225 0044 9A60     		str	r2, [r3, #8]
 159:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxNewListItem->pxPrevious = pxIterator;
 226              		.loc 1 159 0
 227 0046 009B     		ldr	r3, [sp]
 228 0048 039A     		ldr	r2, [sp, #12]
 229 004a 9A60     		str	r2, [r3, #8]
 160:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxIterator->pxNext = pxNewListItem;
 230              		.loc 1 160 0
 231 004c 039B     		ldr	r3, [sp, #12]
 232 004e 009A     		ldr	r2, [sp]
 233 0050 5A60     		str	r2, [r3, #4]
 161:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 162:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Remember which list the item is in.  This allows fast removal of the
 163:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	item later. */
 164:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxNewListItem->pxContainer = pxList;
 234              		.loc 1 164 0
 235 0052 009B     		ldr	r3, [sp]
 236 0054 019A     		ldr	r2, [sp, #4]
 237 0056 1A61     		str	r2, [r3, #16]
 165:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 166:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )++;
 238              		.loc 1 166 0
 239 0058 019B     		ldr	r3, [sp, #4]
 240 005a 1B68     		ldr	r3, [r3]
 241 005c 5A1C     		adds	r2, r3, #1
 242 005e 019B     		ldr	r3, [sp, #4]
 243 0060 1A60     		str	r2, [r3]
 167:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** }
 244              		.loc 1 167 0
 245 0062 00BF     		nop
 246 0064 04B0     		add	sp, sp, #16
 247              	.LCFI7:
 248              		.cfi_def_cfa_offset 0
 249              		@ sp needed
 250 0066 7047     		bx	lr
 251              		.cfi_endproc
 252              	.LFE8:
 254              		.section	.text.uxListRemove,"ax",%progbits
 255              		.align	1
 256              		.global	uxListRemove
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu fpv4-sp-d16
 262              	uxListRemove:
 263              	.LFB9:
 168:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** /*-----------------------------------------------------------*/
 169:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 170:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** UBaseType_t uxListRemove( ListItem_t * const pxItemToRemove )
 171:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** {
 264              		.loc 1 171 0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 16
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268              		@ link register save eliminated.
 269 0000 84B0     		sub	sp, sp, #16
 270              	.LCFI8:
 271              		.cfi_def_cfa_offset 16
 272 0002 0190     		str	r0, [sp, #4]
 172:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** /* The list item knows which list it is in.  Obtain the list from the list
 173:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** item. */
 174:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** List_t * const pxList = pxItemToRemove->pxContainer;
 273              		.loc 1 174 0
 274 0004 019B     		ldr	r3, [sp, #4]
 275 0006 1B69     		ldr	r3, [r3, #16]
 276 0008 0393     		str	r3, [sp, #12]
 175:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 176:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxNext->pxPrevious = pxItemToRemove->pxPrevious;
 277              		.loc 1 176 0
 278 000a 019B     		ldr	r3, [sp, #4]
 279 000c 5B68     		ldr	r3, [r3, #4]
 280 000e 019A     		ldr	r2, [sp, #4]
 281 0010 9268     		ldr	r2, [r2, #8]
 282 0012 9A60     		str	r2, [r3, #8]
 177:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxPrevious->pxNext = pxItemToRemove->pxNext;
 283              		.loc 1 177 0
 284 0014 019B     		ldr	r3, [sp, #4]
 285 0016 9B68     		ldr	r3, [r3, #8]
 286 0018 019A     		ldr	r2, [sp, #4]
 287 001a 5268     		ldr	r2, [r2, #4]
 288 001c 5A60     		str	r2, [r3, #4]
 178:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 179:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Only used during decision coverage testing. */
 180:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	mtCOVERAGE_TEST_DELAY();
 181:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 182:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	/* Make sure the index is left pointing to a valid item. */
 183:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	if( pxList->pxIndex == pxItemToRemove )
 289              		.loc 1 183 0
 290 001e 039B     		ldr	r3, [sp, #12]
 291 0020 5B68     		ldr	r3, [r3, #4]
 292 0022 019A     		ldr	r2, [sp, #4]
 293 0024 9A42     		cmp	r2, r3
 294 0026 03D1     		bne	.L10
 184:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	{
 185:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		pxList->pxIndex = pxItemToRemove->pxPrevious;
 295              		.loc 1 185 0
 296 0028 019B     		ldr	r3, [sp, #4]
 297 002a 9A68     		ldr	r2, [r3, #8]
 298 002c 039B     		ldr	r3, [sp, #12]
 299 002e 5A60     		str	r2, [r3, #4]
 300              	.L10:
 186:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	}
 187:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	else
 188:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	{
 189:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 		mtCOVERAGE_TEST_MARKER();
 190:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	}
 191:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 192:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	pxItemToRemove->pxContainer = NULL;
 301              		.loc 1 192 0
 302 0030 019B     		ldr	r3, [sp, #4]
 303 0032 0022     		movs	r2, #0
 304 0034 1A61     		str	r2, [r3, #16]
 193:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	( pxList->uxNumberOfItems )--;
 305              		.loc 1 193 0
 306 0036 039B     		ldr	r3, [sp, #12]
 307 0038 1B68     		ldr	r3, [r3]
 308 003a 5A1E     		subs	r2, r3, #1
 309 003c 039B     		ldr	r3, [sp, #12]
 310 003e 1A60     		str	r2, [r3]
 194:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** 	return pxList->uxNumberOfItems;
 311              		.loc 1 195 0
 312 0040 039B     		ldr	r3, [sp, #12]
 313 0042 1B68     		ldr	r3, [r3]
 196:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/list.c **** }
 314              		.loc 1 196 0
 315 0044 1846     		mov	r0, r3
 316 0046 04B0     		add	sp, sp, #16
 317              	.LCFI9:
 318              		.cfi_def_cfa_offset 0
 319              		@ sp needed
 320 0048 7047     		bx	lr
 321              		.cfi_endproc
 322              	.LFE9:
 324              		.text
 325              	.Letext0:
 326              		.file 2 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 327              		.file 3 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 328              		.file 4 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 329              		.file 5 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/
 330              		.file 6 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 331              		.file 7 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 332              		.file 8 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 333              		.file 9 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/targets/racer_core/firmware/config
 334              		.file 10 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portabl
 335              		.file 11 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/include
DEFINED SYMBOLS
                            *ABS*:0000000000000000 list.c
     /tmp/cclvLUFD.s:16     .text.vListInitialise:0000000000000000 $t
     /tmp/cclvLUFD.s:23     .text.vListInitialise:0000000000000000 vListInitialise
     /tmp/cclvLUFD.s:69     .text.vListInitialiseItem:0000000000000000 $t
     /tmp/cclvLUFD.s:76     .text.vListInitialiseItem:0000000000000000 vListInitialiseItem
     /tmp/cclvLUFD.s:102    .text.vListInsertEnd:0000000000000000 $t
     /tmp/cclvLUFD.s:109    .text.vListInsertEnd:0000000000000000 vListInsertEnd
     /tmp/cclvLUFD.s:164    .text.vListInsert:0000000000000000 $t
     /tmp/cclvLUFD.s:171    .text.vListInsert:0000000000000000 vListInsert
     /tmp/cclvLUFD.s:255    .text.uxListRemove:0000000000000000 $t
     /tmp/cclvLUFD.s:262    .text.uxListRemove:0000000000000000 uxListRemove

NO UNDEFINED SYMBOLS
