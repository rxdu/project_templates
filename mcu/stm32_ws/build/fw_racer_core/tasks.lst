   1              		.cpu cortex-m4
   2              		.eabi_attribute 27, 1
   3              		.eabi_attribute 28, 1
   4              		.eabi_attribute 23, 1
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"tasks.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	pxCurrentTCB
  16              		.section	.bss.pxCurrentTCB,"aw",%nobits
  17              		.align	2
  20              	pxCurrentTCB:
  21 0000 00000000 		.space	4
  22              		.section	.bss.pxReadyTasksLists,"aw",%nobits
  23              		.align	2
  26              	pxReadyTasksLists:
  27 0000 00000000 		.space	100
  27      00000000 
  27      00000000 
  27      00000000 
  27      00000000 
  28              		.section	.bss.xDelayedTaskList1,"aw",%nobits
  29              		.align	2
  32              	xDelayedTaskList1:
  33 0000 00000000 		.space	20
  33      00000000 
  33      00000000 
  33      00000000 
  33      00000000 
  34              		.section	.bss.xDelayedTaskList2,"aw",%nobits
  35              		.align	2
  38              	xDelayedTaskList2:
  39 0000 00000000 		.space	20
  39      00000000 
  39      00000000 
  39      00000000 
  39      00000000 
  40              		.section	.bss.pxDelayedTaskList,"aw",%nobits
  41              		.align	2
  44              	pxDelayedTaskList:
  45 0000 00000000 		.space	4
  46              		.section	.bss.pxOverflowDelayedTaskList,"aw",%nobits
  47              		.align	2
  50              	pxOverflowDelayedTaskList:
  51 0000 00000000 		.space	4
  52              		.section	.bss.xPendingReadyList,"aw",%nobits
  53              		.align	2
  56              	xPendingReadyList:
  57 0000 00000000 		.space	20
  57      00000000 
  57      00000000 
  57      00000000 
  57      00000000 
  58              		.section	.bss.xTasksWaitingTermination,"aw",%nobits
  59              		.align	2
  62              	xTasksWaitingTermination:
  63 0000 00000000 		.space	20
  63      00000000 
  63      00000000 
  63      00000000 
  63      00000000 
  64              		.section	.bss.uxDeletedTasksWaitingCleanUp,"aw",%nobits
  65              		.align	2
  68              	uxDeletedTasksWaitingCleanUp:
  69 0000 00000000 		.space	4
  70              		.section	.bss.xSuspendedTaskList,"aw",%nobits
  71              		.align	2
  74              	xSuspendedTaskList:
  75 0000 00000000 		.space	20
  75      00000000 
  75      00000000 
  75      00000000 
  75      00000000 
  76              		.section	.bss.uxCurrentNumberOfTasks,"aw",%nobits
  77              		.align	2
  80              	uxCurrentNumberOfTasks:
  81 0000 00000000 		.space	4
  82              		.section	.bss.xTickCount,"aw",%nobits
  83              		.align	2
  86              	xTickCount:
  87 0000 00000000 		.space	4
  88              		.section	.bss.uxTopReadyPriority,"aw",%nobits
  89              		.align	2
  92              	uxTopReadyPriority:
  93 0000 00000000 		.space	4
  94              		.section	.bss.xSchedulerRunning,"aw",%nobits
  95              		.align	2
  98              	xSchedulerRunning:
  99 0000 00000000 		.space	4
 100              		.section	.bss.uxPendedTicks,"aw",%nobits
 101              		.align	2
 104              	uxPendedTicks:
 105 0000 00000000 		.space	4
 106              		.section	.bss.xYieldPending,"aw",%nobits
 107              		.align	2
 110              	xYieldPending:
 111 0000 00000000 		.space	4
 112              		.section	.bss.xNumOfOverflows,"aw",%nobits
 113              		.align	2
 116              	xNumOfOverflows:
 117 0000 00000000 		.space	4
 118              		.section	.bss.uxTaskNumber,"aw",%nobits
 119              		.align	2
 122              	uxTaskNumber:
 123 0000 00000000 		.space	4
 124              		.section	.bss.xNextTaskUnblockTime,"aw",%nobits
 125              		.align	2
 128              	xNextTaskUnblockTime:
 129 0000 00000000 		.space	4
 130              		.section	.bss.xIdleTaskHandle,"aw",%nobits
 131              		.align	2
 134              	xIdleTaskHandle:
 135 0000 00000000 		.space	4
 136              		.section	.bss.uxSchedulerSuspended,"aw",%nobits
 137              		.align	2
 140              	uxSchedulerSuspended:
 141 0000 00000000 		.space	4
 142              		.section	.text.xTaskCreate,"ax",%progbits
 143              		.align	1
 144              		.global	xTaskCreate
 145              		.syntax unified
 146              		.thumb
 147              		.thumb_func
 148              		.fpu fpv4-sp-d16
 150              	xTaskCreate:
 151              	.LFB5:
 152              		.file 1 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c"
   1:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
   2:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * FreeRTOS Kernel V10.1.1
   3:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
   5:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * this software and associated documentation files (the "Software"), to deal in
   7:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * the Software without restriction, including without limitation the rights to
   8:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * subject to the following conditions:
  11:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
  12:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * The above copyright notice and this permission notice shall be included in all
  13:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * copies or substantial portions of the Software.
  14:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
  15:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
  22:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * http://www.FreeRTOS.org
  23:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * http://aws.amazon.com/freertos
  24:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
  25:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * 1 tab == 4 spaces!
  26:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
  27:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
  28:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Standard includes. */
  29:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #include <stdlib.h>
  30:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #include <string.h>
  31:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
  32:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Defining MPU_WRAPPERS_INCLUDED_FROM_API_FILE prevents task.h from redefining
  33:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** all the API functions to use the MPU wrappers.  That should only be done when
  34:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** task.h is included from an application file. */
  35:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define MPU_WRAPPERS_INCLUDED_FROM_API_FILE
  36:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
  37:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* FreeRTOS includes. */
  38:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #include "FreeRTOS.h"
  39:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #include "task.h"
  40:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #include "timers.h"
  41:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #include "stack_macros.h"
  42:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
  43:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Lint e9021, e961 and e750 are suppressed as a MISRA exception justified
  44:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** because the MPU ports require MPU_WRAPPERS_INCLUDED_FROM_API_FILE to be defined
  45:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** for the header files above, but not in this file, in order to generate the
  46:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** correct privileged Vs unprivileged linkage and placement. */
  47:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #undef MPU_WRAPPERS_INCLUDED_FROM_API_FILE /*lint !e961 !e750 !e9021. */
  48:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
  49:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Set configUSE_STATS_FORMATTING_FUNCTIONS to 2 to include the stats formatting
  50:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** functions but without including stdio.h here. */
  51:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_STATS_FORMATTING_FUNCTIONS == 1 )
  52:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* At the bottom of this file are two optional functions that can be used
  53:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	to generate human readable text from the raw data generated by the
  54:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uxTaskGetSystemState() function.  Note the formatting functions are provided
  55:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	for convenience only, and are NOT considered part of the kernel. */
  56:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#include <stdio.h>
  57:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_STATS_FORMATTING_FUNCTIONS == 1 ) */
  58:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
  59:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_PREEMPTION == 0 )
  60:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* If the cooperative scheduler is being used then a yield should not be
  61:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	performed just because a higher priority task has been woken. */
  62:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION()
  63:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #else
  64:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskYIELD_IF_USING_PREEMPTION() portYIELD_WITHIN_API()
  65:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
  66:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
  67:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Values that can be assigned to the ucNotifyState member of the TCB. */
  68:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define taskNOT_WAITING_NOTIFICATION	( ( uint8_t ) 0 )
  69:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define taskWAITING_NOTIFICATION		( ( uint8_t ) 1 )
  70:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define taskNOTIFICATION_RECEIVED		( ( uint8_t ) 2 )
  71:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
  72:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
  73:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * The value used to fill the stack of a task when the task is created.  This
  74:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * is used purely for checking the high water mark for tasks.
  75:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
  76:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskSTACK_FILL_BYTE	( 0xa5U )
  77:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
  78:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Sometimes the FreeRTOSConfig.h settings only allow a task to be created using
  79:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** dynamically allocated RAM, in which case when any task is deleted it is known
  80:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** that both the task's stack and TCB need to be freed.  Sometimes the
  81:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** FreeRTOSConfig.h settings only allow a task to be created using statically
  82:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** allocated RAM, in which case when any task is deleted it is known that neither
  83:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** the task's stack or TCB should be freed.  Sometimes the FreeRTOSConfig.h
  84:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** settings allow a task to be created using either statically or dynamically
  85:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** allocated RAM, in which case a member of the TCB is used to record whether the
  86:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** stack and/or TCB were allocated statically or dynamically, so when a task is
  87:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** deleted the RAM that was allocated dynamically is freed again and no attempt is
  88:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** made to free the RAM that was allocated statically.
  89:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is only true if it is possible for a
  90:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** task to be created using either statically or dynamically allocated RAM.  Note
  91:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** that if portUSING_MPU_WRAPPERS is 1 then a protected task can be created with
  92:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** a statically allocated stack and a dynamically allocated TCB.
  93:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** !!!NOTE!!! If the definition of tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE is
  94:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** changed then the definition of StaticTask_t must also be updated. */
  95:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE	( ( configSUPPORT_STATIC_ALLOCATION == 1 ) && ( c
  96:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB 		( ( uint8_t ) 0 )
  97:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_ONLY 			( ( uint8_t ) 1 )
  98:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskSTATICALLY_ALLOCATED_STACK_AND_TCB		( ( uint8_t ) 2 )
  99:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 100:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* If any of the following are set then task stacks are filled with a known
 101:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** value so the high water mark can be determined.  If none of the following are
 102:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** set then don't fill the stack so there is no unnecessary dependency on memset. */
 103:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( ( configCHECK_FOR_STACK_OVERFLOW > 1 ) || ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTas
 104:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	1
 105:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #else
 106:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define tskSET_NEW_STACKS_TO_KNOWN_VALUE	0
 107:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 108:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 109:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 110:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Macros used by vListTask to indicate which state a task is in.
 111:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 112:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskRUNNING_CHAR		( 'X' )
 113:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskBLOCKED_CHAR		( 'B' )
 114:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskREADY_CHAR		( 'R' )
 115:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskDELETED_CHAR		( 'D' )
 116:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define tskSUSPENDED_CHAR	( 'S' )
 117:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 118:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 119:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Some kernel aware debuggers require the data the debugger needs access to be
 120:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * global, rather than file scope.
 121:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 122:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #ifdef portREMOVE_STATIC_QUALIFIER
 123:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define static
 124:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 125:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 126:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* The name allocated to the Idle task.  This can be overridden by defining
 127:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** configIDLE_TASK_NAME in FreeRTOSConfig.h. */
 128:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #ifndef configIDLE_TASK_NAME
 129:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define configIDLE_TASK_NAME "IDLE"
 130:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 131:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 132:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
 133:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 134:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 0 then task selection is
 135:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	performed in a generic way that is not optimised to any particular
 136:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	microcontroller architecture. */
 137:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 138:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* uxTopReadyPriority holds the priority of the highest priority ready
 139:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	state task. */
 140:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )														\
 141:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{																									\
 142:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority ) > uxTopReadyPriority )														\
 143:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{																								\
 144:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			uxTopReadyPriority = ( uxPriority );														\
 145:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}																								\
 146:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	} /* taskRECORD_READY_PRIORITY */
 147:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 148:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 149:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 150:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()															\
 151:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{																									\
 152:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority = uxTopReadyPriority;														\
 153:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 																										\
 154:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority queue that contains ready tasks. */								\
 155:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		while( listLIST_IS_EMPTY( &( pxReadyTasksLists[ uxTopPriority ] ) ) )							\
 156:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{																								\
 157:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			configASSERT( uxTopPriority );																\
 158:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			--uxTopPriority;																			\
 159:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}																								\
 160:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 																										\
 161:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* listGET_OWNER_OF_NEXT_ENTRY indexes through the list, so the tasks of						\
 162:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the	same priority get an equal share of the processor time. */									\
 163:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );			\
 164:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxTopReadyPriority = uxTopPriority;																\
 165:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK */
 166:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 167:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 168:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 169:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Define away taskRESET_READY_PRIORITY() and portRESET_READY_PRIORITY() as
 170:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	they are only required when a port optimised method of task selection is
 171:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	being used. */
 172:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )
 173:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define portRESET_READY_PRIORITY( uxPriority, uxTopReadyPriority )
 174:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 175:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #else /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 176:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 177:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* If configUSE_PORT_OPTIMISED_TASK_SELECTION is 1 then task selection is
 178:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	performed in a way that is tailored to the particular microcontroller
 179:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	architecture being used. */
 180:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 181:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided.  Call the port defined macros. */
 182:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskRECORD_READY_PRIORITY( uxPriority )	portRECORD_READY_PRIORITY( uxPriority, uxTopReadyP
 183:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 184:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 185:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 186:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskSELECT_HIGHEST_PRIORITY_TASK()														\
 187:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{																								\
 188:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTopPriority;																		\
 189:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 																									\
 190:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Find the highest priority list that contains ready tasks. */								\
 191:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portGET_HIGHEST_PRIORITY( uxTopPriority, uxTopReadyPriority );								\
 192:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ uxTopPriority ] ) ) > 0 );		\
 193:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		listGET_OWNER_OF_NEXT_ENTRY( pxCurrentTCB, &( pxReadyTasksLists[ uxTopPriority ] ) );		\
 194:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	} /* taskSELECT_HIGHEST_PRIORITY_TASK() */
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 196:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/*-----------------------------------------------------------*/
 197:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 198:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* A port optimised version is provided, call it only if the TCB being reset
 199:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	is being referenced from a ready list.  If it is referenced from a delayed
 200:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	or suspended list then it won't be in a ready list. */
 201:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskRESET_READY_PRIORITY( uxPriority )														\
 202:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{																									\
 203:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ ( uxPriority ) ] ) ) == ( UBaseType_t ) 0 )	\
 204:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{																								\
 205:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			portRESET_READY_PRIORITY( ( uxPriority ), ( uxTopReadyPriority ) );							\
 206:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}																								\
 207:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 208:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 209:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 210:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 211:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 212:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 213:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* pxDelayedTaskList and pxOverflowDelayedTaskList are switched when the tick
 214:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** count overflows. */
 215:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define taskSWITCH_DELAYED_LISTS()																	\
 216:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {																									\
 217:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	List_t *pxTemp;																					\
 218:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 																									\
 219:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* The delayed tasks list should be empty when the lists are switched. */						\
 220:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( ( listLIST_IS_EMPTY( pxDelayedTaskList ) ) );										\
 221:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 																									\
 222:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxTemp = pxDelayedTaskList;																		\
 223:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = pxOverflowDelayedTaskList;													\
 224:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = pxTemp;																\
 225:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	xNumOfOverflows++;																				\
 226:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	prvResetNextTaskUnblockTime();																	\
 227:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 228:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 229:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 230:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 231:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 232:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Place the task represented by pxTCB into the appropriate ready list for
 233:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * the task.  It is inserted at the end of the list.
 234:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 235:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define prvAddTaskToReadyList( pxTCB )																\
 236:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	traceMOVED_TASK_TO_READY_STATE( pxTCB );														\
 237:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	taskRECORD_READY_PRIORITY( ( pxTCB )->uxPriority );												\
 238:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( &( pxReadyTasksLists[ ( pxTCB )->uxPriority ] ), &( ( pxTCB )->xStateListItem ) );
 239:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	tracePOST_MOVED_TASK_TO_READY_STATE( pxTCB )
 240:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 241:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 242:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 243:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Several functions take an TaskHandle_t parameter that can optionally be NULL,
 244:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * where NULL is used to indicate that the handle of the currently executing
 245:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * task should be used in place of the parameter.  This macro simply checks to
 246:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * see if the parameter is NULL and returns a pointer to the appropriate TCB.
 247:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 248:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #define prvGetTCBFromHandle( pxHandle ) ( ( ( pxHandle ) == NULL ) ? pxCurrentTCB : ( pxHandle ) )
 249:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 250:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* The item value of the event list item is normally used to hold the priority
 251:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** of the task to which it belongs (coded to allow it to be held in reverse
 252:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** priority order).  However, it is occasionally borrowed for other purposes.  It
 253:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** is important its value is not updated due to a task priority change while it is
 254:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** being used for another purpose.  The following bit definition is used to inform
 255:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** the scheduler that the value should not be changed - in which case it is the
 256:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** responsibility of whichever module is using the value to ensure it gets set back
 257:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** to its original value when it is released. */
 258:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_16_BIT_TICKS == 1 )
 259:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x8000U
 260:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #else
 261:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#define taskEVENT_LIST_ITEM_VALUE_IN_USE	0x80000000UL
 262:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 263:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 264:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 265:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Task control block.  A task control block (TCB) is allocated for each task,
 266:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * and stores task state information, including a pointer to the task's context
 267:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * (the task's run time environment, including register values)
 268:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 269:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** typedef struct tskTaskControlBlock /* The old naming convention is used to prevent breaking kernel 
 270:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 271:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	volatile StackType_t	*pxTopOfStack;	/*< Points to the location of the last item placed on the task
 272:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 273:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 274:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xMPU_SETTINGS	xMPUSettings;		/*< The MPU settings are defined as part of the port layer.  THIS MU
 275:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 276:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 277:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	ListItem_t			xStateListItem;	/*< The list that the state list item of a task is reference from den
 278:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	ListItem_t			xEventListItem;		/*< Used to reference a task from an event list. */
 279:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t			uxPriority;			/*< The priority of the task.  0 is the lowest priority. */
 280:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	StackType_t			*pxStack;			/*< Points to the start of the stack. */
 281:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	char				pcTaskName[ configMAX_TASK_NAME_LEN ];/*< Descriptive name given to the task when created.
 282:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 283:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( ( portSTACK_GROWTH > 0 ) || ( configRECORD_STACK_HIGH_ADDRESS == 1 ) )
 284:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		StackType_t		*pxEndOfStack;		/*< Points to the highest valid address for the stack. */
 285:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 286:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 287:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 288:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxCriticalNesting;	/*< Holds the critical section nesting depth for ports that do no
 289:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 290:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 291:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TRACE_FACILITY == 1 )
 292:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTCBNumber;		/*< Stores a number that increments each time a TCB is created.  It al
 293:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxTaskNumber;		/*< Stores a number specifically for use by third party trace code. *
 294:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 295:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 296:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 297:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxBasePriority;		/*< The priority last assigned to the task - used by the priority i
 298:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		UBaseType_t		uxMutexesHeld;
 299:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 300:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 301:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 302:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		TaskHookFunction_t pxTaskTag;
 303:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 304:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 305:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS > 0 )
 306:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		void			*pvThreadLocalStoragePointers[ configNUM_THREAD_LOCAL_STORAGE_POINTERS ];
 307:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 308:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 309:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( configGENERATE_RUN_TIME_STATS == 1 )
 310:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uint32_t		ulRunTimeCounter;	/*< Stores the amount of time the task has spent in the Running state
 311:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 312:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 313:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
 314:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Allocate a Newlib reent structure that is specific to this task.
 315:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		Note Newlib support has been included by popular demand, but is not
 316:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		used by the FreeRTOS maintainers themselves.  FreeRTOS is not
 317:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		responsible for resulting newlib operation.  User must be familiar with
 318:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		newlib and must provide system-wide implementations of the necessary
 319:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		stubs. Be warned that (at the time of writing) the current newlib design
 320:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		implements a system-wide malloc() that must be provided with locks. */
 321:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		struct	_reent xNewLib_reent;
 322:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 323:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 324:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TASK_NOTIFICATIONS == 1 )
 325:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		volatile uint32_t ulNotifiedValue;
 326:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		volatile uint8_t ucNotifyState;
 327:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 328:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 329:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* See the comments above the definition of
 330:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE. */
 331:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consolida
 332:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uint8_t	ucStaticallyAllocated; 		/*< Set to pdTRUE if the task is a statically allocated to ensur
 333:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 334:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 335:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
 336:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uint8_t ucDelayAborted;
 337:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 338:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 339:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( configUSE_POSIX_ERRNO == 1 )
 340:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		int iTaskErrno;
 341:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 342:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 343:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** } tskTCB;
 344:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 345:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* The old tskTCB name is maintained above then typedefed to the new TCB_t name
 346:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** below to enable the use of older kernel aware debuggers. */
 347:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** typedef tskTCB TCB_t;
 348:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 349:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*lint -save -e956 A manual analysis and inspection has been used to determine
 350:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** which static variables must be declared volatile. */
 351:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA TCB_t * volatile pxCurrentTCB = NULL;
 352:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 353:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Lists for ready and blocked tasks. --------------------
 354:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** xDelayedTaskList1 and xDelayedTaskList2 could be move to function scople but
 355:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** doing so breaks some kernel aware debuggers and debuggers that rely on removing
 356:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** the static qualifier. */
 357:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t pxReadyTasksLists[ configMAX_PRIORITIES ];/*< Prioritised ready tasks
 358:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList1;						/*< Delayed tasks. */
 359:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xDelayedTaskList2;						/*< Delayed tasks (two lists are used - one f
 360:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxDelayedTaskList;				/*< Points to the delayed task list 
 361:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t * volatile pxOverflowDelayedTaskList;		/*< Points to the delayed task
 362:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static List_t xPendingReadyList;						/*< Tasks that have been readied while the sc
 363:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 364:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( INCLUDE_vTaskDelete == 1 )
 365:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 366:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xTasksWaitingTermination;				/*< Tasks that have been deleted - but 
 367:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static volatile UBaseType_t uxDeletedTasksWaitingCleanUp = ( UBaseType_t ) 0U;
 368:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 369:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 370:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 371:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 372:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 373:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static List_t xSuspendedTaskList;					/*< Tasks that are currently suspended. */
 374:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 375:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 376:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 377:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Global POSIX errno. Its value is changed upon context switching to match
 378:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** the errno of the currently running task. */
 379:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_POSIX_ERRNO == 1 )
 380:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	int FreeRTOS_errno = 0;
 381:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 382:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 383:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Other file private variables. --------------------------------*/
 384:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxCurrentNumberOfTasks 	= ( UBaseType_t ) 0U;
 385:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xTickCount 				= ( TickType_t ) configINITIAL_TICK_COUNT
 386:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxTopReadyPriority 		= tskIDLE_PRIORITY;
 387:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xSchedulerRunning 		= pdFALSE;
 388:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxPendedTicks 			= ( UBaseType_t ) 0U;
 389:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xYieldPending 			= pdFALSE;
 390:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile BaseType_t xNumOfOverflows 			= ( BaseType_t ) 0;
 391:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static UBaseType_t uxTaskNumber 					= ( UBaseType_t ) 0U;
 392:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile TickType_t xNextTaskUnblockTime		= ( TickType_t ) 0U; /* Initialise
 393:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static TaskHandle_t xIdleTaskHandle					= NULL;			/*< Holds the handle of the idle 
 394:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 395:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Context switches are held pending while the scheduler is suspended.  Also,
 396:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** interrupts must not manipulate the xStateListItem of a TCB, or any of the
 397:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** lists the xStateListItem can be referenced from, if the scheduler is suspended.
 398:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** If an interrupt needs to unblock a task while the scheduler is suspended then it
 399:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** moves the task's event list item into the xPendingReadyList, ready for the
 400:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** kernel to move the task from the pending ready list into the real ready list
 401:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** when the scheduler is unsuspended.  The pending ready list itself can only be
 402:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** accessed from a critical section. */
 403:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** PRIVILEGED_DATA static volatile UBaseType_t uxSchedulerSuspended	= ( UBaseType_t ) pdFALSE;
 404:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 405:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configGENERATE_RUN_TIME_STATS == 1 )
 406:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 407:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Do not move these variables to function scope as doing so prevents the
 408:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	code working with debuggers that need to remove the static qualifier. */
 409:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTaskSwitchedInTime = 0UL;	/*< Holds the value of a timer/counter
 410:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	PRIVILEGED_DATA static uint32_t ulTotalRunTime = 0UL;		/*< Holds the total amount of execution tim
 411:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 412:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 413:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 414:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*lint -restore */
 415:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 416:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 417:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 418:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* Callback function prototypes. --------------------------*/
 419:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if(  configCHECK_FOR_STACK_OVERFLOW > 0 )
 420:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 421:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	extern void vApplicationStackOverflowHook( TaskHandle_t xTask, char *pcTaskName );
 422:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 423:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 424:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 425:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TICK_HOOK > 0 )
 426:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 427:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	extern void vApplicationTickHook( void ); /*lint !e526 Symbol not defined as it is an application 
 428:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 429:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 430:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 431:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 432:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 433:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	extern void vApplicationGetIdleTaskMemory( StaticTask_t **ppxIdleTaskTCBBuffer, StackType_t **ppxI
 434:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 435:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 436:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 437:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* File private functions. --------------------------------*/
 438:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 439:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /**
 440:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Utility task that simply returns pdTRUE if the task referenced by xTask is
 441:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * currently in the Suspended state, or pdFALSE if the task referenced by xTask
 442:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * is in any other state.
 443:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 444:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
 445:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 446:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask ) PRIVILEGED_FUNCTION;
 447:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 448:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
 449:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 450:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 451:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Utility to ready all the lists used by the scheduler.  This is called
 452:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * automatically upon the creation of the first task.
 453:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 454:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void ) PRIVILEGED_FUNCTION;
 455:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 456:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 457:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * The idle task, which as all tasks is implemented as a never ending loop.
 458:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * The idle task is automatically created and added to the ready lists upon
 459:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * creation of the first user task.
 460:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
 461:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION_PROTO() macro is used to allow port/compiler specific
 462:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
 463:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
 464:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
 465:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
 466:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 467:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION_PROTO( prvIdleTask, pvParameters );
 468:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 469:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 470:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Utility to free all memory allocated by the scheduler to hold a TCB,
 471:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * including the stack pointed to by the TCB.
 472:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
 473:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * This does not free memory allocated by the task itself (i.e. memory
 474:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * allocated by calls to pvPortMalloc from within the tasks application code).
 475:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 476:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
 477:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 478:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB ) PRIVILEGED_FUNCTION;
 479:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 480:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 481:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 482:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 483:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Used only by the idle task.  This checks to see if anything has been placed
 484:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * in the list of tasks waiting to be deleted.  If so the task is cleaned up
 485:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * and its TCB deleted.
 486:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 487:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void ) PRIVILEGED_FUNCTION;
 488:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 489:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 490:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * The currently executing task is entering the Blocked state.  Add the task to
 491:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * either the current or the overflow delayed task list.
 492:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 493:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
 494:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 495:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 496:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Fills an TaskStatus_t structure with information on each task that is
 497:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * referenced from the pxList list (which may be a ready list, a delayed list,
 498:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * a suspended list, etc.).
 499:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
 500:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * THIS FUNCTION IS INTENDED FOR DEBUGGING ONLY, AND SHOULD NOT BE CALLED FROM
 501:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * NORMAL APPLICATION CODE.
 502:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 503:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
 504:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 505:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
 506:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 507:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 508:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 509:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 510:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Searches pxList for a task with name pcNameToQuery - returning a handle to
 511:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * the task if it is found, or NULL if the task is not found.
 512:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 513:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
 514:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 515:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] ) PRIVI
 516:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 517:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 518:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 519:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 520:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * When a task is created, the stack of the task is filled with a known value.
 521:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * This function determines the 'high water mark' of the task stack by
 522:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * determining how much of the stack remains at the original preset value.
 523:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 524:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
 525:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 526:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte ) PRIVILEGE
 527:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 528:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 529:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 530:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 531:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Return the amount of time, in ticks, that will pass before the kernel will
 532:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * next move a task from the Blocked state to the Running state.
 533:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
 534:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * This conditional compilation should use inequality to 0, not equality to 1.
 535:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * This is to ensure portSUPPRESS_TICKS_AND_SLEEP() can be called when user
 536:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * defined low power mode implementations require configUSE_TICKLESS_IDLE to be
 537:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * set to a value other than 1.
 538:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 539:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
 540:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 541:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void ) PRIVILEGED_FUNCTION;
 542:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 543:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 544:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 545:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 546:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Set xNextTaskUnblockTime to the time at which the next Blocked state task
 547:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * will exit the Blocked state.
 548:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 549:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void );
 550:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 551:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
 552:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 553:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/*
 554:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	 * Helper function used to pad task names with spaces when printing out
 555:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	 * human readable tables of task information.
 556:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	 */
 557:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName ) PRIVILEGED_FUNCTION;
 558:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 559:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 560:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 561:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 562:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Called after a Task_t structure has been allocated either statically or
 563:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * dynamically to fill in the structure's members.
 564:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 565:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 566:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									const char * const pcName, 		/*lint !e971 Unqualified char types are allowed for strings a
 567:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 568:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 569:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 570:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 571:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 572:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions ) PRIVILEGED_FUNCTION;
 573:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 574:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 575:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * Called after a new task has been created and initialised to place the task
 576:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * under the control of the scheduler.
 577:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 578:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB ) PRIVILEGED_FUNCTION;
 579:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 580:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
 581:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * freertos_tasks_c_additions_init() should only be called if the user definable
 582:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is the only macro
 583:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * called by the function.
 584:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
 585:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
 586:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 587:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static void freertos_tasks_c_additions_init( void ) PRIVILEGED_FUNCTION;
 588:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 589:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif
 590:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 591:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 592:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 593:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_STATIC_ALLOCATION == 1 )
 594:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 595:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskCreateStatic(	TaskFunction_t pxTaskCode,
 596:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 597:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 598:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 599:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 600:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									StackType_t * const puxStackBuffer,
 601:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									StaticTask_t * const pxTaskBuffer )
 602:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 603:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 604:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
 605:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 606:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( puxStackBuffer != NULL );
 607:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskBuffer != NULL );
 608:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 609:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if( configASSERT_DEFINED == 1 )
 610:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 611:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Sanity check that the size of the structure used to declare a
 612:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			variable of type StaticTask_t equals the size of the real task
 613:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			structure. */
 614:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			volatile size_t xSize = sizeof( StaticTask_t );
 615:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			configASSERT( xSize == sizeof( TCB_t ) );
 616:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			( void ) xSize; /* Prevent lint warning when configASSERT() is not used. */
 617:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 618:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configASSERT_DEFINED */
 619:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 620:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 621:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskBuffer != NULL ) && ( puxStackBuffer != NULL ) )
 622:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 623:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* The memory used for the task's TCB and stack are passed into this
 624:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			function - use them. */
 625:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskBuffer; /*lint !e740 !e9087 Unusual cast is ok as the structures ar
 626:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = ( StackType_t * ) puxStackBuffer;
 627:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 628:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consoli
 629:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
 630:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 631:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 632:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 633:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
 634:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 635:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 636:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ulStackDepth, pvParameters, uxPriority, &xReturn, pxNe
 637:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 638:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 639:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
 640:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 641:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = NULL;
 642:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 643:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 644:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 645:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 646:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 647:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* SUPPORT_STATIC_ALLOCATION */
 648:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 649:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 650:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) )
 651:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 652:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestrictedStatic( const TaskParameters_t * const pxTaskDefinition, TaskHandl
 653:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 654:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 655:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 656:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 657:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer != NULL );
 658:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->pxTaskBuffer != NULL );
 659:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 660:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( ( pxTaskDefinition->puxStackBuffer != NULL ) && ( pxTaskDefinition->pxTaskBuffer != NULL ) )
 661:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 662:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 663:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 664:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 665:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pxTaskDefinition->pxTaskBuffer;
 666:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 667:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Store the stack location in the TCB. */
 668:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 669:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 670:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 )
 671:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
 672:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 673:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				task was created statically in case the task is later deleted. */
 674:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_AND_TCB;
 675:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
 676:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 677:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 678:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 679:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pcName,
 680:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									( uint32_t ) pxTaskDefinition->usStackDepth,
 681:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->pvParameters,
 682:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->uxPriority,
 683:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									pxCreatedTask, pxNewTCB,
 684:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									pxTaskDefinition->xRegions );
 685:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 686:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 687:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 688:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 689:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 690:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 691:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 692:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 693:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 1 ) */
 694:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 695:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 696:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( ( portUSING_MPU_WRAPPERS == 1 ) && ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) )
 697:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 698:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreateRestricted( const TaskParameters_t * const pxTaskDefinition, TaskHandle_t *p
 699:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 700:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 701:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 702:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 703:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTaskDefinition->puxStackBuffer );
 704:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 705:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxTaskDefinition->puxStackBuffer != NULL )
 706:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 707:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends
 708:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			on the implementation of the port malloc function and whether or
 709:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			not static allocation is being used. */
 710:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 711:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 712:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 713:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
 714:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Store the stack location in the TCB. */
 715:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = pxTaskDefinition->puxStackBuffer;
 716:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 717:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#if( configSUPPORT_STATIC_ALLOCATION == 1 )
 718:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
 719:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Tasks can be created statically or dynamically, so note
 720:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					this task had a statically allocated stack in case it is
 721:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					later deleted.  The TCB was allocated dynamically. */
 722:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxNewTCB->ucStaticallyAllocated = tskSTATICALLY_ALLOCATED_STACK_ONLY;
 723:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
 724:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#endif
 725:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 726:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvInitialiseNewTask(	pxTaskDefinition->pvTaskCode,
 727:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pcName,
 728:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										( uint32_t ) pxTaskDefinition->usStackDepth,
 729:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->pvParameters,
 730:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->uxPriority,
 731:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										pxCreatedTask, pxNewTCB,
 732:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										pxTaskDefinition->xRegions );
 733:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 734:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvAddNewTaskToReadyList( pxNewTCB );
 735:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 736:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
 737:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 738:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 739:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 740:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 741:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 742:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
 743:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 744:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 745:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configSUPPORT_DYNAMIC_ALLOCATION == 1 )
 746:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 747:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCreate(	TaskFunction_t pxTaskCode,
 748:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings and 
 749:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							const configSTACK_DEPTH_TYPE usStackDepth,
 750:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							void * const pvParameters,
 751:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							UBaseType_t uxPriority,
 752:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							TaskHandle_t * const pxCreatedTask )
 753:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 153              		.loc 1 753 0
 154              		.cfi_startproc
 155              		@ args = 8, pretend = 0, frame = 32
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 00B5     		push	{lr}
 158              	.LCFI0:
 159              		.cfi_def_cfa_offset 4
 160              		.cfi_offset 14, -4
 161 0002 8DB0     		sub	sp, sp, #52
 162              	.LCFI1:
 163              		.cfi_def_cfa_offset 56
 164 0004 0790     		str	r0, [sp, #28]
 165 0006 0691     		str	r1, [sp, #24]
 166 0008 0493     		str	r3, [sp, #16]
 167 000a 1346     		mov	r3, r2	@ movhi
 168 000c ADF81630 		strh	r3, [sp, #22]	@ movhi
 169              	.LBB111:
 754:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNewTCB;
 755:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
 756:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 757:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If the stack grows down then allocate the stack then the TCB so the stack
 758:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		does not grow into the TCB.  Likewise if the stack grows up then allocate
 759:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the TCB then the stack. */
 760:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if( portSTACK_GROWTH > 0 )
 761:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 762:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the TCB.  Where the memory comes from depends on
 763:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			the implementation of the port malloc function and whether or not static
 764:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			allocation is being used. */
 765:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) );
 766:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 767:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxNewTCB != NULL )
 768:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
 769:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the stack used by the task being created.
 770:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				The base of the stack memory stored in the TCB so the task can
 771:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				be deleted later if required. */
 772:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxNewTCB->pxStack = ( StackType_t * ) pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( Sta
 773:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 774:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB->pxStack == NULL )
 775:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
 776:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Could not allocate the stack.  Delete the allocated TCB. */
 777:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					vPortFree( pxNewTCB );
 778:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxNewTCB = NULL;
 779:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
 780:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
 781:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 782:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#else /* portSTACK_GROWTH */
 783:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 784:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		StackType_t *pxStack;
 785:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 786:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Allocate space for the stack used by the task being created. */
 787:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxStack = pvPortMalloc( ( ( ( size_t ) usStackDepth ) * sizeof( StackType_t ) ) ); /*lint !e9079
 170              		.loc 1 787 0
 171 0010 BDF81630 		ldrh	r3, [sp, #22]
 172 0014 9B00     		lsls	r3, r3, #2
 173 0016 1846     		mov	r0, r3
 174 0018 FFF7FEFF 		bl	pvPortMalloc
 175 001c 0990     		str	r0, [sp, #36]
 788:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 789:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxStack != NULL )
 176              		.loc 1 789 0
 177 001e 099B     		ldr	r3, [sp, #36]
 178 0020 002B     		cmp	r3, #0
 179 0022 0ED0     		beq	.L2
 790:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
 791:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Allocate space for the TCB. */
 792:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxNewTCB = ( TCB_t * ) pvPortMalloc( sizeof( TCB_t ) ); /*lint !e9087 !e9079 All values returne
 180              		.loc 1 792 0
 181 0024 5820     		movs	r0, #88
 182 0026 FFF7FEFF 		bl	pvPortMalloc
 183 002a 0B90     		str	r0, [sp, #44]
 793:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 794:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxNewTCB != NULL )
 184              		.loc 1 794 0
 185 002c 0B9B     		ldr	r3, [sp, #44]
 186 002e 002B     		cmp	r3, #0
 187 0030 03D0     		beq	.L3
 795:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
 796:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Store the stack location in the TCB. */
 797:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxNewTCB->pxStack = pxStack;
 188              		.loc 1 797 0
 189 0032 0B9B     		ldr	r3, [sp, #44]
 190 0034 099A     		ldr	r2, [sp, #36]
 191 0036 1A63     		str	r2, [r3, #48]
 192 0038 05E0     		b	.L5
 193              	.L3:
 798:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
 799:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
 800:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
 801:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The stack cannot be used as the TCB was not created.  Free
 802:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					it again. */
 803:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					vPortFree( pxStack );
 194              		.loc 1 803 0
 195 003a 0998     		ldr	r0, [sp, #36]
 196 003c FFF7FEFF 		bl	vPortFree
 197 0040 01E0     		b	.L5
 198              	.L2:
 804:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
 805:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
 806:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
 807:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
 808:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxNewTCB = NULL;
 199              		.loc 1 808 0
 200 0042 0023     		movs	r3, #0
 201 0044 0B93     		str	r3, [sp, #44]
 202              	.L5:
 203              	.LBE111:
 809:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
 810:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 811:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* portSTACK_GROWTH */
 812:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 813:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxNewTCB != NULL )
 204              		.loc 1 813 0
 205 0046 0B9B     		ldr	r3, [sp, #44]
 206 0048 002B     		cmp	r3, #0
 207 004a 14D0     		beq	.L6
 814:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 815:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e9029 !e731 Macro has been consoli
 816:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
 817:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Tasks can be created statically or dynamically, so note this
 818:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				task was created dynamically in case it is later deleted. */
 819:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxNewTCB->ucStaticallyAllocated = tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB;
 820:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
 821:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif /* configSUPPORT_STATIC_ALLOCATION */
 822:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 823:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			prvInitialiseNewTask( pxTaskCode, pcName, ( uint32_t ) usStackDepth, pvParameters, uxPriority, p
 208              		.loc 1 823 0
 209 004c BDF81620 		ldrh	r2, [sp, #22]
 210 0050 0023     		movs	r3, #0
 211 0052 0393     		str	r3, [sp, #12]
 212 0054 0B9B     		ldr	r3, [sp, #44]
 213 0056 0293     		str	r3, [sp, #8]
 214 0058 0F9B     		ldr	r3, [sp, #60]
 215 005a 0193     		str	r3, [sp, #4]
 216 005c 0E9B     		ldr	r3, [sp, #56]
 217 005e 0093     		str	r3, [sp]
 218 0060 049B     		ldr	r3, [sp, #16]
 219 0062 0699     		ldr	r1, [sp, #24]
 220 0064 0798     		ldr	r0, [sp, #28]
 221 0066 FFF7FEFF 		bl	prvInitialiseNewTask
 824:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			prvAddNewTaskToReadyList( pxNewTCB );
 222              		.loc 1 824 0
 223 006a 0B98     		ldr	r0, [sp, #44]
 224 006c FFF7FEFF 		bl	prvAddNewTaskToReadyList
 825:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
 225              		.loc 1 825 0
 226 0070 0123     		movs	r3, #1
 227 0072 0A93     		str	r3, [sp, #40]
 228 0074 02E0     		b	.L7
 229              	.L6:
 826:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 827:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
 828:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 829:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY;
 230              		.loc 1 829 0
 231 0076 4FF0FF33 		mov	r3, #-1
 232 007a 0A93     		str	r3, [sp, #40]
 233              	.L7:
 830:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 831:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 832:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 234              		.loc 1 832 0
 235 007c 0A9B     		ldr	r3, [sp, #40]
 833:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 236              		.loc 1 833 0
 237 007e 1846     		mov	r0, r3
 238 0080 0DB0     		add	sp, sp, #52
 239              	.LCFI2:
 240              		.cfi_def_cfa_offset 4
 241              		@ sp needed
 242 0082 5DF804FB 		ldr	pc, [sp], #4
 243              		.cfi_endproc
 244              	.LFE5:
 246              		.section	.text.prvInitialiseNewTask,"ax",%progbits
 247              		.align	1
 248              		.syntax unified
 249              		.thumb
 250              		.thumb_func
 251              		.fpu fpv4-sp-d16
 253              	prvInitialiseNewTask:
 254              	.LFB6:
 834:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 835:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configSUPPORT_DYNAMIC_ALLOCATION */
 836:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
 837:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 838:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvInitialiseNewTask( 	TaskFunction_t pxTaskCode,
 839:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									const char * const pcName,		/*lint !e971 Unqualified char types are allowed for strings an
 840:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									const uint32_t ulStackDepth,
 841:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									void * const pvParameters,
 842:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									UBaseType_t uxPriority,
 843:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									TaskHandle_t * const pxCreatedTask,
 844:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									TCB_t *pxNewTCB,
 845:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 									const MemoryRegion_t * const xRegions )
 846:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 255              		.loc 1 846 0
 256              		.cfi_startproc
 257              		@ args = 16, pretend = 0, frame = 32
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 00B5     		push	{lr}
 260              	.LCFI3:
 261              		.cfi_def_cfa_offset 4
 262              		.cfi_offset 14, -4
 263 0002 89B0     		sub	sp, sp, #36
 264              	.LCFI4:
 265              		.cfi_def_cfa_offset 40
 266 0004 0390     		str	r0, [sp, #12]
 267 0006 0291     		str	r1, [sp, #8]
 268 0008 0192     		str	r2, [sp, #4]
 269 000a 0093     		str	r3, [sp]
 847:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** StackType_t *pxTopOfStack;
 848:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** UBaseType_t x;
 849:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 850:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
 851:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Should the task be created in privileged mode? */
 852:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		BaseType_t xRunPrivileged;
 853:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( ( uxPriority & portPRIVILEGE_BIT ) != 0U )
 854:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 855:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdTRUE;
 856:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 857:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
 858:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 859:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xRunPrivileged = pdFALSE;
 860:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 861:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxPriority &= ~portPRIVILEGE_BIT;
 862:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS == 1 */
 863:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 864:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( pcName );
 270              		.loc 1 864 0
 271 000c 029B     		ldr	r3, [sp, #8]
 272 000e 002B     		cmp	r3, #0
 273 0010 09D1     		bne	.L10
 274              	.LBB112:
 275              	.LBB113:
 276              		.file 2 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable
   1:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*
   2:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FreeRTOS Kernel V10.1.1
   3:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Copyright (C) 2018 Amazon.com, Inc. or its affiliates.  All Rights Reserved.
   4:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
   5:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   6:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * this software and associated documentation files (the "Software"), to deal in
   7:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software without restriction, including without limitation the rights to
   8:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
   9:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  10:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * subject to the following conditions:
  11:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  12:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The above copyright notice and this permission notice shall be included in all
  13:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * copies or substantial portions of the Software.
  14:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  15:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  16:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  17:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  18:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  19:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  20:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  21:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  22:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://www.FreeRTOS.org
  23:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * http://aws.amazon.com/freertos
  24:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  25:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * 1 tab == 4 spaces!
  26:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  27:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  28:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  29:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef PORTMACRO_H
  30:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define PORTMACRO_H
  31:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  32:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef __cplusplus
  33:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern "C" {
  34:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  35:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  36:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------
  37:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * Port specific definitions.
  38:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  39:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * The settings in this file configure FreeRTOS correctly for the
  40:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * given hardware and compiler.
  41:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *
  42:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  * These settings should not be altered.
  43:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  *-----------------------------------------------------------
  44:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h ****  */
  45:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  46:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Type definitions. */
  47:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCHAR		char
  48:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portFLOAT		float
  49:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDOUBLE		double
  50:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portLONG		long
  51:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSHORT		short
  52:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_TYPE	uint32_t
  53:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBASE_TYPE	long
  54:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  55:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef portSTACK_TYPE StackType_t;
  56:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef long BaseType_t;
  57:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** typedef unsigned long UBaseType_t;
  58:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  59:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if( configUSE_16_BIT_TICKS == 1 )
  60:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint16_t TickType_t;
  61:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffff
  62:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #else
  63:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	typedef uint32_t TickType_t;
  64:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portMAX_DELAY ( TickType_t ) 0xffffffffUL
  65:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  66:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* 32-bit tick type on a 32-bit architecture, so reads of the tick count do
  67:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	not need to be guarded with a critical section. */
  68:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portTICK_TYPE_IS_ATOMIC 1
  69:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
  70:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  71:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  72:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specifics. */
  73:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSTACK_GROWTH			( -1 )
  74:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTICK_PERIOD_MS			( ( TickType_t ) 1000 / configTICK_RATE_HZ )
  75:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portBYTE_ALIGNMENT			8
  76:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  77:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  78:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Scheduler utilities. */
  79:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD() 															\
  80:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {																				\
  81:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Set a PendSV to request a context switch. */								\
  82:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	portNVIC_INT_CTRL_REG = portNVIC_PENDSVSET_BIT;								\
  83:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 																				\
  84:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Barriers are normally not required but do ensure the code is completely	\
  85:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	within the specified behaviour for the architecture. */						\
  86:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "dsb" ::: "memory" );										\
  87:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "isb" );													\
  88:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
  89:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  90:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_INT_CTRL_REG		( * ( ( volatile uint32_t * ) 0xe000ed04 ) )
  91:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNVIC_PENDSVSET_BIT		( 1UL << 28UL )
  92:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEND_SWITCHING_ISR( xSwitchRequired ) if( xSwitchRequired != pdFALSE ) portYIELD()
  93:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portYIELD_FROM_ISR( x ) portEND_SWITCHING_ISR( x )
  94:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
  95:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
  96:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Critical section management. */
  97:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortEnterCritical( void );
  98:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** extern void vPortExitCritical( void );
  99:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portSET_INTERRUPT_MASK_FROM_ISR()		ulPortRaiseBASEPRI()
 100:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portCLEAR_INTERRUPT_MASK_FROM_ISR(x)	vPortSetBASEPRI(x)
 101:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portDISABLE_INTERRUPTS()				vPortRaiseBASEPRI()
 102:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENABLE_INTERRUPTS()					vPortSetBASEPRI(0)
 103:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portENTER_CRITICAL()					vPortEnterCritical()
 104:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portEXIT_CRITICAL()						vPortExitCritical()
 105:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 106:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 107:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 108:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Task function macros as described on the FreeRTOS.org WEB site.  These are
 109:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** not necessary for to use this port.  They are defined so the common demo files
 110:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** (which build with all the ports) will build. */
 111:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION_PROTO( vFunction, pvParameters ) void vFunction( void *pvParameters )
 112:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portTASK_FUNCTION( vFunction, pvParameters ) void vFunction( void *pvParameters )
 113:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 114:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 115:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Tickless idle/low power functionality. */
 116:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portSUPPRESS_TICKS_AND_SLEEP
 117:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	extern void vPortSuppressTicksAndSleep( TickType_t xExpectedIdleTime );
 118:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime ) vPortSuppressTicksAndSleep( xExpectedIdl
 119:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 120:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 121:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 122:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* Architecture specific optimisations. */
 123:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef configUSE_PORT_OPTIMISED_TASK_SELECTION
 124:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
 125:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 126:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 127:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #if configUSE_PORT_OPTIMISED_TASK_SELECTION == 1
 128:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 129:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Generic helper function. */
 130:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__attribute__( ( always_inline ) ) static inline uint8_t ucPortCountLeadingZeros( uint32_t ulBitma
 131:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 132:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	uint8_t ucReturn;
 133:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 134:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		__asm volatile ( "clz %0, %1" : "=r" ( ucReturn ) : "r" ( ulBitmap ) : "memory" );
 135:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 136:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 137:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 138:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Check the configuration. */
 139:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#if( configMAX_PRIORITIES > 32 )
 140:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		#error configUSE_PORT_OPTIMISED_TASK_SELECTION can only be set to 1 when configMAX_PRIORITIES is 
 141:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#endif
 142:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 143:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Store/clear the ready priorities in a bit map. */
 144:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRECORD_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) |= ( 1UL 
 145:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portRESET_READY_PRIORITY( uxPriority, uxReadyPriorities ) ( uxReadyPriorities ) &= ~( 1UL 
 146:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 147:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/*-----------------------------------------------------------*/
 148:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 149:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portGET_HIGHEST_PRIORITY( uxTopPriority, uxReadyPriorities ) uxTopPriority = ( 31UL - ( ui
 150:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 151:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif /* configUSE_PORT_OPTIMISED_TASK_SELECTION */
 152:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 153:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 154:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 155:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifdef configASSERT
 156:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	void vPortValidateInterruptPriority( void );
 157:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portASSERT_IF_INTERRUPT_PRIORITY_INVALID() 	vPortValidateInterruptPriority()
 158:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 159:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 160:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /* portNOP() is not required by this port. */
 161:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portNOP()
 162:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 163:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #define portINLINE	__inline
 164:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 165:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #ifndef portFORCE_INLINE
 166:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	#define portFORCE_INLINE inline __attribute__(( always_inline))
 167:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** #endif
 168:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 169:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static BaseType_t xPortIsInsideInterrupt( void )
 170:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 171:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulCurrentInterrupt;
 172:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** BaseType_t xReturn;
 173:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 174:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* Obtain the number of the currently executing interrupt. */
 175:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile( "mrs %0, ipsr" : "=r"( ulCurrentInterrupt ) :: "memory" );
 176:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 177:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	if( ulCurrentInterrupt == 0 )
 178:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 179:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdFALSE;
 180:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 181:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	else
 182:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	{
 183:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		xReturn = pdTRUE;
 184:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 185:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 186:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return xReturn;
 187:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 188:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 189:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 190:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 191:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortRaiseBASEPRI( void )
 192:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 193:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulNewBASEPRI;
 194:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 277              		.loc 2 195 0 discriminator 1
 278              		.syntax unified
 279              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 280 0012 4FF05003 			mov r3, #80												
 281 0016 83F31188 		msr basepri, r3											
 282 001a BFF36F8F 		isb														
 283 001e BFF34F8F 		dsb														
 284              	
 285              	@ 0 "" 2
 286              		.thumb
 287              		.syntax unified
 288 0022 0593     		str	r3, [sp, #20]
 289              	.L11:
 290              	.LBE113:
 291              	.LBE112:
 292              		.loc 1 864 0 discriminator 1
 293 0024 FEE7     		b	.L11
 294              	.L10:
 865:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 866:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Avoid dependency on memset() if it is not required. */
 867:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( tskSET_NEW_STACKS_TO_KNOWN_VALUE == 1 )
 868:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 869:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Fill the stack with a known value to assist debugging. */
 870:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		( void ) memset( pxNewTCB->pxStack, ( int ) tskSTACK_FILL_BYTE, ( size_t ) ulStackDepth * sizeof(
 295              		.loc 1 870 0
 296 0026 0C9B     		ldr	r3, [sp, #48]
 297 0028 186B     		ldr	r0, [r3, #48]
 298 002a 019B     		ldr	r3, [sp, #4]
 299 002c 9B00     		lsls	r3, r3, #2
 300 002e 1A46     		mov	r2, r3
 301 0030 A521     		movs	r1, #165
 302 0032 FFF7FEFF 		bl	memset
 871:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 872:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* tskSET_NEW_STACKS_TO_KNOWN_VALUE */
 873:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 874:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Calculate the top of stack address.  This depends on whether the stack
 875:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	grows from high memory to low (as per the 80x86) or vice versa.
 876:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	portSTACK_GROWTH is used to make the result positive or negative as required
 877:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	by the port. */
 878:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( portSTACK_GROWTH < 0 )
 879:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 880:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = &( pxNewTCB->pxStack[ ulStackDepth - ( uint32_t ) 1 ] );
 303              		.loc 1 880 0
 304 0036 0C9B     		ldr	r3, [sp, #48]
 305 0038 1A6B     		ldr	r2, [r3, #48]
 306 003a 019B     		ldr	r3, [sp, #4]
 307 003c 03F18043 		add	r3, r3, #1073741824
 308 0040 013B     		subs	r3, r3, #1
 309 0042 9B00     		lsls	r3, r3, #2
 310 0044 1344     		add	r3, r3, r2
 311 0046 0693     		str	r3, [sp, #24]
 881:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = ( StackType_t * ) ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack ) & ( ~( ( portPOINTE
 312              		.loc 1 881 0
 313 0048 069B     		ldr	r3, [sp, #24]
 314 004a 23F00703 		bic	r3, r3, #7
 315 004e 0693     		str	r3, [sp, #24]
 882:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 883:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the calculated top of stack is correct. */
 884:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxTopOfStack & ( portPOINTER_SIZE_TYPE ) portBYTE_ALI
 316              		.loc 1 884 0
 317 0050 069B     		ldr	r3, [sp, #24]
 318 0052 03F00703 		and	r3, r3, #7
 319 0056 002B     		cmp	r3, #0
 320 0058 09D0     		beq	.L12
 321              	.LBB114:
 322              	.LBB115:
 323              		.loc 2 195 0 discriminator 1
 324              		.syntax unified
 325              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 326 005a 4FF05003 			mov r3, #80												
 327 005e 83F31188 		msr basepri, r3											
 328 0062 BFF36F8F 		isb														
 329 0066 BFF34F8F 		dsb														
 330              	
 331              	@ 0 "" 2
 332              		.thumb
 333              		.syntax unified
 334 006a 0493     		str	r3, [sp, #16]
 335              	.L13:
 336              	.LBE115:
 337              	.LBE114:
 338              		.loc 1 884 0 discriminator 2
 339 006c FEE7     		b	.L13
 340              	.L12:
 885:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 886:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if( configRECORD_STACK_HIGH_ADDRESS == 1 )
 887:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 888:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Also record the stack's high address, which may assist
 889:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			debugging. */
 890:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pxEndOfStack = pxTopOfStack;
 891:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 892:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configRECORD_STACK_HIGH_ADDRESS */
 893:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 894:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#else /* portSTACK_GROWTH */
 895:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 896:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTopOfStack = pxNewTCB->pxStack;
 897:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 898:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Check the alignment of the stack buffer is correct. */
 899:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( ( ( ( portPOINTER_SIZE_TYPE ) pxNewTCB->pxStack & ( portPOINTER_SIZE_TYPE ) portBYT
 900:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 901:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The other extreme of the stack space is required if stack checking is
 902:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		performed. */
 903:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxEndOfStack = pxNewTCB->pxStack + ( ulStackDepth - ( uint32_t ) 1 );
 904:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 905:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* portSTACK_GROWTH */
 906:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 907:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Store the task name in the TCB. */
 908:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
 341              		.loc 1 908 0
 342 006e 0023     		movs	r3, #0
 343 0070 0793     		str	r3, [sp, #28]
 344 0072 12E0     		b	.L14
 345              	.L17:
 909:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 910:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pcTaskName[ x ] = pcName[ x ];
 346              		.loc 1 910 0
 347 0074 029A     		ldr	r2, [sp, #8]
 348 0076 079B     		ldr	r3, [sp, #28]
 349 0078 1344     		add	r3, r3, r2
 350 007a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 351 007c 0C9A     		ldr	r2, [sp, #48]
 352 007e 079B     		ldr	r3, [sp, #28]
 353 0080 1344     		add	r3, r3, r2
 354 0082 3433     		adds	r3, r3, #52
 355 0084 0A46     		mov	r2, r1
 356 0086 1A70     		strb	r2, [r3]
 911:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 912:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Don't copy all configMAX_TASK_NAME_LEN if the string is shorter than
 913:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configMAX_TASK_NAME_LEN characters just in case the memory after the
 914:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		string is not accessible (extremely unlikely). */
 915:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pcName[ x ] == ( char ) 0x00 )
 357              		.loc 1 915 0
 358 0088 029A     		ldr	r2, [sp, #8]
 359 008a 079B     		ldr	r3, [sp, #28]
 360 008c 1344     		add	r3, r3, r2
 361 008e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 362 0090 002B     		cmp	r3, #0
 363 0092 06D0     		beq	.L20
 908:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 364              		.loc 1 908 0 discriminator 2
 365 0094 079B     		ldr	r3, [sp, #28]
 366 0096 0133     		adds	r3, r3, #1
 367 0098 0793     		str	r3, [sp, #28]
 368              	.L14:
 908:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 369              		.loc 1 908 0 is_stmt 0 discriminator 1
 370 009a 079B     		ldr	r3, [sp, #28]
 371 009c 092B     		cmp	r3, #9
 372 009e E9D9     		bls	.L17
 373 00a0 00E0     		b	.L16
 374              	.L20:
 916:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 917:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			break;
 375              		.loc 1 917 0 is_stmt 1
 376 00a2 00BF     		nop
 377              	.L16:
 918:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 919:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
 920:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 921:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
 922:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 923:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 924:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 925:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Ensure the name string is terminated in the case that the string length
 926:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	was greater or equal to configMAX_TASK_NAME_LEN. */
 927:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxNewTCB->pcTaskName[ configMAX_TASK_NAME_LEN - 1 ] = '\0';
 378              		.loc 1 927 0
 379 00a4 0C9B     		ldr	r3, [sp, #48]
 380 00a6 0022     		movs	r2, #0
 381 00a8 83F83D20 		strb	r2, [r3, #61]
 928:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 929:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* This is used as an array index so must ensure it's not too large.  First
 930:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	remove the privilege bit if one is present. */
 931:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( uxPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 382              		.loc 1 931 0
 383 00ac 0A9B     		ldr	r3, [sp, #40]
 384 00ae 042B     		cmp	r3, #4
 385 00b0 01D9     		bls	.L18
 932:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 933:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 386              		.loc 1 933 0
 387 00b2 0423     		movs	r3, #4
 388 00b4 0A93     		str	r3, [sp, #40]
 389              	.L18:
 934:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 935:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
 936:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 937:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
 938:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 939:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 940:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxNewTCB->uxPriority = uxPriority;
 390              		.loc 1 940 0
 391 00b6 0C9B     		ldr	r3, [sp, #48]
 392 00b8 0A9A     		ldr	r2, [sp, #40]
 393 00ba DA62     		str	r2, [r3, #44]
 941:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_MUTEXES == 1 )
 942:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 943:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxBasePriority = uxPriority;
 394              		.loc 1 943 0
 395 00bc 0C9B     		ldr	r3, [sp, #48]
 396 00be 0A9A     		ldr	r2, [sp, #40]
 397 00c0 9A64     		str	r2, [r3, #72]
 944:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxMutexesHeld = 0;
 398              		.loc 1 944 0
 399 00c2 0C9B     		ldr	r3, [sp, #48]
 400 00c4 0022     		movs	r2, #0
 401 00c6 DA64     		str	r2, [r3, #76]
 945:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 946:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_MUTEXES */
 947:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 948:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xStateListItem ) );
 402              		.loc 1 948 0
 403 00c8 0C9B     		ldr	r3, [sp, #48]
 404 00ca 0433     		adds	r3, r3, #4
 405 00cc 1846     		mov	r0, r3
 406 00ce FFF7FEFF 		bl	vListInitialiseItem
 949:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	vListInitialiseItem( &( pxNewTCB->xEventListItem ) );
 407              		.loc 1 949 0
 408 00d2 0C9B     		ldr	r3, [sp, #48]
 409 00d4 1833     		adds	r3, r3, #24
 410 00d6 1846     		mov	r0, r3
 411 00d8 FFF7FEFF 		bl	vListInitialiseItem
 950:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 951:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Set the pxNewTCB as a link back from the ListItem_t.  This is so we can get
 952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	back to	the containing TCB from a generic item in a list. */
 953:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xStateListItem ), pxNewTCB );
 412              		.loc 1 953 0
 413 00dc 0C9B     		ldr	r3, [sp, #48]
 414 00de 0C9A     		ldr	r2, [sp, #48]
 415 00e0 1A61     		str	r2, [r3, #16]
 954:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 955:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Event lists are always in priority order. */
 956:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxNewTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( Ti
 416              		.loc 1 956 0
 417 00e2 0A9B     		ldr	r3, [sp, #40]
 418 00e4 C3F10502 		rsb	r2, r3, #5
 419 00e8 0C9B     		ldr	r3, [sp, #48]
 420 00ea 9A61     		str	r2, [r3, #24]
 957:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_OWNER( &( pxNewTCB->xEventListItem ), pxNewTCB );
 421              		.loc 1 957 0
 422 00ec 0C9B     		ldr	r3, [sp, #48]
 423 00ee 0C9A     		ldr	r2, [sp, #48]
 424 00f0 5A62     		str	r2, [r3, #36]
 958:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 959:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( portCRITICAL_NESTING_IN_TCB == 1 )
 960:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 961:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->uxCriticalNesting = ( UBaseType_t ) 0U;
 962:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 963:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* portCRITICAL_NESTING_IN_TCB */
 964:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 965:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_APPLICATION_TASK_TAG == 1 )
 966:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 967:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTaskTag = NULL;
 968:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 969:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_APPLICATION_TASK_TAG */
 970:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 971:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configGENERATE_RUN_TIME_STATS == 1 )
 972:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 973:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulRunTimeCounter = 0UL;
 974:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 975:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* configGENERATE_RUN_TIME_STATS */
 976:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 977:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( portUSING_MPU_WRAPPERS == 1 )
 978:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 979:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxNewTCB->xMPUSettings ), xRegions, pxNewTCB->pxStack, ulStackDepth
 980:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 981:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#else
 982:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 983:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning about unreferenced parameter. */
 984:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		( void ) xRegions;
 985:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 986:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 987:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 988:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
 989:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 990:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		for( x = 0; x < ( UBaseType_t ) configNUM_THREAD_LOCAL_STORAGE_POINTERS; x++ )
 991:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 992:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxNewTCB->pvThreadLocalStoragePointers[ x ] = NULL;
 993:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 994:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 995:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
 996:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 997:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TASK_NOTIFICATIONS == 1 )
 998:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 999:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ulNotifiedValue = 0;
 425              		.loc 1 999 0
 426 00f2 0C9B     		ldr	r3, [sp, #48]
 427 00f4 0022     		movs	r2, #0
 428 00f6 1A65     		str	r2, [r3, #80]
1000:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 429              		.loc 1 1000 0
 430 00f8 0C9B     		ldr	r3, [sp, #48]
 431 00fa 0022     		movs	r2, #0
 432 00fc 83F85420 		strb	r2, [r3, #84]
1001:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1002:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
1003:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1004:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_NEWLIB_REENTRANT == 1 )
1005:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1006:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Initialise this task's Newlib reent structure. */
1007:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		_REENT_INIT_PTR( ( &( pxNewTCB->xNewLib_reent ) ) );
1008:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1009:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
1010:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1011:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
1012:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1013:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->ucDelayAborted = pdFALSE;
1014:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1015:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
1016:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1017:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Initialize the TCB stack to look as if the task was already running,
1018:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	but had been interrupted by the scheduler.  The return address is set
1019:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	to the start of the task function. Once the stack has been initialised
1020:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	the top of stack variable is updated. */
1021:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( portUSING_MPU_WRAPPERS == 1 )
1022:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1023:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters, xRunPrivi
1024:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1025:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#else /* portUSING_MPU_WRAPPERS */
1026:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1027:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxNewTCB->pxTopOfStack = pxPortInitialiseStack( pxTopOfStack, pxTaskCode, pvParameters );
 433              		.loc 1 1027 0
 434 0100 009A     		ldr	r2, [sp]
 435 0102 0399     		ldr	r1, [sp, #12]
 436 0104 0698     		ldr	r0, [sp, #24]
 437 0106 FFF7FEFF 		bl	pxPortInitialiseStack
 438 010a 0246     		mov	r2, r0
 439 010c 0C9B     		ldr	r3, [sp, #48]
 440 010e 1A60     		str	r2, [r3]
1028:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1029:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* portUSING_MPU_WRAPPERS */
1030:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1031:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( pxCreatedTask != NULL )
 441              		.loc 1 1031 0
 442 0110 0B9B     		ldr	r3, [sp, #44]
 443 0112 002B     		cmp	r3, #0
 444 0114 02D0     		beq	.L21
1032:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1033:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Pass the handle out in an anonymous way.  The handle can be used to
1034:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		change the created task's priority, delete the created task, etc.*/
1035:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		*pxCreatedTask = ( TaskHandle_t ) pxNewTCB;
 445              		.loc 1 1035 0
 446 0116 0B9B     		ldr	r3, [sp, #44]
 447 0118 0C9A     		ldr	r2, [sp, #48]
 448 011a 1A60     		str	r2, [r3]
 449              	.L21:
1036:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1037:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
1038:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1039:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1040:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1041:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 450              		.loc 1 1041 0
 451 011c 00BF     		nop
 452 011e 09B0     		add	sp, sp, #36
 453              	.LCFI5:
 454              		.cfi_def_cfa_offset 4
 455              		@ sp needed
 456 0120 5DF804FB 		ldr	pc, [sp], #4
 457              		.cfi_endproc
 458              	.LFE6:
 460              		.section	.text.prvAddNewTaskToReadyList,"ax",%progbits
 461              		.align	1
 462              		.syntax unified
 463              		.thumb
 464              		.thumb_func
 465              		.fpu fpv4-sp-d16
 467              	prvAddNewTaskToReadyList:
 468              	.LFB7:
1042:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1043:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1044:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvAddNewTaskToReadyList( TCB_t *pxNewTCB )
1045:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 469              		.loc 1 1045 0
 470              		.cfi_startproc
 471              		@ args = 0, pretend = 0, frame = 8
 472              		@ frame_needed = 0, uses_anonymous_args = 0
 473 0000 00B5     		push	{lr}
 474              	.LCFI6:
 475              		.cfi_def_cfa_offset 4
 476              		.cfi_offset 14, -4
 477 0002 83B0     		sub	sp, sp, #12
 478              	.LCFI7:
 479              		.cfi_def_cfa_offset 16
 480 0004 0190     		str	r0, [sp, #4]
1046:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Ensure interrupts don't access the task lists while the lists are being
1047:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	updated. */
1048:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 481              		.loc 1 1048 0
 482 0006 FFF7FEFF 		bl	vPortEnterCritical
1049:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1050:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxCurrentNumberOfTasks++;
 483              		.loc 1 1050 0
 484 000a 2D4B     		ldr	r3, .L27
 485 000c 1B68     		ldr	r3, [r3]
 486 000e 0133     		adds	r3, r3, #1
 487 0010 2B4A     		ldr	r2, .L27
 488 0012 1360     		str	r3, [r2]
1051:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB == NULL )
 489              		.loc 1 1051 0
 490 0014 2B4B     		ldr	r3, .L27+4
 491 0016 1B68     		ldr	r3, [r3]
 492 0018 002B     		cmp	r3, #0
 493 001a 09D1     		bne	.L23
1052:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1053:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* There are no other tasks, or all the other tasks are in
1054:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			the suspended state - make this the current task. */
1055:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB = pxNewTCB;
 494              		.loc 1 1055 0
 495 001c 294A     		ldr	r2, .L27+4
 496 001e 019B     		ldr	r3, [sp, #4]
 497 0020 1360     		str	r3, [r2]
1056:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1057:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks == ( UBaseType_t ) 1 )
 498              		.loc 1 1057 0
 499 0022 274B     		ldr	r3, .L27
 500 0024 1B68     		ldr	r3, [r3]
 501 0026 012B     		cmp	r3, #1
 502 0028 10D1     		bne	.L24
1058:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1059:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* This is the first task to be created so do the preliminary
1060:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				initialisation required.  We will not recover if this call
1061:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				fails, but we will report the failure. */
1062:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvInitialiseTaskLists();
 503              		.loc 1 1062 0
 504 002a FFF7FEFF 		bl	prvInitialiseTaskLists
 505 002e 0DE0     		b	.L24
 506              	.L23:
1063:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1064:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1065:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1066:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1067:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1068:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1069:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1070:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1071:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If the scheduler is not already running, make this task the
1072:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			current task if it is the highest priority task to be created
1073:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			so far. */
1074:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning == pdFALSE )
 507              		.loc 1 1074 0
 508 0030 254B     		ldr	r3, .L27+8
 509 0032 1B68     		ldr	r3, [r3]
 510 0034 002B     		cmp	r3, #0
 511 0036 09D1     		bne	.L24
1075:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1076:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxPriority <= pxNewTCB->uxPriority )
 512              		.loc 1 1076 0
 513 0038 224B     		ldr	r3, .L27+4
 514 003a 1B68     		ldr	r3, [r3]
 515 003c DA6A     		ldr	r2, [r3, #44]
 516 003e 019B     		ldr	r3, [sp, #4]
 517 0040 DB6A     		ldr	r3, [r3, #44]
 518 0042 9A42     		cmp	r2, r3
 519 0044 02D8     		bhi	.L24
1077:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1078:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = pxNewTCB;
 520              		.loc 1 1078 0
 521 0046 1F4A     		ldr	r2, .L27+4
 522 0048 019B     		ldr	r3, [sp, #4]
 523 004a 1360     		str	r3, [r2]
 524              	.L24:
1079:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1080:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1081:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1082:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1083:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1084:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1085:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1086:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1087:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1088:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1089:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1090:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1091:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxTaskNumber++;
 525              		.loc 1 1091 0
 526 004c 1F4B     		ldr	r3, .L27+12
 527 004e 1B68     		ldr	r3, [r3]
 528 0050 0133     		adds	r3, r3, #1
 529 0052 1E4A     		ldr	r2, .L27+12
 530 0054 1360     		str	r3, [r2]
1092:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1093:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TRACE_FACILITY == 1 )
1094:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1095:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Add a counter into the TCB for tracing only. */
1096:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxNewTCB->uxTCBNumber = uxTaskNumber;
 531              		.loc 1 1096 0
 532 0056 1D4B     		ldr	r3, .L27+12
 533 0058 1A68     		ldr	r2, [r3]
 534 005a 019B     		ldr	r3, [sp, #4]
 535 005c 1A64     		str	r2, [r3, #64]
1097:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1098:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TRACE_FACILITY */
1099:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_CREATE( pxNewTCB );
1100:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1101:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxNewTCB );
 536              		.loc 1 1101 0
 537 005e 019B     		ldr	r3, [sp, #4]
 538 0060 DB6A     		ldr	r3, [r3, #44]
 539 0062 0122     		movs	r2, #1
 540 0064 9A40     		lsls	r2, r2, r3
 541 0066 1A4B     		ldr	r3, .L27+16
 542 0068 1B68     		ldr	r3, [r3]
 543 006a 1343     		orrs	r3, r3, r2
 544 006c 184A     		ldr	r2, .L27+16
 545 006e 1360     		str	r3, [r2]
 546 0070 019B     		ldr	r3, [sp, #4]
 547 0072 DA6A     		ldr	r2, [r3, #44]
 548 0074 1346     		mov	r3, r2
 549 0076 9B00     		lsls	r3, r3, #2
 550 0078 1344     		add	r3, r3, r2
 551 007a 9B00     		lsls	r3, r3, #2
 552 007c 154A     		ldr	r2, .L27+20
 553 007e 1A44     		add	r2, r2, r3
 554 0080 019B     		ldr	r3, [sp, #4]
 555 0082 0433     		adds	r3, r3, #4
 556 0084 1946     		mov	r1, r3
 557 0086 1046     		mov	r0, r2
 558 0088 FFF7FEFF 		bl	vListInsertEnd
1102:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1103:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portSETUP_TCB( pxNewTCB );
1104:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1105:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 559              		.loc 1 1105 0
 560 008c FFF7FEFF 		bl	vPortExitCritical
1106:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1107:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( xSchedulerRunning != pdFALSE )
 561              		.loc 1 1107 0
 562 0090 0D4B     		ldr	r3, .L27+8
 563 0092 1B68     		ldr	r3, [r3]
 564 0094 002B     		cmp	r3, #0
 565 0096 0ED0     		beq	.L26
1108:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1109:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If the created task is of a higher priority than the current task
1110:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		then it should run now. */
1111:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority < pxNewTCB->uxPriority )
 566              		.loc 1 1111 0
 567 0098 0A4B     		ldr	r3, .L27+4
 568 009a 1B68     		ldr	r3, [r3]
 569 009c DA6A     		ldr	r2, [r3, #44]
 570 009e 019B     		ldr	r3, [sp, #4]
 571 00a0 DB6A     		ldr	r3, [r3, #44]
 572 00a2 9A42     		cmp	r2, r3
 573 00a4 07D2     		bcs	.L26
1112:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1113:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskYIELD_IF_USING_PREEMPTION();
 574              		.loc 1 1113 0
 575 00a6 0C4B     		ldr	r3, .L27+24
 576 00a8 4FF08052 		mov	r2, #268435456
 577 00ac 1A60     		str	r2, [r3]
 578              		.syntax unified
 579              	@ 1113 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 580 00ae BFF34F8F 		dsb
 581              	@ 0 "" 2
 582              	@ 1113 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 583 00b2 BFF36F8F 		isb
 584              	@ 0 "" 2
 585              		.thumb
 586              		.syntax unified
 587              	.L26:
1114:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1115:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1116:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1117:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1118:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1119:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1120:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
1121:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1122:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
1123:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1124:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 588              		.loc 1 1124 0
 589 00b6 00BF     		nop
 590 00b8 03B0     		add	sp, sp, #12
 591              	.LCFI8:
 592              		.cfi_def_cfa_offset 4
 593              		@ sp needed
 594 00ba 5DF804FB 		ldr	pc, [sp], #4
 595              	.L28:
 596 00be 00BF     		.align	2
 597              	.L27:
 598 00c0 00000000 		.word	uxCurrentNumberOfTasks
 599 00c4 00000000 		.word	pxCurrentTCB
 600 00c8 00000000 		.word	xSchedulerRunning
 601 00cc 00000000 		.word	uxTaskNumber
 602 00d0 00000000 		.word	uxTopReadyPriority
 603 00d4 00000000 		.word	pxReadyTasksLists
 604 00d8 04ED00E0 		.word	-536810236
 605              		.cfi_endproc
 606              	.LFE7:
 608              		.section	.text.vTaskDelete,"ax",%progbits
 609              		.align	1
 610              		.global	vTaskDelete
 611              		.syntax unified
 612              		.thumb
 613              		.thumb_func
 614              		.fpu fpv4-sp-d16
 616              	vTaskDelete:
 617              	.LFB8:
1125:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1126:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1127:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
1128:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1129:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskDelete( TaskHandle_t xTaskToDelete )
1130:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 618              		.loc 1 1130 0
 619              		.cfi_startproc
 620              		@ args = 0, pretend = 0, frame = 16
 621              		@ frame_needed = 0, uses_anonymous_args = 0
 622 0000 00B5     		push	{lr}
 623              	.LCFI9:
 624              		.cfi_def_cfa_offset 4
 625              		.cfi_offset 14, -4
 626 0002 85B0     		sub	sp, sp, #20
 627              	.LCFI10:
 628              		.cfi_def_cfa_offset 24
 629 0004 0190     		str	r0, [sp, #4]
1131:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1132:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1133:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 630              		.loc 1 1133 0
 631 0006 FFF7FEFF 		bl	vPortEnterCritical
1134:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1135:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the calling task that is
1136:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			being deleted. */
1137:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToDelete );
 632              		.loc 1 1137 0
 633 000a 019B     		ldr	r3, [sp, #4]
 634 000c 002B     		cmp	r3, #0
 635 000e 02D1     		bne	.L30
 636              		.loc 1 1137 0 is_stmt 0 discriminator 1
 637 0010 384B     		ldr	r3, .L41
 638 0012 1B68     		ldr	r3, [r3]
 639 0014 00E0     		b	.L31
 640              	.L30:
 641              		.loc 1 1137 0 discriminator 2
 642 0016 019B     		ldr	r3, [sp, #4]
 643              	.L31:
 644              		.loc 1 1137 0 discriminator 4
 645 0018 0393     		str	r3, [sp, #12]
1138:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1139:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready list. */
1140:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 646              		.loc 1 1140 0 is_stmt 1 discriminator 4
 647 001a 039B     		ldr	r3, [sp, #12]
 648 001c 0433     		adds	r3, r3, #4
 649 001e 1846     		mov	r0, r3
 650 0020 FFF7FEFF 		bl	uxListRemove
 651 0024 0346     		mov	r3, r0
 652 0026 002B     		cmp	r3, #0
 653 0028 15D1     		bne	.L32
1141:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1142:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 654              		.loc 1 1142 0
 655 002a 039B     		ldr	r3, [sp, #12]
 656 002c DA6A     		ldr	r2, [r3, #44]
 657 002e 3249     		ldr	r1, .L41+4
 658 0030 1346     		mov	r3, r2
 659 0032 9B00     		lsls	r3, r3, #2
 660 0034 1344     		add	r3, r3, r2
 661 0036 9B00     		lsls	r3, r3, #2
 662 0038 0B44     		add	r3, r3, r1
 663 003a 1B68     		ldr	r3, [r3]
 664 003c 002B     		cmp	r3, #0
 665 003e 0AD1     		bne	.L32
 666              		.loc 1 1142 0 is_stmt 0 discriminator 1
 667 0040 039B     		ldr	r3, [sp, #12]
 668 0042 DB6A     		ldr	r3, [r3, #44]
 669 0044 0122     		movs	r2, #1
 670 0046 02FA03F3 		lsl	r3, r2, r3
 671 004a DA43     		mvns	r2, r3
 672 004c 2B4B     		ldr	r3, .L41+8
 673 004e 1B68     		ldr	r3, [r3]
 674 0050 1340     		ands	r3, r3, r2
 675 0052 2A4A     		ldr	r2, .L41+8
 676 0054 1360     		str	r3, [r2]
 677              	.L32:
1143:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1144:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1145:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1146:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1147:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1148:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1149:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1150:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 678              		.loc 1 1150 0 is_stmt 1
 679 0056 039B     		ldr	r3, [sp, #12]
 680 0058 9B6A     		ldr	r3, [r3, #40]
 681 005a 002B     		cmp	r3, #0
 682 005c 04D0     		beq	.L34
1151:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1152:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 683              		.loc 1 1152 0
 684 005e 039B     		ldr	r3, [sp, #12]
 685 0060 1833     		adds	r3, r3, #24
 686 0062 1846     		mov	r0, r3
 687 0064 FFF7FEFF 		bl	uxListRemove
 688              	.L34:
1153:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1154:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1155:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1156:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1157:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1158:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1159:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Increment the uxTaskNumber also so kernel aware debuggers can
1160:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			detect that the task lists need re-generating.  This is done before
1161:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			portPRE_TASK_DELETE_HOOK() as in the Windows port that macro will
1162:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			not return. */
1163:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			uxTaskNumber++;
 689              		.loc 1 1163 0
 690 0068 254B     		ldr	r3, .L41+12
 691 006a 1B68     		ldr	r3, [r3]
 692 006c 0133     		adds	r3, r3, #1
 693 006e 244A     		ldr	r2, .L41+12
 694 0070 1360     		str	r3, [r2]
1164:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1165:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 695              		.loc 1 1165 0
 696 0072 204B     		ldr	r3, .L41
 697 0074 1B68     		ldr	r3, [r3]
 698 0076 039A     		ldr	r2, [sp, #12]
 699 0078 9A42     		cmp	r2, r3
 700 007a 0BD1     		bne	.L35
1166:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1167:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* A task is deleting itself.  This cannot complete within the
1168:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				task itself, as a context switch to another task is required.
1169:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				Place the task in the termination list.  The idle task will
1170:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				check the termination list and free up any memory allocated by
1171:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				the scheduler for the TCB and stack of the deleted task. */
1172:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				vListInsertEnd( &xTasksWaitingTermination, &( pxTCB->xStateListItem ) );
 701              		.loc 1 1172 0
 702 007c 039B     		ldr	r3, [sp, #12]
 703 007e 0433     		adds	r3, r3, #4
 704 0080 1946     		mov	r1, r3
 705 0082 2048     		ldr	r0, .L41+16
 706 0084 FFF7FEFF 		bl	vListInsertEnd
1173:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1174:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Increment the ucTasksDeleted variable so the idle task knows
1175:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				there is a task that has been deleted and that it should therefore
1176:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				check the xTasksWaitingTermination list. */
1177:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				++uxDeletedTasksWaitingCleanUp;
 707              		.loc 1 1177 0
 708 0088 1F4B     		ldr	r3, .L41+20
 709 008a 1B68     		ldr	r3, [r3]
 710 008c 0133     		adds	r3, r3, #1
 711 008e 1E4A     		ldr	r2, .L41+20
 712 0090 1360     		str	r3, [r2]
 713 0092 09E0     		b	.L36
 714              	.L35:
1178:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1179:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The pre-delete hook is primarily for the Windows simulator,
1180:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				in which Windows specific clean up operations are performed,
1181:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				after which it is not possible to yield away from this task -
1182:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				hence xYieldPending is used to latch that a context switch is
1183:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				required. */
1184:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				portPRE_TASK_DELETE_HOOK( pxTCB, &xYieldPending );
1185:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1186:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1187:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1188:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 715              		.loc 1 1188 0
 716 0094 1D4B     		ldr	r3, .L41+24
 717 0096 1B68     		ldr	r3, [r3]
 718 0098 013B     		subs	r3, r3, #1
 719 009a 1C4A     		ldr	r2, .L41+24
 720 009c 1360     		str	r3, [r2]
1189:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvDeleteTCB( pxTCB );
 721              		.loc 1 1189 0
 722 009e 0398     		ldr	r0, [sp, #12]
 723 00a0 FFF7FEFF 		bl	prvDeleteTCB
1190:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1191:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Reset the next expected unblock time in case it referred to
1192:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				the task that has just been deleted. */
1193:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
 724              		.loc 1 1193 0
 725 00a4 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 726              	.L36:
1194:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1196:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			traceTASK_DELETE( pxTCB );
1197:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1198:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 727              		.loc 1 1198 0
 728 00a8 FFF7FEFF 		bl	vPortExitCritical
1199:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1200:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if it is the currently running task that has just
1201:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		been deleted. */
1202:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 729              		.loc 1 1202 0
 730 00ac 184B     		ldr	r3, .L41+28
 731 00ae 1B68     		ldr	r3, [r3]
 732 00b0 002B     		cmp	r3, #0
 733 00b2 1AD0     		beq	.L40
1203:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1204:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 734              		.loc 1 1204 0
 735 00b4 0F4B     		ldr	r3, .L41
 736 00b6 1B68     		ldr	r3, [r3]
 737 00b8 039A     		ldr	r2, [sp, #12]
 738 00ba 9A42     		cmp	r2, r3
 739 00bc 15D1     		bne	.L40
1205:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1206:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
 740              		.loc 1 1206 0
 741 00be 154B     		ldr	r3, .L41+32
 742 00c0 1B68     		ldr	r3, [r3]
 743 00c2 002B     		cmp	r3, #0
 744 00c4 09D0     		beq	.L38
 745              	.LBB116:
 746              	.LBB117:
 747              		.loc 2 195 0 discriminator 1
 748              		.syntax unified
 749              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 750 00c6 4FF05003 			mov r3, #80												
 751 00ca 83F31188 		msr basepri, r3											
 752 00ce BFF36F8F 		isb														
 753 00d2 BFF34F8F 		dsb														
 754              	
 755              	@ 0 "" 2
 756              		.thumb
 757              		.syntax unified
 758 00d6 0293     		str	r3, [sp, #8]
 759              	.L39:
 760              	.LBE117:
 761              	.LBE116:
 762              		.loc 1 1206 0 discriminator 1
 763 00d8 FEE7     		b	.L39
 764              	.L38:
1207:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 765              		.loc 1 1207 0
 766 00da 0F4B     		ldr	r3, .L41+36
 767 00dc 4FF08052 		mov	r2, #268435456
 768 00e0 1A60     		str	r2, [r3]
 769              		.syntax unified
 770              	@ 1207 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 771 00e2 BFF34F8F 		dsb
 772              	@ 0 "" 2
 773              	@ 1207 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 774 00e6 BFF36F8F 		isb
 775              	@ 0 "" 2
 776              		.thumb
 777              		.syntax unified
 778              	.L40:
1208:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1209:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1210:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1211:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1212:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1213:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1214:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 779              		.loc 1 1214 0
 780 00ea 00BF     		nop
 781 00ec 05B0     		add	sp, sp, #20
 782              	.LCFI11:
 783              		.cfi_def_cfa_offset 4
 784              		@ sp needed
 785 00ee 5DF804FB 		ldr	pc, [sp], #4
 786              	.L42:
 787 00f2 00BF     		.align	2
 788              	.L41:
 789 00f4 00000000 		.word	pxCurrentTCB
 790 00f8 00000000 		.word	pxReadyTasksLists
 791 00fc 00000000 		.word	uxTopReadyPriority
 792 0100 00000000 		.word	uxTaskNumber
 793 0104 00000000 		.word	xTasksWaitingTermination
 794 0108 00000000 		.word	uxDeletedTasksWaitingCleanUp
 795 010c 00000000 		.word	uxCurrentNumberOfTasks
 796 0110 00000000 		.word	xSchedulerRunning
 797 0114 00000000 		.word	uxSchedulerSuspended
 798 0118 04ED00E0 		.word	-536810236
 799              		.cfi_endproc
 800              	.LFE8:
 802              		.section	.text.vTaskDelayUntil,"ax",%progbits
 803              		.align	1
 804              		.global	vTaskDelayUntil
 805              		.syntax unified
 806              		.thumb
 807              		.thumb_func
 808              		.fpu fpv4-sp-d16
 810              	vTaskDelayUntil:
 811              	.LFB9:
1215:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1216:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
1217:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1218:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1219:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelayUntil == 1 )
1220:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1221:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskDelayUntil( TickType_t * const pxPreviousWakeTime, const TickType_t xTimeIncrement )
1222:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 812              		.loc 1 1222 0
 813              		.cfi_startproc
 814              		@ args = 0, pretend = 0, frame = 40
 815              		@ frame_needed = 0, uses_anonymous_args = 0
 816 0000 00B5     		push	{lr}
 817              	.LCFI12:
 818              		.cfi_def_cfa_offset 4
 819              		.cfi_offset 14, -4
 820 0002 8BB0     		sub	sp, sp, #44
 821              	.LCFI13:
 822              		.cfi_def_cfa_offset 48
 823 0004 0190     		str	r0, [sp, #4]
 824 0006 0091     		str	r1, [sp]
1223:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TickType_t xTimeToWake;
1224:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded, xShouldDelay = pdFALSE;
 825              		.loc 1 1224 0
 826 0008 0023     		movs	r3, #0
 827 000a 0993     		str	r3, [sp, #36]
1225:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1226:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( pxPreviousWakeTime );
 828              		.loc 1 1226 0
 829 000c 019B     		ldr	r3, [sp, #4]
 830 000e 002B     		cmp	r3, #0
 831 0010 09D1     		bne	.L44
 832              	.LBB118:
 833              	.LBB119:
 834              		.loc 2 195 0 discriminator 1
 835              		.syntax unified
 836              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 837 0012 4FF05003 			mov r3, #80												
 838 0016 83F31188 		msr basepri, r3											
 839 001a BFF36F8F 		isb														
 840 001e BFF34F8F 		dsb														
 841              	
 842              	@ 0 "" 2
 843              		.thumb
 844              		.syntax unified
 845 0022 0593     		str	r3, [sp, #20]
 846              	.L45:
 847              	.LBE119:
 848              	.LBE118:
 849              		.loc 1 1226 0 discriminator 1
 850 0024 FEE7     		b	.L45
 851              	.L44:
1227:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTimeIncrement > 0U ) );
 852              		.loc 1 1227 0
 853 0026 009B     		ldr	r3, [sp]
 854 0028 002B     		cmp	r3, #0
 855 002a 09D1     		bne	.L46
 856              	.LBB120:
 857              	.LBB121:
 858              		.loc 2 195 0 discriminator 1
 859              		.syntax unified
 860              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 861 002c 4FF05003 			mov r3, #80												
 862 0030 83F31188 		msr basepri, r3											
 863 0034 BFF36F8F 		isb														
 864 0038 BFF34F8F 		dsb														
 865              	
 866              	@ 0 "" 2
 867              		.thumb
 868              		.syntax unified
 869 003c 0493     		str	r3, [sp, #16]
 870              	.L47:
 871              	.LBE121:
 872              	.LBE120:
 873              		.loc 1 1227 0 discriminator 2
 874 003e FEE7     		b	.L47
 875              	.L46:
1228:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( uxSchedulerSuspended == 0 );
 876              		.loc 1 1228 0
 877 0040 294B     		ldr	r3, .L56
 878 0042 1B68     		ldr	r3, [r3]
 879 0044 002B     		cmp	r3, #0
 880 0046 09D0     		beq	.L48
 881              	.LBB122:
 882              	.LBB123:
 883              		.loc 2 195 0 discriminator 1
 884              		.syntax unified
 885              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 886 0048 4FF05003 			mov r3, #80												
 887 004c 83F31188 		msr basepri, r3											
 888 0050 BFF36F8F 		isb														
 889 0054 BFF34F8F 		dsb														
 890              	
 891              	@ 0 "" 2
 892              		.thumb
 893              		.syntax unified
 894 0058 0393     		str	r3, [sp, #12]
 895              	.L49:
 896              	.LBE123:
 897              	.LBE122:
 898              		.loc 1 1228 0 discriminator 3
 899 005a FEE7     		b	.L49
 900              	.L48:
1229:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1230:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
 901              		.loc 1 1230 0
 902 005c FFF7FEFF 		bl	vTaskSuspendAll
 903              	.LBB124:
1231:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1232:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Minor optimisation.  The tick count cannot change in this
1233:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			block. */
1234:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			const TickType_t xConstTickCount = xTickCount;
 904              		.loc 1 1234 0
 905 0060 224B     		ldr	r3, .L56+4
 906 0062 1B68     		ldr	r3, [r3]
 907 0064 0893     		str	r3, [sp, #32]
1235:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1236:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Generate the tick time at which the task wants to wake. */
1237:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTimeToWake = *pxPreviousWakeTime + xTimeIncrement;
 908              		.loc 1 1237 0
 909 0066 019B     		ldr	r3, [sp, #4]
 910 0068 1B68     		ldr	r3, [r3]
 911 006a 009A     		ldr	r2, [sp]
 912 006c 1344     		add	r3, r3, r2
 913 006e 0793     		str	r3, [sp, #28]
1238:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1239:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( xConstTickCount < *pxPreviousWakeTime )
 914              		.loc 1 1239 0
 915 0070 019B     		ldr	r3, [sp, #4]
 916 0072 1B68     		ldr	r3, [r3]
 917 0074 089A     		ldr	r2, [sp, #32]
 918 0076 9A42     		cmp	r2, r3
 919 0078 0BD2     		bcs	.L50
1240:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1241:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The tick count has overflowed since this function was
1242:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				lasted called.  In this case the only time we should ever
1243:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				actually delay is if the wake time has also	overflowed,
1244:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				and the wake time is greater than the tick time.  When this
1245:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				is the case it is as if neither time had overflowed. */
1246:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) && ( xTimeToWake > xConstTickCount ) )
 920              		.loc 1 1246 0
 921 007a 019B     		ldr	r3, [sp, #4]
 922 007c 1B68     		ldr	r3, [r3]
 923 007e 079A     		ldr	r2, [sp, #28]
 924 0080 9A42     		cmp	r2, r3
 925 0082 11D2     		bcs	.L51
 926              		.loc 1 1246 0 is_stmt 0 discriminator 1
 927 0084 079A     		ldr	r2, [sp, #28]
 928 0086 089B     		ldr	r3, [sp, #32]
 929 0088 9A42     		cmp	r2, r3
 930 008a 0DD9     		bls	.L51
1247:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1248:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 931              		.loc 1 1248 0 is_stmt 1
 932 008c 0123     		movs	r3, #1
 933 008e 0993     		str	r3, [sp, #36]
 934 0090 0AE0     		b	.L51
 935              	.L50:
1249:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1250:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1251:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1252:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1253:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1254:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1255:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1256:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1257:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The tick time has not overflowed.  In this case we will
1258:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				delay if either the wake time has overflowed, and/or the
1259:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				tick time is less than the wake time. */
1260:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( ( xTimeToWake < *pxPreviousWakeTime ) || ( xTimeToWake > xConstTickCount ) )
 936              		.loc 1 1260 0
 937 0092 019B     		ldr	r3, [sp, #4]
 938 0094 1B68     		ldr	r3, [r3]
 939 0096 079A     		ldr	r2, [sp, #28]
 940 0098 9A42     		cmp	r2, r3
 941 009a 03D3     		bcc	.L52
 942              		.loc 1 1260 0 is_stmt 0 discriminator 1
 943 009c 079A     		ldr	r2, [sp, #28]
 944 009e 089B     		ldr	r3, [sp, #32]
 945 00a0 9A42     		cmp	r2, r3
 946 00a2 01D9     		bls	.L51
 947              	.L52:
1261:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1262:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xShouldDelay = pdTRUE;
 948              		.loc 1 1262 0 is_stmt 1
 949 00a4 0123     		movs	r3, #1
 950 00a6 0993     		str	r3, [sp, #36]
 951              	.L51:
1263:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1264:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1265:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1266:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1267:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1268:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1269:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1270:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Update the wake time ready for the next call. */
1271:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			*pxPreviousWakeTime = xTimeToWake;
 952              		.loc 1 1271 0
 953 00a8 019B     		ldr	r3, [sp, #4]
 954 00aa 079A     		ldr	r2, [sp, #28]
 955 00ac 1A60     		str	r2, [r3]
1272:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1273:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( xShouldDelay != pdFALSE )
 956              		.loc 1 1273 0
 957 00ae 099B     		ldr	r3, [sp, #36]
 958 00b0 002B     		cmp	r3, #0
 959 00b2 06D0     		beq	.L53
1274:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1275:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY_UNTIL( xTimeToWake );
1276:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1277:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* prvAddCurrentTaskToDelayedList() needs the block time, not
1278:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				the time to wake, so subtract the current tick count. */
1279:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTimeToWake - xConstTickCount, pdFALSE );
 960              		.loc 1 1279 0
 961 00b4 079A     		ldr	r2, [sp, #28]
 962 00b6 089B     		ldr	r3, [sp, #32]
 963 00b8 D31A     		subs	r3, r2, r3
 964 00ba 0021     		movs	r1, #0
 965 00bc 1846     		mov	r0, r3
 966 00be FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
 967              	.L53:
 968              	.LBE124:
1280:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1281:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1282:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1283:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1284:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1285:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1286:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xAlreadyYielded = xTaskResumeAll();
 969              		.loc 1 1286 0
 970 00c2 FFF7FEFF 		bl	xTaskResumeAll
 971 00c6 0690     		str	r0, [sp, #24]
1287:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1288:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1289:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1290:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
 972              		.loc 1 1290 0
 973 00c8 069B     		ldr	r3, [sp, #24]
 974 00ca 002B     		cmp	r3, #0
 975 00cc 07D1     		bne	.L55
1291:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1292:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
 976              		.loc 1 1292 0
 977 00ce 084B     		ldr	r3, .L56+8
 978 00d0 4FF08052 		mov	r2, #268435456
 979 00d4 1A60     		str	r2, [r3]
 980              		.syntax unified
 981              	@ 1292 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 982 00d6 BFF34F8F 		dsb
 983              	@ 0 "" 2
 984              	@ 1292 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 985 00da BFF36F8F 		isb
 986              	@ 0 "" 2
 987              		.thumb
 988              		.syntax unified
 989              	.L55:
1293:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1294:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1295:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1296:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1297:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1298:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 990              		.loc 1 1298 0
 991 00de 00BF     		nop
 992 00e0 0BB0     		add	sp, sp, #44
 993              	.LCFI14:
 994              		.cfi_def_cfa_offset 4
 995              		@ sp needed
 996 00e2 5DF804FB 		ldr	pc, [sp], #4
 997              	.L57:
 998 00e6 00BF     		.align	2
 999              	.L56:
 1000 00e8 00000000 		.word	uxSchedulerSuspended
 1001 00ec 00000000 		.word	xTickCount
 1002 00f0 04ED00E0 		.word	-536810236
 1003              		.cfi_endproc
 1004              	.LFE9:
 1006              		.section	.text.vTaskDelay,"ax",%progbits
 1007              		.align	1
 1008              		.global	vTaskDelay
 1009              		.syntax unified
 1010              		.thumb
 1011              		.thumb_func
 1012              		.fpu fpv4-sp-d16
 1014              	vTaskDelay:
 1015              	.LFB10:
1299:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1300:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelayUntil */
1301:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1302:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1303:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelay == 1 )
1304:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1305:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskDelay( const TickType_t xTicksToDelay )
1306:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 1016              		.loc 1 1306 0
 1017              		.cfi_startproc
 1018              		@ args = 0, pretend = 0, frame = 16
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020 0000 00B5     		push	{lr}
 1021              	.LCFI15:
 1022              		.cfi_def_cfa_offset 4
 1023              		.cfi_offset 14, -4
 1024 0002 85B0     		sub	sp, sp, #20
 1025              	.LCFI16:
 1026              		.cfi_def_cfa_offset 24
 1027 0004 0190     		str	r0, [sp, #4]
1307:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xAlreadyYielded = pdFALSE;
 1028              		.loc 1 1307 0
 1029 0006 0023     		movs	r3, #0
 1030 0008 0393     		str	r3, [sp, #12]
1308:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1309:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* A delay time of zero just forces a reschedule. */
1310:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xTicksToDelay > ( TickType_t ) 0U )
 1031              		.loc 1 1310 0
 1032 000a 019B     		ldr	r3, [sp, #4]
 1033 000c 002B     		cmp	r3, #0
 1034 000e 16D0     		beq	.L59
1311:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1312:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			configASSERT( uxSchedulerSuspended == 0 );
 1035              		.loc 1 1312 0
 1036 0010 124B     		ldr	r3, .L64
 1037 0012 1B68     		ldr	r3, [r3]
 1038 0014 002B     		cmp	r3, #0
 1039 0016 09D0     		beq	.L60
 1040              	.LBB125:
 1041              	.LBB126:
 1042              		.loc 2 195 0 discriminator 1
 1043              		.syntax unified
 1044              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 1045 0018 4FF05003 			mov r3, #80												
 1046 001c 83F31188 		msr basepri, r3											
 1047 0020 BFF36F8F 		isb														
 1048 0024 BFF34F8F 		dsb														
 1049              	
 1050              	@ 0 "" 2
 1051              		.thumb
 1052              		.syntax unified
 1053 0028 0293     		str	r3, [sp, #8]
 1054              	.L61:
 1055              	.LBE126:
 1056              	.LBE125:
 1057              		.loc 1 1312 0 discriminator 1
 1058 002a FEE7     		b	.L61
 1059              	.L60:
1313:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vTaskSuspendAll();
 1060              		.loc 1 1313 0
 1061 002c FFF7FEFF 		bl	vTaskSuspendAll
1314:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1315:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				traceTASK_DELAY();
1316:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1317:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* A task that is removed from the event list while the
1318:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				scheduler is suspended will not get placed in the ready
1319:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				list or removed from the blocked list until the scheduler
1320:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				is resumed.
1321:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1322:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				This task cannot be in an event list as it is the currently
1323:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				executing task. */
1324:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvAddCurrentTaskToDelayedList( xTicksToDelay, pdFALSE );
 1062              		.loc 1 1324 0
 1063 0030 0021     		movs	r1, #0
 1064 0032 0198     		ldr	r0, [sp, #4]
 1065 0034 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
1325:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1326:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xAlreadyYielded = xTaskResumeAll();
 1066              		.loc 1 1326 0
 1067 0038 FFF7FEFF 		bl	xTaskResumeAll
 1068 003c 0390     		str	r0, [sp, #12]
 1069              	.L59:
1327:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1328:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1329:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1330:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1331:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1332:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1333:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Force a reschedule if xTaskResumeAll has not already done so, we may
1334:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		have put ourselves to sleep. */
1335:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xAlreadyYielded == pdFALSE )
 1070              		.loc 1 1335 0
 1071 003e 039B     		ldr	r3, [sp, #12]
 1072 0040 002B     		cmp	r3, #0
 1073 0042 07D1     		bne	.L63
1336:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1337:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			portYIELD_WITHIN_API();
 1074              		.loc 1 1337 0
 1075 0044 064B     		ldr	r3, .L64+4
 1076 0046 4FF08052 		mov	r2, #268435456
 1077 004a 1A60     		str	r2, [r3]
 1078              		.syntax unified
 1079              	@ 1337 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 1080 004c BFF34F8F 		dsb
 1081              	@ 0 "" 2
 1082              	@ 1337 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 1083 0050 BFF36F8F 		isb
 1084              	@ 0 "" 2
 1085              		.thumb
 1086              		.syntax unified
 1087              	.L63:
1338:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1339:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1340:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1341:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1342:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1343:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 1088              		.loc 1 1343 0
 1089 0054 00BF     		nop
 1090 0056 05B0     		add	sp, sp, #20
 1091              	.LCFI17:
 1092              		.cfi_def_cfa_offset 4
 1093              		@ sp needed
 1094 0058 5DF804FB 		ldr	pc, [sp], #4
 1095              	.L65:
 1096              		.align	2
 1097              	.L64:
 1098 005c 00000000 		.word	uxSchedulerSuspended
 1099 0060 04ED00E0 		.word	-536810236
 1100              		.cfi_endproc
 1101              	.LFE10:
 1103              		.section	.text.eTaskGetState,"ax",%progbits
 1104              		.align	1
 1105              		.global	eTaskGetState
 1106              		.syntax unified
 1107              		.thumb
 1108              		.thumb_func
 1109              		.fpu fpv4-sp-d16
 1111              	eTaskGetState:
 1112              	.LFB11:
1344:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1345:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelay */
1346:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1347:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1348:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( ( INCLUDE_eTaskGetState == 1 ) || ( configUSE_TRACE_FACILITY == 1 ) )
1349:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1350:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	eTaskState eTaskGetState( TaskHandle_t xTask )
1351:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 1113              		.loc 1 1351 0
 1114              		.cfi_startproc
 1115              		@ args = 0, pretend = 0, frame = 32
 1116              		@ frame_needed = 0, uses_anonymous_args = 0
 1117 0000 00B5     		push	{lr}
 1118              	.LCFI18:
 1119              		.cfi_def_cfa_offset 4
 1120              		.cfi_offset 14, -4
 1121 0002 89B0     		sub	sp, sp, #36
 1122              	.LCFI19:
 1123              		.cfi_def_cfa_offset 40
 1124 0004 0190     		str	r0, [sp, #4]
1352:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	eTaskState eReturn;
1353:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	List_t const * pxStateList, *pxDelayedList, *pxOverflowedDelayedList;
1354:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
 1125              		.loc 1 1354 0
 1126 0006 019B     		ldr	r3, [sp, #4]
 1127 0008 0693     		str	r3, [sp, #24]
1355:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1356:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
 1128              		.loc 1 1356 0
 1129 000a 069B     		ldr	r3, [sp, #24]
 1130 000c 002B     		cmp	r3, #0
 1131 000e 09D1     		bne	.L67
 1132              	.LBB127:
 1133              	.LBB128:
 1134              		.loc 2 195 0 discriminator 1
 1135              		.syntax unified
 1136              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 1137 0010 4FF05003 			mov r3, #80												
 1138 0014 83F31188 		msr basepri, r3											
 1139 0018 BFF36F8F 		isb														
 1140 001c BFF34F8F 		dsb														
 1141              	
 1142              	@ 0 "" 2
 1143              		.thumb
 1144              		.syntax unified
 1145 0020 0293     		str	r3, [sp, #8]
 1146              	.L68:
 1147              	.LBE128:
 1148              	.LBE127:
 1149              		.loc 1 1356 0 discriminator 1
 1150 0022 FEE7     		b	.L68
 1151              	.L67:
1357:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1358:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
 1152              		.loc 1 1358 0
 1153 0024 274B     		ldr	r3, .L81
 1154 0026 1B68     		ldr	r3, [r3]
 1155 0028 069A     		ldr	r2, [sp, #24]
 1156 002a 9A42     		cmp	r2, r3
 1157 002c 03D1     		bne	.L69
1359:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1360:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* The task calling this function is querying its own state. */
1361:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			eReturn = eRunning;
 1158              		.loc 1 1361 0
 1159 002e 0023     		movs	r3, #0
 1160 0030 8DF81F30 		strb	r3, [sp, #31]
 1161 0034 40E0     		b	.L70
 1162              	.L69:
1362:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1363:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1364:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1365:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 1163              		.loc 1 1365 0
 1164 0036 FFF7FEFF 		bl	vPortEnterCritical
1366:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1367:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxStateList = listLIST_ITEM_CONTAINER( &( pxTCB->xStateListItem ) );
 1165              		.loc 1 1367 0
 1166 003a 069B     		ldr	r3, [sp, #24]
 1167 003c 5B69     		ldr	r3, [r3, #20]
 1168 003e 0593     		str	r3, [sp, #20]
1368:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxDelayedList = pxDelayedTaskList;
 1169              		.loc 1 1368 0
 1170 0040 214B     		ldr	r3, .L81+4
 1171 0042 1B68     		ldr	r3, [r3]
 1172 0044 0493     		str	r3, [sp, #16]
1369:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxOverflowedDelayedList = pxOverflowDelayedTaskList;
 1173              		.loc 1 1369 0
 1174 0046 214B     		ldr	r3, .L81+8
 1175 0048 1B68     		ldr	r3, [r3]
 1176 004a 0393     		str	r3, [sp, #12]
1370:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1371:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 1177              		.loc 1 1371 0
 1178 004c FFF7FEFF 		bl	vPortExitCritical
1372:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1373:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( ( pxStateList == pxDelayedList ) || ( pxStateList == pxOverflowedDelayedList ) )
 1179              		.loc 1 1373 0
 1180 0050 059A     		ldr	r2, [sp, #20]
 1181 0052 049B     		ldr	r3, [sp, #16]
 1182 0054 9A42     		cmp	r2, r3
 1183 0056 03D0     		beq	.L71
 1184              		.loc 1 1373 0 is_stmt 0 discriminator 1
 1185 0058 059A     		ldr	r2, [sp, #20]
 1186 005a 039B     		ldr	r3, [sp, #12]
 1187 005c 9A42     		cmp	r2, r3
 1188 005e 03D1     		bne	.L72
 1189              	.L71:
1374:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1375:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The task being queried is referenced from one of the Blocked
1376:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				lists. */
1377:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				eReturn = eBlocked;
 1190              		.loc 1 1377 0 is_stmt 1
 1191 0060 0223     		movs	r3, #2
 1192 0062 8DF81F30 		strb	r3, [sp, #31]
 1193 0066 27E0     		b	.L70
 1194              	.L72:
1378:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1379:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1380:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
1381:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else if( pxStateList == &xSuspendedTaskList )
 1195              		.loc 1 1381 0
 1196 0068 059B     		ldr	r3, [sp, #20]
 1197 006a 194A     		ldr	r2, .L81+12
 1198 006c 9342     		cmp	r3, r2
 1199 006e 15D1     		bne	.L73
1382:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1383:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the suspended
1384:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					list.  Is it genuinely suspended or is it blocked
1385:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					indefinitely? */
1386:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL )
 1200              		.loc 1 1386 0
 1201 0070 069B     		ldr	r3, [sp, #24]
 1202 0072 9B6A     		ldr	r3, [r3, #40]
 1203 0074 002B     		cmp	r3, #0
 1204 0076 0DD1     		bne	.L74
1387:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1388:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#if( configUSE_TASK_NOTIFICATIONS == 1 )
1389:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
1390:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							/* The task does not appear on the event list item of
1391:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							and of the RTOS objects, but could still be in the
1392:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							blocked state if it is waiting on its notification
1393:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							rather than waiting on an object. */
1394:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 1205              		.loc 1 1394 0
 1206 0078 069B     		ldr	r3, [sp, #24]
 1207 007a 93F85430 		ldrb	r3, [r3, #84]
 1208 007e DBB2     		uxtb	r3, r3
 1209 0080 012B     		cmp	r3, #1
 1210 0082 03D1     		bne	.L75
1395:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							{
1396:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								eReturn = eBlocked;
 1211              		.loc 1 1396 0
 1212 0084 0223     		movs	r3, #2
 1213 0086 8DF81F30 		strb	r3, [sp, #31]
 1214 008a 15E0     		b	.L70
 1215              	.L75:
1397:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							}
1398:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							else
1399:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							{
1400:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								eReturn = eSuspended;
 1216              		.loc 1 1400 0
 1217 008c 0323     		movs	r3, #3
 1218 008e 8DF81F30 		strb	r3, [sp, #31]
 1219 0092 11E0     		b	.L70
 1220              	.L74:
1401:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							}
1402:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
1403:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#else
1404:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
1405:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							eReturn = eSuspended;
1406:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
1407:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#endif
1408:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1409:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
1410:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1411:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						eReturn = eBlocked;
 1221              		.loc 1 1411 0
 1222 0094 0223     		movs	r3, #2
 1223 0096 8DF81F30 		strb	r3, [sp, #31]
 1224 009a 0DE0     		b	.L70
 1225              	.L73:
1412:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1413:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1414:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif
1415:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1416:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskDelete == 1 )
1417:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else if( ( pxStateList == &xTasksWaitingTermination ) || ( pxStateList == NULL ) )
 1226              		.loc 1 1417 0
 1227 009c 059B     		ldr	r3, [sp, #20]
 1228 009e 0D4A     		ldr	r2, .L81+16
 1229 00a0 9342     		cmp	r3, r2
 1230 00a2 02D0     		beq	.L78
 1231              		.loc 1 1417 0 is_stmt 0 discriminator 1
 1232 00a4 059B     		ldr	r3, [sp, #20]
 1233 00a6 002B     		cmp	r3, #0
 1234 00a8 03D1     		bne	.L79
 1235              	.L78:
1418:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1419:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The task being queried is referenced from the deleted
1420:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					tasks list, or it is not referenced from any lists at
1421:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					all. */
1422:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					eReturn = eDeleted;
 1236              		.loc 1 1422 0 is_stmt 1
 1237 00aa 0423     		movs	r3, #4
 1238 00ac 8DF81F30 		strb	r3, [sp, #31]
 1239 00b0 02E0     		b	.L70
 1240              	.L79:
1423:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1424:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif
1425:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1426:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else /*lint !e525 Negative indentation is intended to make use of pre-processor clearer. */
1427:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1428:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* If the task is not in any other state, it must be in the
1429:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				Ready (including pending ready) state. */
1430:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				eReturn = eReady;
 1241              		.loc 1 1430 0
 1242 00b2 0123     		movs	r3, #1
 1243 00b4 8DF81F30 		strb	r3, [sp, #31]
 1244              	.L70:
1431:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1432:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1433:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1434:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return eReturn;
 1245              		.loc 1 1434 0
 1246 00b8 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
1435:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1247              		.loc 1 1435 0
 1248 00bc 1846     		mov	r0, r3
 1249 00be 09B0     		add	sp, sp, #36
 1250              	.LCFI20:
 1251              		.cfi_def_cfa_offset 4
 1252              		@ sp needed
 1253 00c0 5DF804FB 		ldr	pc, [sp], #4
 1254              	.L82:
 1255              		.align	2
 1256              	.L81:
 1257 00c4 00000000 		.word	pxCurrentTCB
 1258 00c8 00000000 		.word	pxDelayedTaskList
 1259 00cc 00000000 		.word	pxOverflowDelayedTaskList
 1260 00d0 00000000 		.word	xSuspendedTaskList
 1261 00d4 00000000 		.word	xTasksWaitingTermination
 1262              		.cfi_endproc
 1263              	.LFE11:
 1265              		.section	.text.uxTaskPriorityGet,"ax",%progbits
 1266              		.align	1
 1267              		.global	uxTaskPriorityGet
 1268              		.syntax unified
 1269              		.thumb
 1270              		.thumb_func
 1271              		.fpu fpv4-sp-d16
 1273              	uxTaskPriorityGet:
 1274              	.LFB12:
1436:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1437:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_eTaskGetState */
1438:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1439:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1440:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1441:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1442:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGet( const TaskHandle_t xTask )
1443:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 1275              		.loc 1 1443 0
 1276              		.cfi_startproc
 1277              		@ args = 0, pretend = 0, frame = 16
 1278              		@ frame_needed = 0, uses_anonymous_args = 0
 1279 0000 00B5     		push	{lr}
 1280              	.LCFI21:
 1281              		.cfi_def_cfa_offset 4
 1282              		.cfi_offset 14, -4
 1283 0002 85B0     		sub	sp, sp, #20
 1284              	.LCFI22:
 1285              		.cfi_def_cfa_offset 24
 1286 0004 0190     		str	r0, [sp, #4]
1444:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1445:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
1446:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1447:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 1287              		.loc 1 1447 0
 1288 0006 FFF7FEFF 		bl	vPortEnterCritical
1448:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1449:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the task
1450:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			that called uxTaskPriorityGet() that is being queried. */
1451:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 1289              		.loc 1 1451 0
 1290 000a 019B     		ldr	r3, [sp, #4]
 1291 000c 002B     		cmp	r3, #0
 1292 000e 02D1     		bne	.L84
 1293              		.loc 1 1451 0 is_stmt 0 discriminator 1
 1294 0010 074B     		ldr	r3, .L87
 1295 0012 1B68     		ldr	r3, [r3]
 1296 0014 00E0     		b	.L85
 1297              	.L84:
 1298              		.loc 1 1451 0 discriminator 2
 1299 0016 019B     		ldr	r3, [sp, #4]
 1300              	.L85:
 1301              		.loc 1 1451 0 discriminator 4
 1302 0018 0393     		str	r3, [sp, #12]
1452:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1303              		.loc 1 1452 0 is_stmt 1 discriminator 4
 1304 001a 039B     		ldr	r3, [sp, #12]
 1305 001c DB6A     		ldr	r3, [r3, #44]
 1306 001e 0293     		str	r3, [sp, #8]
1453:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1454:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1307              		.loc 1 1454 0 discriminator 4
 1308 0020 FFF7FEFF 		bl	vPortExitCritical
1455:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1456:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 1309              		.loc 1 1456 0 discriminator 4
 1310 0024 029B     		ldr	r3, [sp, #8]
1457:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 1311              		.loc 1 1457 0 discriminator 4
 1312 0026 1846     		mov	r0, r3
 1313 0028 05B0     		add	sp, sp, #20
 1314              	.LCFI23:
 1315              		.cfi_def_cfa_offset 4
 1316              		@ sp needed
 1317 002a 5DF804FB 		ldr	pc, [sp], #4
 1318              	.L88:
 1319 002e 00BF     		.align	2
 1320              	.L87:
 1321 0030 00000000 		.word	pxCurrentTCB
 1322              		.cfi_endproc
 1323              	.LFE12:
 1325              		.section	.text.uxTaskPriorityGetFromISR,"ax",%progbits
 1326              		.align	1
 1327              		.global	uxTaskPriorityGetFromISR
 1328              		.syntax unified
 1329              		.thumb
 1330              		.thumb_func
 1331              		.fpu fpv4-sp-d16
 1333              	uxTaskPriorityGetFromISR:
 1334              	.LFB13:
1458:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1459:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1460:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1461:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1462:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskPriorityGet == 1 )
1463:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1464:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskPriorityGetFromISR( const TaskHandle_t xTask )
1465:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 1335              		.loc 1 1465 0
 1336              		.cfi_startproc
 1337              		@ args = 0, pretend = 0, frame = 32
 1338              		@ frame_needed = 0, uses_anonymous_args = 0
 1339 0000 00B5     		push	{lr}
 1340              	.LCFI24:
 1341              		.cfi_def_cfa_offset 4
 1342              		.cfi_offset 14, -4
 1343 0002 89B0     		sub	sp, sp, #36
 1344              	.LCFI25:
 1345              		.cfi_def_cfa_offset 40
 1346 0004 0190     		str	r0, [sp, #4]
1466:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
1467:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn, uxSavedInterruptState;
1468:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1469:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1470:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1471:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1472:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1473:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1474:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1475:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1476:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1477:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1478:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1479:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1480:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1481:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1482:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1483:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1484:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1485:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 1347              		.loc 1 1485 0
 1348 0006 FFF7FEFF 		bl	vPortValidateInterruptPriority
 1349              	.LBB129:
 1350              	.LBB130:
 196:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 197:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %0, %1												\n"	\
 198:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %0											\n" \
 199:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 200:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 201:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "memory"
 202:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 203:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 204:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 205:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 206:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 207:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static uint32_t ulPortRaiseBASEPRI( void )
 208:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 209:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** uint32_t ulOriginalBASEPRI, ulNewBASEPRI;
 210:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 211:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1351              		.loc 2 211 0
 1352              		.syntax unified
 1353              	@ 211 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 1354 000a EFF31182 			mrs r2, basepri											
 1355 000e 4FF05003 		mov r3, #80												
 1356 0012 83F31188 		msr basepri, r3											
 1357 0016 BFF36F8F 		isb														
 1358 001a BFF34F8F 		dsb														
 1359              	
 1360              	@ 0 "" 2
 1361              		.thumb
 1362              		.syntax unified
 1363 001e 0492     		str	r2, [sp, #16]
 1364 0020 0393     		str	r3, [sp, #12]
 212:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 213:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mrs %0, basepri											\n" \
 214:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	mov %1, %2												\n"	\
 215:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	msr basepri, %1											\n" \
 216:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	isb														\n" \
 217:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		"	dsb														\n" \
 218:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		:"=r" (ulOriginalBASEPRI), "=r" (ulNewBASEPRI) : "i" ( configMAX_SYSCALL_INTERRUPT_PRIORITY ) : "
 219:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	);
 220:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 221:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	/* This return will not be reached but is necessary to prevent compiler
 222:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	warnings. */
 223:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	return ulOriginalBASEPRI;
 1365              		.loc 2 223 0
 1366 0022 049B     		ldr	r3, [sp, #16]
 1367              	.LBE130:
 1368              	.LBE129:
1486:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1487:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptState = portSET_INTERRUPT_MASK_FROM_ISR();
 1369              		.loc 1 1487 0
 1370 0024 0793     		str	r3, [sp, #28]
1488:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1489:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1490:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			task that is being queried. */
1491:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 1371              		.loc 1 1491 0
 1372 0026 019B     		ldr	r3, [sp, #4]
 1373 0028 002B     		cmp	r3, #0
 1374 002a 02D1     		bne	.L91
 1375              		.loc 1 1491 0 is_stmt 0 discriminator 1
 1376 002c 084B     		ldr	r3, .L94
 1377 002e 1B68     		ldr	r3, [r3]
 1378 0030 00E0     		b	.L92
 1379              	.L91:
 1380              		.loc 1 1491 0 discriminator 2
 1381 0032 019B     		ldr	r3, [sp, #4]
 1382              	.L92:
 1383              		.loc 1 1491 0 discriminator 4
 1384 0034 0693     		str	r3, [sp, #24]
1492:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxPriority;
 1385              		.loc 1 1492 0 is_stmt 1 discriminator 4
 1386 0036 069B     		ldr	r3, [sp, #24]
 1387 0038 DB6A     		ldr	r3, [r3, #44]
 1388 003a 0593     		str	r3, [sp, #20]
 1389 003c 079B     		ldr	r3, [sp, #28]
 1390 003e 0293     		str	r3, [sp, #8]
 1391              	.LBB131:
 1392              	.LBB132:
 224:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 225:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** /*-----------------------------------------------------------*/
 226:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 
 227:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** portFORCE_INLINE static void vPortSetBASEPRI( uint32_t ulNewMaskValue )
 228:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** {
 229:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	__asm volatile
 1393              		.loc 2 229 0 discriminator 4
 1394 0040 029B     		ldr	r3, [sp, #8]
 1395              		.syntax unified
 1396              	@ 229 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 1397 0042 83F31188 			msr basepri, r3	
 1398              	@ 0 "" 2
 1399              		.thumb
 1400              		.syntax unified
 1401              	.LBE132:
 1402              	.LBE131:
1493:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1494:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptState );
1495:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1496:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 1403              		.loc 1 1496 0 discriminator 4
 1404 0046 059B     		ldr	r3, [sp, #20]
1497:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 1405              		.loc 1 1497 0 discriminator 4
 1406 0048 1846     		mov	r0, r3
 1407 004a 09B0     		add	sp, sp, #36
 1408              	.LCFI26:
 1409              		.cfi_def_cfa_offset 4
 1410              		@ sp needed
 1411 004c 5DF804FB 		ldr	pc, [sp], #4
 1412              	.L95:
 1413              		.align	2
 1414              	.L94:
 1415 0050 00000000 		.word	pxCurrentTCB
 1416              		.cfi_endproc
 1417              	.LFE13:
 1419              		.section	.text.vTaskPrioritySet,"ax",%progbits
 1420              		.align	1
 1421              		.global	vTaskPrioritySet
 1422              		.syntax unified
 1423              		.thumb
 1424              		.thumb_func
 1425              		.fpu fpv4-sp-d16
 1427              	vTaskPrioritySet:
 1428              	.LFB14:
1498:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1499:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskPriorityGet */
1500:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1501:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1502:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskPrioritySet == 1 )
1503:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1504:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskPrioritySet( TaskHandle_t xTask, UBaseType_t uxNewPriority )
1505:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 1429              		.loc 1 1505 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 32
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433 0000 00B5     		push	{lr}
 1434              	.LCFI27:
 1435              		.cfi_def_cfa_offset 4
 1436              		.cfi_offset 14, -4
 1437 0002 89B0     		sub	sp, sp, #36
 1438              	.LCFI28:
 1439              		.cfi_def_cfa_offset 40
 1440 0004 0190     		str	r0, [sp, #4]
 1441 0006 0091     		str	r1, [sp]
1506:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1507:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxCurrentBasePriority, uxPriorityUsedOnEntry;
1508:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 1442              		.loc 1 1508 0
 1443 0008 0023     		movs	r3, #0
 1444 000a 0793     		str	r3, [sp, #28]
1509:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1510:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( ( uxNewPriority < configMAX_PRIORITIES ) );
 1445              		.loc 1 1510 0
 1446 000c 009B     		ldr	r3, [sp]
 1447 000e 042B     		cmp	r3, #4
 1448 0010 09D9     		bls	.L97
 1449              	.LBB133:
 1450              	.LBB134:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1451              		.loc 2 195 0 discriminator 1
 1452              		.syntax unified
 1453              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 1454 0012 4FF05003 			mov r3, #80												
 1455 0016 83F31188 		msr basepri, r3											
 1456 001a BFF36F8F 		isb														
 1457 001e BFF34F8F 		dsb														
 1458              	
 1459              	@ 0 "" 2
 1460              		.thumb
 1461              		.syntax unified
 1462 0022 0393     		str	r3, [sp, #12]
 1463              	.L98:
 1464              	.LBE134:
 1465              	.LBE133:
 1466              		.loc 1 1510 0 discriminator 1
 1467 0024 FEE7     		b	.L98
 1468              	.L97:
1511:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1512:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Ensure the new priority is valid. */
1513:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( uxNewPriority >= ( UBaseType_t ) configMAX_PRIORITIES )
 1469              		.loc 1 1513 0
 1470 0026 009B     		ldr	r3, [sp]
 1471 0028 042B     		cmp	r3, #4
 1472 002a 01D9     		bls	.L99
1514:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1515:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			uxNewPriority = ( UBaseType_t ) configMAX_PRIORITIES - ( UBaseType_t ) 1U;
 1473              		.loc 1 1515 0
 1474 002c 0423     		movs	r3, #4
 1475 002e 0093     		str	r3, [sp]
 1476              	.L99:
1516:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1517:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1518:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1519:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1520:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1521:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1522:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 1477              		.loc 1 1522 0
 1478 0030 FFF7FEFF 		bl	vPortEnterCritical
1523:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1524:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the priority of the calling
1525:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			task that is being changed. */
1526:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTask );
 1479              		.loc 1 1526 0
 1480 0034 019B     		ldr	r3, [sp, #4]
 1481 0036 002B     		cmp	r3, #0
 1482 0038 02D1     		bne	.L100
 1483              		.loc 1 1526 0 is_stmt 0 discriminator 1
 1484 003a 414B     		ldr	r3, .L109
 1485 003c 1B68     		ldr	r3, [r3]
 1486 003e 00E0     		b	.L101
 1487              	.L100:
 1488              		.loc 1 1526 0 discriminator 2
 1489 0040 019B     		ldr	r3, [sp, #4]
 1490              	.L101:
 1491              		.loc 1 1526 0 discriminator 4
 1492 0042 0693     		str	r3, [sp, #24]
1527:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1528:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			traceTASK_PRIORITY_SET( pxTCB, uxNewPriority );
1529:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1530:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if ( configUSE_MUTEXES == 1 )
1531:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1532:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxBasePriority;
 1493              		.loc 1 1532 0 is_stmt 1 discriminator 4
 1494 0044 069B     		ldr	r3, [sp, #24]
 1495 0046 9B6C     		ldr	r3, [r3, #72]
 1496 0048 0593     		str	r3, [sp, #20]
1533:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1534:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#else
1535:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1536:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxCurrentBasePriority = pxTCB->uxPriority;
1537:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1538:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif
1539:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1540:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxCurrentBasePriority != uxNewPriority )
 1497              		.loc 1 1540 0 discriminator 4
 1498 004a 059A     		ldr	r2, [sp, #20]
 1499 004c 009B     		ldr	r3, [sp]
 1500 004e 9A42     		cmp	r2, r3
 1501 0050 6FD0     		beq	.L102
1541:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1542:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The priority change may have readied a task of higher
1543:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				priority than the calling task. */
1544:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( uxNewPriority > uxCurrentBasePriority )
 1502              		.loc 1 1544 0
 1503 0052 009A     		ldr	r2, [sp]
 1504 0054 059B     		ldr	r3, [sp, #20]
 1505 0056 9A42     		cmp	r2, r3
 1506 0058 0DD9     		bls	.L103
1545:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1546:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pxTCB != pxCurrentTCB )
 1507              		.loc 1 1546 0
 1508 005a 394B     		ldr	r3, .L109
 1509 005c 1B68     		ldr	r3, [r3]
 1510 005e 069A     		ldr	r2, [sp, #24]
 1511 0060 9A42     		cmp	r2, r3
 1512 0062 0FD0     		beq	.L104
1547:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1548:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* The priority of a task other than the currently
1549:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						running task is being raised.  Is the priority being
1550:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						raised above that of the running task? */
1551:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						if( uxNewPriority >= pxCurrentTCB->uxPriority )
 1513              		.loc 1 1551 0
 1514 0064 364B     		ldr	r3, .L109
 1515 0066 1B68     		ldr	r3, [r3]
 1516 0068 DB6A     		ldr	r3, [r3, #44]
 1517 006a 009A     		ldr	r2, [sp]
 1518 006c 9A42     		cmp	r2, r3
 1519 006e 09D3     		bcc	.L104
1552:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
1553:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							xYieldRequired = pdTRUE;
 1520              		.loc 1 1553 0
 1521 0070 0123     		movs	r3, #1
 1522 0072 0793     		str	r3, [sp, #28]
 1523 0074 06E0     		b	.L104
 1524              	.L103:
1554:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
1555:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						else
1556:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
1557:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
1558:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
1559:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1560:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
1561:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1562:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* The priority of the running task is being raised,
1563:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						but the running task must already be the highest
1564:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						priority task able to run so no yield is required. */
1565:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1566:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1567:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else if( pxTCB == pxCurrentTCB )
 1525              		.loc 1 1567 0
 1526 0076 324B     		ldr	r3, .L109
 1527 0078 1B68     		ldr	r3, [r3]
 1528 007a 069A     		ldr	r2, [sp, #24]
 1529 007c 9A42     		cmp	r2, r3
 1530 007e 01D1     		bne	.L104
1568:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1569:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of the running task down means
1570:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					there may now be another task of higher priority that
1571:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					is ready to execute. */
1572:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xYieldRequired = pdTRUE;
 1531              		.loc 1 1572 0
 1532 0080 0123     		movs	r3, #1
 1533 0082 0793     		str	r3, [sp, #28]
 1534              	.L104:
1573:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1574:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1575:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1576:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Setting the priority of any other task down does not
1577:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					require a yield as the running task must be above the
1578:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					new priority of the task being modified. */
1579:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1580:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1581:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Remember the ready list the task might be referenced from
1582:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				before its uxPriority member is changed so the
1583:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY() macro can function correctly. */
1584:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxPriorityUsedOnEntry = pxTCB->uxPriority;
 1535              		.loc 1 1584 0
 1536 0084 069B     		ldr	r3, [sp, #24]
 1537 0086 DB6A     		ldr	r3, [r3, #44]
 1538 0088 0493     		str	r3, [sp, #16]
1585:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1586:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#if ( configUSE_MUTEXES == 1 )
1587:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1588:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Only change the priority being used if the task is not
1589:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					currently using an inherited priority. */
1590:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxBasePriority == pxTCB->uxPriority )
 1539              		.loc 1 1590 0
 1540 008a 069B     		ldr	r3, [sp, #24]
 1541 008c 9A6C     		ldr	r2, [r3, #72]
 1542 008e 069B     		ldr	r3, [sp, #24]
 1543 0090 DB6A     		ldr	r3, [r3, #44]
 1544 0092 9A42     		cmp	r2, r3
 1545 0094 02D1     		bne	.L105
1591:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1592:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						pxTCB->uxPriority = uxNewPriority;
 1546              		.loc 1 1592 0
 1547 0096 069B     		ldr	r3, [sp, #24]
 1548 0098 009A     		ldr	r2, [sp]
 1549 009a DA62     		str	r2, [r3, #44]
 1550              	.L105:
1593:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1594:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
1595:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1596:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1597:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1598:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1599:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The base priority gets set whatever. */
1600:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB->uxBasePriority = uxNewPriority;
 1551              		.loc 1 1600 0
 1552 009c 069B     		ldr	r3, [sp, #24]
 1553 009e 009A     		ldr	r2, [sp]
 1554 00a0 9A64     		str	r2, [r3, #72]
1601:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1602:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#else
1603:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1604:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxNewPriority;
1605:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1606:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#endif
1607:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1608:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Only reset the event list item value if the value is not
1609:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				being used for anything else. */
1610:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE 
 1555              		.loc 1 1610 0
 1556 00a2 069B     		ldr	r3, [sp, #24]
 1557 00a4 9B69     		ldr	r3, [r3, #24]
 1558 00a6 002B     		cmp	r3, #0
 1559 00a8 04DB     		blt	.L106
1611:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1612:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES - (
 1560              		.loc 1 1612 0
 1561 00aa 009B     		ldr	r3, [sp]
 1562 00ac C3F10502 		rsb	r2, r3, #5
 1563 00b0 069B     		ldr	r3, [sp, #24]
 1564 00b2 9A61     		str	r2, [r3, #24]
 1565              	.L106:
1613:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1614:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1615:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1616:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1617:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1618:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1619:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* If the task is in the blocked or suspended list we need do
1620:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				nothing more than change its priority variable. However, if
1621:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				the task is in a ready list it needs to be removed and placed
1622:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				in the list appropriate to its new priority. */
1623:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xStateL
 1566              		.loc 1 1623 0
 1567 00b4 069B     		ldr	r3, [sp, #24]
 1568 00b6 5969     		ldr	r1, [r3, #20]
 1569 00b8 049A     		ldr	r2, [sp, #16]
 1570 00ba 1346     		mov	r3, r2
 1571 00bc 9B00     		lsls	r3, r3, #2
 1572 00be 1344     		add	r3, r3, r2
 1573 00c0 9B00     		lsls	r3, r3, #2
 1574 00c2 204A     		ldr	r2, .L109+4
 1575 00c4 1344     		add	r3, r3, r2
 1576 00c6 9942     		cmp	r1, r3
 1577 00c8 28D1     		bne	.L107
1624:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1625:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The task is currently in its ready list - remove before
1626:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					adding it to it's new ready list.  As we are in a critical
1627:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					section we can do this even if the scheduler is suspended. */
1628:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 1578              		.loc 1 1628 0
 1579 00ca 069B     		ldr	r3, [sp, #24]
 1580 00cc 0433     		adds	r3, r3, #4
 1581 00ce 1846     		mov	r0, r3
 1582 00d0 FFF7FEFF 		bl	uxListRemove
 1583 00d4 0346     		mov	r3, r0
 1584 00d6 002B     		cmp	r3, #0
 1585 00d8 09D1     		bne	.L108
1629:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1630:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* It is known that the task is in its ready list so
1631:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						there is no need to check again and the port level
1632:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						reset macro can be called directly. */
1633:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						portRESET_READY_PRIORITY( uxPriorityUsedOnEntry, uxTopReadyPriority );
 1586              		.loc 1 1633 0
 1587 00da 0122     		movs	r2, #1
 1588 00dc 049B     		ldr	r3, [sp, #16]
 1589 00de 02FA03F3 		lsl	r3, r2, r3
 1590 00e2 DA43     		mvns	r2, r3
 1591 00e4 184B     		ldr	r3, .L109+8
 1592 00e6 1B68     		ldr	r3, [r3]
 1593 00e8 1340     		ands	r3, r3, r2
 1594 00ea 174A     		ldr	r2, .L109+8
 1595 00ec 1360     		str	r3, [r2]
 1596              	.L108:
1634:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1635:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
1636:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1637:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1638:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1639:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 1597              		.loc 1 1639 0
 1598 00ee 069B     		ldr	r3, [sp, #24]
 1599 00f0 DB6A     		ldr	r3, [r3, #44]
 1600 00f2 0122     		movs	r2, #1
 1601 00f4 9A40     		lsls	r2, r2, r3
 1602 00f6 144B     		ldr	r3, .L109+8
 1603 00f8 1B68     		ldr	r3, [r3]
 1604 00fa 1343     		orrs	r3, r3, r2
 1605 00fc 124A     		ldr	r2, .L109+8
 1606 00fe 1360     		str	r3, [r2]
 1607 0100 069B     		ldr	r3, [sp, #24]
 1608 0102 DA6A     		ldr	r2, [r3, #44]
 1609 0104 1346     		mov	r3, r2
 1610 0106 9B00     		lsls	r3, r3, #2
 1611 0108 1344     		add	r3, r3, r2
 1612 010a 9B00     		lsls	r3, r3, #2
 1613 010c 0D4A     		ldr	r2, .L109+4
 1614 010e 1A44     		add	r2, r2, r3
 1615 0110 069B     		ldr	r3, [sp, #24]
 1616 0112 0433     		adds	r3, r3, #4
 1617 0114 1946     		mov	r1, r3
 1618 0116 1046     		mov	r0, r2
 1619 0118 FFF7FEFF 		bl	vListInsertEnd
 1620              	.L107:
1640:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1641:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1642:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1643:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1644:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1645:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1646:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( xYieldRequired != pdFALSE )
 1621              		.loc 1 1646 0
 1622 011c 079B     		ldr	r3, [sp, #28]
 1623 011e 002B     		cmp	r3, #0
 1624 0120 07D0     		beq	.L102
1647:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1648:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 1625              		.loc 1 1648 0
 1626 0122 0A4B     		ldr	r3, .L109+12
 1627 0124 4FF08052 		mov	r2, #268435456
 1628 0128 1A60     		str	r2, [r3]
 1629              		.syntax unified
 1630              	@ 1648 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 1631 012a BFF34F8F 		dsb
 1632              	@ 0 "" 2
 1633              	@ 1648 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 1634 012e BFF36F8F 		isb
 1635              	@ 0 "" 2
 1636              		.thumb
 1637              		.syntax unified
 1638              	.L102:
1649:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1650:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1651:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1652:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1653:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1654:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1655:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Remove compiler warning about unused variables when the port
1656:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				optimised task selection is not being used. */
1657:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				( void ) uxPriorityUsedOnEntry;
1658:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1659:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1660:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1639              		.loc 1 1660 0
 1640 0132 FFF7FEFF 		bl	vPortExitCritical
1661:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 1641              		.loc 1 1661 0
 1642 0136 00BF     		nop
 1643 0138 09B0     		add	sp, sp, #36
 1644              	.LCFI29:
 1645              		.cfi_def_cfa_offset 4
 1646              		@ sp needed
 1647 013a 5DF804FB 		ldr	pc, [sp], #4
 1648              	.L110:
 1649 013e 00BF     		.align	2
 1650              	.L109:
 1651 0140 00000000 		.word	pxCurrentTCB
 1652 0144 00000000 		.word	pxReadyTasksLists
 1653 0148 00000000 		.word	uxTopReadyPriority
 1654 014c 04ED00E0 		.word	-536810236
 1655              		.cfi_endproc
 1656              	.LFE14:
 1658              		.section	.text.vTaskSuspend,"ax",%progbits
 1659              		.align	1
 1660              		.global	vTaskSuspend
 1661              		.syntax unified
 1662              		.thumb
 1663              		.thumb_func
 1664              		.fpu fpv4-sp-d16
 1666              	vTaskSuspend:
 1667              	.LFB15:
1662:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1663:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskPrioritySet */
1664:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1665:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1666:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1667:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1668:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskSuspend( TaskHandle_t xTaskToSuspend )
1669:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 1668              		.loc 1 1669 0
 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 16
 1671              		@ frame_needed = 0, uses_anonymous_args = 0
 1672 0000 00B5     		push	{lr}
 1673              	.LCFI30:
 1674              		.cfi_def_cfa_offset 4
 1675              		.cfi_offset 14, -4
 1676 0002 85B0     		sub	sp, sp, #20
 1677              	.LCFI31:
 1678              		.cfi_def_cfa_offset 24
 1679 0004 0190     		str	r0, [sp, #4]
1670:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
1671:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1672:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 1680              		.loc 1 1672 0
 1681 0006 FFF7FEFF 		bl	vPortEnterCritical
1673:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1674:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If null is passed in here then it is the running task that is
1675:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			being suspended. */
1676:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSuspend );
 1682              		.loc 1 1676 0
 1683 000a 019B     		ldr	r3, [sp, #4]
 1684 000c 002B     		cmp	r3, #0
 1685 000e 02D1     		bne	.L112
 1686              		.loc 1 1676 0 is_stmt 0 discriminator 1
 1687 0010 3B4B     		ldr	r3, .L126
 1688 0012 1B68     		ldr	r3, [r3]
 1689 0014 00E0     		b	.L113
 1690              	.L112:
 1691              		.loc 1 1676 0 discriminator 2
 1692 0016 019B     		ldr	r3, [sp, #4]
 1693              	.L113:
 1694              		.loc 1 1676 0 discriminator 4
 1695 0018 0393     		str	r3, [sp, #12]
1677:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1678:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			traceTASK_SUSPEND( pxTCB );
1679:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1680:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Remove task from the ready/delayed list and place in the
1681:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			suspended list. */
1682:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 1696              		.loc 1 1682 0 is_stmt 1 discriminator 4
 1697 001a 039B     		ldr	r3, [sp, #12]
 1698 001c 0433     		adds	r3, r3, #4
 1699 001e 1846     		mov	r0, r3
 1700 0020 FFF7FEFF 		bl	uxListRemove
 1701 0024 0346     		mov	r3, r0
 1702 0026 002B     		cmp	r3, #0
 1703 0028 15D1     		bne	.L114
1683:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1684:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 1704              		.loc 1 1684 0
 1705 002a 039B     		ldr	r3, [sp, #12]
 1706 002c DA6A     		ldr	r2, [r3, #44]
 1707 002e 3549     		ldr	r1, .L126+4
 1708 0030 1346     		mov	r3, r2
 1709 0032 9B00     		lsls	r3, r3, #2
 1710 0034 1344     		add	r3, r3, r2
 1711 0036 9B00     		lsls	r3, r3, #2
 1712 0038 0B44     		add	r3, r3, r1
 1713 003a 1B68     		ldr	r3, [r3]
 1714 003c 002B     		cmp	r3, #0
 1715 003e 0AD1     		bne	.L114
 1716              		.loc 1 1684 0 is_stmt 0 discriminator 1
 1717 0040 039B     		ldr	r3, [sp, #12]
 1718 0042 DB6A     		ldr	r3, [r3, #44]
 1719 0044 0122     		movs	r2, #1
 1720 0046 02FA03F3 		lsl	r3, r2, r3
 1721 004a DA43     		mvns	r2, r3
 1722 004c 2E4B     		ldr	r3, .L126+8
 1723 004e 1B68     		ldr	r3, [r3]
 1724 0050 1340     		ands	r3, r3, r2
 1725 0052 2D4A     		ldr	r2, .L126+8
 1726 0054 1360     		str	r3, [r2]
 1727              	.L114:
1685:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1686:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1687:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1688:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1689:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1690:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1691:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Is the task waiting on an event also? */
1692:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 1728              		.loc 1 1692 0 is_stmt 1
 1729 0056 039B     		ldr	r3, [sp, #12]
 1730 0058 9B6A     		ldr	r3, [r3, #40]
 1731 005a 002B     		cmp	r3, #0
 1732 005c 04D0     		beq	.L116
1693:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1694:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 1733              		.loc 1 1694 0
 1734 005e 039B     		ldr	r3, [sp, #12]
 1735 0060 1833     		adds	r3, r3, #24
 1736 0062 1846     		mov	r0, r3
 1737 0064 FFF7FEFF 		bl	uxListRemove
 1738              	.L116:
1695:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1696:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1697:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1698:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1699:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1700:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1701:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxTCB->xStateListItem ) );
 1739              		.loc 1 1701 0
 1740 0068 039B     		ldr	r3, [sp, #12]
 1741 006a 0433     		adds	r3, r3, #4
 1742 006c 1946     		mov	r1, r3
 1743 006e 2748     		ldr	r0, .L126+12
 1744 0070 FFF7FEFF 		bl	vListInsertEnd
1702:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1703:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if( configUSE_TASK_NOTIFICATIONS == 1 )
1704:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1705:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB->ucNotifyState == taskWAITING_NOTIFICATION )
 1745              		.loc 1 1705 0
 1746 0074 039B     		ldr	r3, [sp, #12]
 1747 0076 93F85430 		ldrb	r3, [r3, #84]
 1748 007a DBB2     		uxtb	r3, r3
 1749 007c 012B     		cmp	r3, #1
 1750 007e 03D1     		bne	.L117
1706:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1707:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The task was blocked to wait for a notification, but is
1708:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					now suspended, so no notification was received. */
1709:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 1751              		.loc 1 1709 0
 1752 0080 039B     		ldr	r3, [sp, #12]
 1753 0082 0022     		movs	r2, #0
 1754 0084 83F85420 		strb	r2, [r3, #84]
 1755              	.L117:
1710:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1711:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1712:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif
1713:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1714:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 1756              		.loc 1 1714 0
 1757 0088 FFF7FEFF 		bl	vPortExitCritical
1715:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1716:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
 1758              		.loc 1 1716 0
 1759 008c 204B     		ldr	r3, .L126+16
 1760 008e 1B68     		ldr	r3, [r3]
 1761 0090 002B     		cmp	r3, #0
 1762 0092 05D0     		beq	.L118
1717:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1718:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Reset the next expected unblock time in case it referred to the
1719:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			task that is now in the Suspended state. */
1720:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 1763              		.loc 1 1720 0
 1764 0094 FFF7FEFF 		bl	vPortEnterCritical
1721:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1722:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvResetNextTaskUnblockTime();
 1765              		.loc 1 1722 0
 1766 0098 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
1723:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1724:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 1767              		.loc 1 1724 0
 1768 009c FFF7FEFF 		bl	vPortExitCritical
 1769              	.L118:
1725:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1726:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1727:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1728:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1729:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1730:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1731:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxTCB == pxCurrentTCB )
 1770              		.loc 1 1731 0
 1771 00a0 174B     		ldr	r3, .L126
 1772 00a2 1B68     		ldr	r3, [r3]
 1773 00a4 039A     		ldr	r2, [sp, #12]
 1774 00a6 9A42     		cmp	r2, r3
 1775 00a8 26D1     		bne	.L125
1732:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1733:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( xSchedulerRunning != pdFALSE )
 1776              		.loc 1 1733 0
 1777 00aa 194B     		ldr	r3, .L126+16
 1778 00ac 1B68     		ldr	r3, [r3]
 1779 00ae 002B     		cmp	r3, #0
 1780 00b0 16D0     		beq	.L120
1734:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1735:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The current task has just been suspended. */
1736:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				configASSERT( uxSchedulerSuspended == 0 );
 1781              		.loc 1 1736 0
 1782 00b2 184B     		ldr	r3, .L126+20
 1783 00b4 1B68     		ldr	r3, [r3]
 1784 00b6 002B     		cmp	r3, #0
 1785 00b8 09D0     		beq	.L121
 1786              	.LBB135:
 1787              	.LBB136:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1788              		.loc 2 195 0 discriminator 1
 1789              		.syntax unified
 1790              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 1791 00ba 4FF05003 			mov r3, #80												
 1792 00be 83F31188 		msr basepri, r3											
 1793 00c2 BFF36F8F 		isb														
 1794 00c6 BFF34F8F 		dsb														
 1795              	
 1796              	@ 0 "" 2
 1797              		.thumb
 1798              		.syntax unified
 1799 00ca 0293     		str	r3, [sp, #8]
 1800              	.L122:
 1801              	.LBE136:
 1802              	.LBE135:
 1803              		.loc 1 1736 0 discriminator 1
 1804 00cc FEE7     		b	.L122
 1805              	.L121:
1737:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				portYIELD_WITHIN_API();
 1806              		.loc 1 1737 0
 1807 00ce 124B     		ldr	r3, .L126+24
 1808 00d0 4FF08052 		mov	r2, #268435456
 1809 00d4 1A60     		str	r2, [r3]
 1810              		.syntax unified
 1811              	@ 1737 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 1812 00d6 BFF34F8F 		dsb
 1813              	@ 0 "" 2
 1814              	@ 1737 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 1815 00da BFF36F8F 		isb
 1816              	@ 0 "" 2
1738:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1739:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1740:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1741:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The scheduler is not running, but the task that was pointed
1742:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				to by pxCurrentTCB has just been suspended and pxCurrentTCB
1743:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				must be adjusted to point to a different task. */
1744:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == uxCurrentNumberOfTasks ) /*lint !e931 Rig
1745:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1746:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* No other tasks are ready, so set pxCurrentTCB back to
1747:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					NULL so when the next task is created pxCurrentTCB will
1748:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					be set to point to it no matter what its relative priority
1749:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					is. */
1750:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB = NULL;
1751:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1752:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1753:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1754:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					vTaskSwitchContext();
1755:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1756:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1757:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1758:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1759:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1760:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1761:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1762:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 1817              		.loc 1 1762 0
 1818              		.thumb
 1819              		.syntax unified
 1820 00de 0BE0     		b	.L125
 1821              	.L120:
1744:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
 1822              		.loc 1 1744 0
 1823 00e0 0A4B     		ldr	r3, .L126+12
 1824 00e2 1A68     		ldr	r2, [r3]
 1825 00e4 0D4B     		ldr	r3, .L126+28
 1826 00e6 1B68     		ldr	r3, [r3]
 1827 00e8 9A42     		cmp	r2, r3
 1828 00ea 03D1     		bne	.L124
1750:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
 1829              		.loc 1 1750 0
 1830 00ec 044B     		ldr	r3, .L126
 1831 00ee 0022     		movs	r2, #0
 1832 00f0 1A60     		str	r2, [r3]
 1833              		.loc 1 1762 0
 1834 00f2 01E0     		b	.L125
 1835              	.L124:
1754:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
 1836              		.loc 1 1754 0
 1837 00f4 FFF7FEFF 		bl	vTaskSwitchContext
 1838              	.L125:
 1839              		.loc 1 1762 0
 1840 00f8 00BF     		nop
 1841 00fa 05B0     		add	sp, sp, #20
 1842              	.LCFI32:
 1843              		.cfi_def_cfa_offset 4
 1844              		@ sp needed
 1845 00fc 5DF804FB 		ldr	pc, [sp], #4
 1846              	.L127:
 1847              		.align	2
 1848              	.L126:
 1849 0100 00000000 		.word	pxCurrentTCB
 1850 0104 00000000 		.word	pxReadyTasksLists
 1851 0108 00000000 		.word	uxTopReadyPriority
 1852 010c 00000000 		.word	xSuspendedTaskList
 1853 0110 00000000 		.word	xSchedulerRunning
 1854 0114 00000000 		.word	uxSchedulerSuspended
 1855 0118 04ED00E0 		.word	-536810236
 1856 011c 00000000 		.word	uxCurrentNumberOfTasks
 1857              		.cfi_endproc
 1858              	.LFE15:
 1860              		.section	.text.prvTaskIsTaskSuspended,"ax",%progbits
 1861              		.align	1
 1862              		.syntax unified
 1863              		.thumb
 1864              		.thumb_func
 1865              		.fpu fpv4-sp-d16
 1867              	prvTaskIsTaskSuspended:
 1868              	.LFB16:
1763:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1764:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1765:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1766:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1767:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1768:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1769:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static BaseType_t prvTaskIsTaskSuspended( const TaskHandle_t xTask )
1770:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 1869              		.loc 1 1770 0
 1870              		.cfi_startproc
 1871              		@ args = 0, pretend = 0, frame = 24
 1872              		@ frame_needed = 0, uses_anonymous_args = 0
 1873              		@ link register save eliminated.
 1874 0000 86B0     		sub	sp, sp, #24
 1875              	.LCFI33:
 1876              		.cfi_def_cfa_offset 24
 1877 0002 0190     		str	r0, [sp, #4]
1771:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 1878              		.loc 1 1771 0
 1879 0004 0023     		movs	r3, #0
 1880 0006 0593     		str	r3, [sp, #20]
1772:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	const TCB_t * const pxTCB = xTask;
 1881              		.loc 1 1772 0
 1882 0008 019B     		ldr	r3, [sp, #4]
 1883 000a 0493     		str	r3, [sp, #16]
1773:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1774:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Accesses xPendingReadyList so must be called from a critical
1775:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		section. */
1776:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1777:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to check if the calling task is suspended. */
1778:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( xTask );
 1884              		.loc 1 1778 0
 1885 000c 019B     		ldr	r3, [sp, #4]
 1886 000e 002B     		cmp	r3, #0
 1887 0010 09D1     		bne	.L129
 1888              	.LBB137:
 1889              	.LBB138:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1890              		.loc 2 195 0 discriminator 1
 1891              		.syntax unified
 1892              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 1893 0012 4FF05003 			mov r3, #80												
 1894 0016 83F31188 		msr basepri, r3											
 1895 001a BFF36F8F 		isb														
 1896 001e BFF34F8F 		dsb														
 1897              	
 1898              	@ 0 "" 2
 1899              		.thumb
 1900              		.syntax unified
 1901 0022 0393     		str	r3, [sp, #12]
 1902              	.L130:
 1903              	.LBE138:
 1904              	.LBE137:
 1905              		.loc 1 1778 0 discriminator 1
 1906 0024 FEE7     		b	.L130
 1907              	.L129:
1779:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1780:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Is the task being resumed actually in the suspended list? */
1781:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( listIS_CONTAINED_WITHIN( &xSuspendedTaskList, &( pxTCB->xStateListItem ) ) != pdFALSE )
 1908              		.loc 1 1781 0
 1909 0026 049B     		ldr	r3, [sp, #16]
 1910 0028 5B69     		ldr	r3, [r3, #20]
 1911 002a 094A     		ldr	r2, .L133
 1912 002c 9342     		cmp	r3, r2
 1913 002e 0AD1     		bne	.L131
1782:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1783:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Has the task already been resumed from within an ISR? */
1784:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( listIS_CONTAINED_WITHIN( &xPendingReadyList, &( pxTCB->xEventListItem ) ) == pdFALSE )
 1914              		.loc 1 1784 0
 1915 0030 049B     		ldr	r3, [sp, #16]
 1916 0032 9B6A     		ldr	r3, [r3, #40]
 1917 0034 074A     		ldr	r2, .L133+4
 1918 0036 9342     		cmp	r3, r2
 1919 0038 05D0     		beq	.L131
1785:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1786:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Is it in the suspended list because it is in the	Suspended
1787:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				state, or because is is blocked with no timeout? */
1788:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( NULL, &( pxTCB->xEventListItem ) ) != pdFALSE ) /*lint !e961.  The
 1920              		.loc 1 1788 0
 1921 003a 049B     		ldr	r3, [sp, #16]
 1922 003c 9B6A     		ldr	r3, [r3, #40]
 1923 003e 002B     		cmp	r3, #0
 1924 0040 01D1     		bne	.L131
1789:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1790:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 1925              		.loc 1 1790 0
 1926 0042 0123     		movs	r3, #1
 1927 0044 0593     		str	r3, [sp, #20]
 1928              	.L131:
1791:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1792:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1793:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1794:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1795:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1796:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1797:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1798:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1799:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1800:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1801:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1802:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1803:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1804:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1805:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1806:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1807:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 1929              		.loc 1 1807 0
 1930 0046 059B     		ldr	r3, [sp, #20]
1808:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	} /*lint !e818 xTask cannot be a pointer to const because it is a typedef. */
 1931              		.loc 1 1808 0
 1932 0048 1846     		mov	r0, r3
 1933 004a 06B0     		add	sp, sp, #24
 1934              	.LCFI34:
 1935              		.cfi_def_cfa_offset 0
 1936              		@ sp needed
 1937 004c 7047     		bx	lr
 1938              	.L134:
 1939 004e 00BF     		.align	2
 1940              	.L133:
 1941 0050 00000000 		.word	xSuspendedTaskList
 1942 0054 00000000 		.word	xPendingReadyList
 1943              		.cfi_endproc
 1944              	.LFE16:
 1946              		.section	.text.vTaskResume,"ax",%progbits
 1947              		.align	1
 1948              		.global	vTaskResume
 1949              		.syntax unified
 1950              		.thumb
 1951              		.thumb_func
 1952              		.fpu fpv4-sp-d16
 1954              	vTaskResume:
 1955              	.LFB17:
1809:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1810:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1811:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1812:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1813:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskSuspend == 1 )
1814:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1815:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskResume( TaskHandle_t xTaskToResume )
1816:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 1956              		.loc 1 1816 0
 1957              		.cfi_startproc
 1958              		@ args = 0, pretend = 0, frame = 16
 1959              		@ frame_needed = 0, uses_anonymous_args = 0
 1960 0000 00B5     		push	{lr}
 1961              	.LCFI35:
 1962              		.cfi_def_cfa_offset 4
 1963              		.cfi_offset 14, -4
 1964 0002 85B0     		sub	sp, sp, #20
 1965              	.LCFI36:
 1966              		.cfi_def_cfa_offset 24
 1967 0004 0190     		str	r0, [sp, #4]
1817:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 1968              		.loc 1 1817 0
 1969 0006 019B     		ldr	r3, [sp, #4]
 1970 0008 0393     		str	r3, [sp, #12]
1818:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1819:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* It does not make sense to resume the calling task. */
1820:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
 1971              		.loc 1 1820 0
 1972 000a 019B     		ldr	r3, [sp, #4]
 1973 000c 002B     		cmp	r3, #0
 1974 000e 09D1     		bne	.L136
 1975              	.LBB139:
 1976              	.LBB140:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 1977              		.loc 2 195 0 discriminator 1
 1978              		.syntax unified
 1979              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 1980 0010 4FF05003 			mov r3, #80												
 1981 0014 83F31188 		msr basepri, r3											
 1982 0018 BFF36F8F 		isb														
 1983 001c BFF34F8F 		dsb														
 1984              	
 1985              	@ 0 "" 2
 1986              		.thumb
 1987              		.syntax unified
 1988 0020 0293     		str	r3, [sp, #8]
 1989              	.L137:
 1990              	.LBE140:
 1991              	.LBE139:
 1992              		.loc 1 1820 0 discriminator 1
 1993 0022 FEE7     		b	.L137
 1994              	.L136:
1821:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1822:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The parameter cannot be NULL as it is impossible to resume the
1823:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		currently executing task. */
1824:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( ( pxTCB != pxCurrentTCB ) && ( pxTCB != NULL ) )
 1995              		.loc 1 1824 0
 1996 0024 204B     		ldr	r3, .L141
 1997 0026 1B68     		ldr	r3, [r3]
 1998 0028 039A     		ldr	r2, [sp, #12]
 1999 002a 9A42     		cmp	r2, r3
 2000 002c 37D0     		beq	.L140
 2001              		.loc 1 1824 0 is_stmt 0 discriminator 1
 2002 002e 039B     		ldr	r3, [sp, #12]
 2003 0030 002B     		cmp	r3, #0
 2004 0032 34D0     		beq	.L140
1825:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1826:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 2005              		.loc 1 1826 0 is_stmt 1
 2006 0034 FFF7FEFF 		bl	vPortEnterCritical
1827:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1828:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 2007              		.loc 1 1828 0
 2008 0038 0398     		ldr	r0, [sp, #12]
 2009 003a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2010 003e 0346     		mov	r3, r0
 2011 0040 002B     		cmp	r3, #0
 2012 0042 2AD0     		beq	.L139
1829:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1830:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					traceTASK_RESUME( pxTCB );
1831:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1832:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The ready list can be accessed even if the scheduler is
1833:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					suspended because this is inside a critical section. */
1834:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove(  &( pxTCB->xStateListItem ) );
 2013              		.loc 1 1834 0
 2014 0044 039B     		ldr	r3, [sp, #12]
 2015 0046 0433     		adds	r3, r3, #4
 2016 0048 1846     		mov	r0, r3
 2017 004a FFF7FEFF 		bl	uxListRemove
1835:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2018              		.loc 1 1835 0
 2019 004e 039B     		ldr	r3, [sp, #12]
 2020 0050 DB6A     		ldr	r3, [r3, #44]
 2021 0052 0122     		movs	r2, #1
 2022 0054 9A40     		lsls	r2, r2, r3
 2023 0056 154B     		ldr	r3, .L141+4
 2024 0058 1B68     		ldr	r3, [r3]
 2025 005a 1343     		orrs	r3, r3, r2
 2026 005c 134A     		ldr	r2, .L141+4
 2027 005e 1360     		str	r3, [r2]
 2028 0060 039B     		ldr	r3, [sp, #12]
 2029 0062 DA6A     		ldr	r2, [r3, #44]
 2030 0064 1346     		mov	r3, r2
 2031 0066 9B00     		lsls	r3, r3, #2
 2032 0068 1344     		add	r3, r3, r2
 2033 006a 9B00     		lsls	r3, r3, #2
 2034 006c 104A     		ldr	r2, .L141+8
 2035 006e 1A44     		add	r2, r2, r3
 2036 0070 039B     		ldr	r3, [sp, #12]
 2037 0072 0433     		adds	r3, r3, #4
 2038 0074 1946     		mov	r1, r3
 2039 0076 1046     		mov	r0, r2
 2040 0078 FFF7FEFF 		bl	vListInsertEnd
1836:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1837:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* A higher priority task may have just been resumed. */
1838:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2041              		.loc 1 1838 0
 2042 007c 039B     		ldr	r3, [sp, #12]
 2043 007e DA6A     		ldr	r2, [r3, #44]
 2044 0080 094B     		ldr	r3, .L141
 2045 0082 1B68     		ldr	r3, [r3]
 2046 0084 DB6A     		ldr	r3, [r3, #44]
 2047 0086 9A42     		cmp	r2, r3
 2048 0088 07D3     		bcc	.L139
1839:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1840:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* This yield may not cause the task just resumed to run,
1841:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						but will leave the lists in the correct state for the
1842:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						next yield. */
1843:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						taskYIELD_IF_USING_PREEMPTION();
 2049              		.loc 1 1843 0
 2050 008a 0A4B     		ldr	r3, .L141+12
 2051 008c 4FF08052 		mov	r2, #268435456
 2052 0090 1A60     		str	r2, [r3]
 2053              		.syntax unified
 2054              	@ 1843 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 2055 0092 BFF34F8F 		dsb
 2056              	@ 0 "" 2
 2057              	@ 1843 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 2058 0096 BFF36F8F 		isb
 2059              	@ 0 "" 2
 2060              		.thumb
 2061              		.syntax unified
 2062              	.L139:
1844:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1845:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
1846:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1847:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1848:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1849:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1850:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1851:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1852:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
1853:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1854:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1855:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 2063              		.loc 1 1855 0
 2064 009a FFF7FEFF 		bl	vPortExitCritical
 2065              	.L140:
1856:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1857:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1858:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1859:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1860:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1861:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 2066              		.loc 1 1861 0
 2067 009e 00BF     		nop
 2068 00a0 05B0     		add	sp, sp, #20
 2069              	.LCFI37:
 2070              		.cfi_def_cfa_offset 4
 2071              		@ sp needed
 2072 00a2 5DF804FB 		ldr	pc, [sp], #4
 2073              	.L142:
 2074 00a6 00BF     		.align	2
 2075              	.L141:
 2076 00a8 00000000 		.word	pxCurrentTCB
 2077 00ac 00000000 		.word	uxTopReadyPriority
 2078 00b0 00000000 		.word	pxReadyTasksLists
 2079 00b4 04ED00E0 		.word	-536810236
 2080              		.cfi_endproc
 2081              	.LFE17:
 2083              		.section	.text.xTaskResumeFromISR,"ax",%progbits
 2084              		.align	1
 2085              		.global	xTaskResumeFromISR
 2086              		.syntax unified
 2087              		.thumb
 2088              		.thumb_func
 2089              		.fpu fpv4-sp-d16
 2091              	xTaskResumeFromISR:
 2092              	.LFB18:
1862:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1863:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskSuspend */
1864:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1865:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1866:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1867:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) )
1868:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1869:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskResumeFromISR( TaskHandle_t xTaskToResume )
1870:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 2093              		.loc 1 1870 0
 2094              		.cfi_startproc
 2095              		@ args = 0, pretend = 0, frame = 40
 2096              		@ frame_needed = 0, uses_anonymous_args = 0
 2097 0000 00B5     		push	{lr}
 2098              	.LCFI38:
 2099              		.cfi_def_cfa_offset 4
 2100              		.cfi_offset 14, -4
 2101 0002 8BB0     		sub	sp, sp, #44
 2102              	.LCFI39:
 2103              		.cfi_def_cfa_offset 48
 2104 0004 0190     		str	r0, [sp, #4]
1871:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xYieldRequired = pdFALSE;
 2105              		.loc 1 1871 0
 2106 0006 0023     		movs	r3, #0
 2107 0008 0993     		str	r3, [sp, #36]
1872:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = xTaskToResume;
 2108              		.loc 1 1872 0
 2109 000a 019B     		ldr	r3, [sp, #4]
 2110 000c 0893     		str	r3, [sp, #32]
1873:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
1874:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1875:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToResume );
 2111              		.loc 1 1875 0
 2112 000e 019B     		ldr	r3, [sp, #4]
 2113 0010 002B     		cmp	r3, #0
 2114 0012 09D1     		bne	.L144
 2115              	.LBB141:
 2116              	.LBB142:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2117              		.loc 2 195 0 discriminator 1
 2118              		.syntax unified
 2119              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 2120 0014 4FF05003 			mov r3, #80												
 2121 0018 83F31188 		msr basepri, r3											
 2122 001c BFF36F8F 		isb														
 2123 0020 BFF34F8F 		dsb														
 2124              	
 2125              	@ 0 "" 2
 2126              		.thumb
 2127              		.syntax unified
 2128 0024 0693     		str	r3, [sp, #24]
 2129              	.L145:
 2130              	.LBE142:
 2131              	.LBE141:
 2132              		.loc 1 1875 0 discriminator 1
 2133 0026 FEE7     		b	.L145
 2134              	.L144:
1876:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1877:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
1878:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
1879:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
1880:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
1881:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
1882:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
1883:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
1884:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
1885:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
1886:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
1887:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
1888:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
1889:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
1890:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
1891:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		provided on the following link:
1892:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		https://www.freertos.org/RTOS-Cortex-M3-M4.html */
1893:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2135              		.loc 1 1893 0
 2136 0028 FFF7FEFF 		bl	vPortValidateInterruptPriority
 2137              	.LBB143:
 2138              	.LBB144:
 211:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2139              		.loc 2 211 0
 2140              		.syntax unified
 2141              	@ 211 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 2142 002c EFF31182 			mrs r2, basepri											
 2143 0030 4FF05003 		mov r3, #80												
 2144 0034 83F31188 		msr basepri, r3											
 2145 0038 BFF36F8F 		isb														
 2146 003c BFF34F8F 		dsb														
 2147              	
 2148              	@ 0 "" 2
 2149              		.thumb
 2150              		.syntax unified
 2151 0040 0592     		str	r2, [sp, #20]
 2152 0042 0493     		str	r3, [sp, #16]
 223:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 2153              		.loc 2 223 0
 2154 0044 059B     		ldr	r3, [sp, #20]
 2155              	.LBE144:
 2156              	.LBE143:
1894:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1895:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 2157              		.loc 1 1895 0
 2158 0046 0793     		str	r3, [sp, #28]
1896:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1897:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( prvTaskIsTaskSuspended( pxTCB ) != pdFALSE )
 2159              		.loc 1 1897 0
 2160 0048 0898     		ldr	r0, [sp, #32]
 2161 004a FFF7FEFF 		bl	prvTaskIsTaskSuspended
 2162 004e 0346     		mov	r3, r0
 2163 0050 002B     		cmp	r3, #0
 2164 0052 2FD0     		beq	.L147
1898:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1899:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				traceTASK_RESUME_FROM_ISR( pxTCB );
1900:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1901:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Check the ready lists can be accessed. */
1902:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2165              		.loc 1 1902 0
 2166 0054 1C4B     		ldr	r3, .L152
 2167 0056 1B68     		ldr	r3, [r3]
 2168 0058 002B     		cmp	r3, #0
 2169 005a 25D1     		bne	.L148
1903:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1904:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Ready lists can be accessed so move the task from the
1905:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					suspended list to the ready list directly. */
1906:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2170              		.loc 1 1906 0
 2171 005c 089B     		ldr	r3, [sp, #32]
 2172 005e DA6A     		ldr	r2, [r3, #44]
 2173 0060 1A4B     		ldr	r3, .L152+4
 2174 0062 1B68     		ldr	r3, [r3]
 2175 0064 DB6A     		ldr	r3, [r3, #44]
 2176 0066 9A42     		cmp	r2, r3
 2177 0068 01D3     		bcc	.L149
1907:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1908:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xYieldRequired = pdTRUE;
 2178              		.loc 1 1908 0
 2179 006a 0123     		movs	r3, #1
 2180 006c 0993     		str	r3, [sp, #36]
 2181              	.L149:
1909:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1910:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
1911:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
1912:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
1913:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
1914:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1915:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2182              		.loc 1 1915 0
 2183 006e 089B     		ldr	r3, [sp, #32]
 2184 0070 0433     		adds	r3, r3, #4
 2185 0072 1846     		mov	r0, r3
 2186 0074 FFF7FEFF 		bl	uxListRemove
1916:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2187              		.loc 1 1916 0
 2188 0078 089B     		ldr	r3, [sp, #32]
 2189 007a DB6A     		ldr	r3, [r3, #44]
 2190 007c 0122     		movs	r2, #1
 2191 007e 9A40     		lsls	r2, r2, r3
 2192 0080 134B     		ldr	r3, .L152+8
 2193 0082 1B68     		ldr	r3, [r3]
 2194 0084 1343     		orrs	r3, r3, r2
 2195 0086 124A     		ldr	r2, .L152+8
 2196 0088 1360     		str	r3, [r2]
 2197 008a 089B     		ldr	r3, [sp, #32]
 2198 008c DA6A     		ldr	r2, [r3, #44]
 2199 008e 1346     		mov	r3, r2
 2200 0090 9B00     		lsls	r3, r3, #2
 2201 0092 1344     		add	r3, r3, r2
 2202 0094 9B00     		lsls	r3, r3, #2
 2203 0096 0F4A     		ldr	r2, .L152+12
 2204 0098 1A44     		add	r2, r2, r3
 2205 009a 089B     		ldr	r3, [sp, #32]
 2206 009c 0433     		adds	r3, r3, #4
 2207 009e 1946     		mov	r1, r3
 2208 00a0 1046     		mov	r0, r2
 2209 00a2 FFF7FEFF 		bl	vListInsertEnd
 2210 00a6 05E0     		b	.L147
 2211              	.L148:
1917:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1918:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
1919:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
1920:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The delayed or ready lists cannot be accessed so the task
1921:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					is held in the pending ready list until the scheduler is
1922:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					unsuspended. */
1923:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 2212              		.loc 1 1923 0
 2213 00a8 089B     		ldr	r3, [sp, #32]
 2214 00aa 1833     		adds	r3, r3, #24
 2215 00ac 1946     		mov	r1, r3
 2216 00ae 0A48     		ldr	r0, .L152+16
 2217 00b0 FFF7FEFF 		bl	vListInsertEnd
 2218              	.L147:
 2219 00b4 079B     		ldr	r3, [sp, #28]
 2220 00b6 0393     		str	r3, [sp, #12]
 2221              	.LBB145:
 2222              	.LBB146:
 2223              		.loc 2 229 0
 2224 00b8 039B     		ldr	r3, [sp, #12]
 2225              		.syntax unified
 2226              	@ 229 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 2227 00ba 83F31188 			msr basepri, r3	
 2228              	@ 0 "" 2
 2229              		.thumb
 2230              		.syntax unified
 2231              	.LBE146:
 2232              	.LBE145:
1924:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
1925:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1926:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
1927:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
1928:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
1929:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
1930:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1931:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
1932:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1933:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xYieldRequired;
 2233              		.loc 1 1933 0
 2234 00be 099B     		ldr	r3, [sp, #36]
1934:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 2235              		.loc 1 1934 0
 2236 00c0 1846     		mov	r0, r3
 2237 00c2 0BB0     		add	sp, sp, #44
 2238              	.LCFI40:
 2239              		.cfi_def_cfa_offset 4
 2240              		@ sp needed
 2241 00c4 5DF804FB 		ldr	pc, [sp], #4
 2242              	.L153:
 2243              		.align	2
 2244              	.L152:
 2245 00c8 00000000 		.word	uxSchedulerSuspended
 2246 00cc 00000000 		.word	pxCurrentTCB
 2247 00d0 00000000 		.word	uxTopReadyPriority
 2248 00d4 00000000 		.word	pxReadyTasksLists
 2249 00d8 00000000 		.word	xPendingReadyList
 2250              		.cfi_endproc
 2251              	.LFE18:
 2253              		.section	.rodata
 2254              		.align	2
 2255              	.LC0:
 2256 0000 49444C45 		.ascii	"IDLE\000"
 2256      00
 2257              		.section	.text.vTaskStartScheduler,"ax",%progbits
 2258              		.align	1
 2259              		.global	vTaskStartScheduler
 2260              		.syntax unified
 2261              		.thumb
 2262              		.thumb_func
 2263              		.fpu fpv4-sp-d16
 2265              	vTaskStartScheduler:
 2266              	.LFB19:
1935:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1936:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskResumeFromISR == 1 ) && ( INCLUDE_vTaskSuspend == 1 ) ) */
1937:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
1938:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1939:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskStartScheduler( void )
1940:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 2267              		.loc 1 1940 0
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 16
 2270              		@ frame_needed = 0, uses_anonymous_args = 0
 2271 0000 00B5     		push	{lr}
 2272              	.LCFI41:
 2273              		.cfi_def_cfa_offset 4
 2274              		.cfi_offset 14, -4
 2275 0002 87B0     		sub	sp, sp, #28
 2276              	.LCFI42:
 2277              		.cfi_def_cfa_offset 32
1941:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
1942:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1943:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Add the idle task at the lowest priority. */
1944:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( configSUPPORT_STATIC_ALLOCATION == 1 )
1945:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1946:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		StaticTask_t *pxIdleTaskTCBBuffer = NULL;
1947:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		StackType_t *pxIdleTaskStackBuffer = NULL;
1948:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uint32_t ulIdleTaskStackSize;
1949:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1950:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The Idle task is created using user provided RAM - obtain the
1951:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		address of the RAM then create the idle task. */
1952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vApplicationGetIdleTaskMemory( &pxIdleTaskTCBBuffer, &pxIdleTaskStackBuffer, &ulIdleTaskStackSize
1953:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xIdleTaskHandle = xTaskCreateStatic(	prvIdleTask,
1954:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 												configIDLE_TASK_NAME,
1955:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 												ulIdleTaskStackSize,
1956:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 												( void * ) NULL, /*lint !e961.  The cast is not redundant for all compilers. */
1957:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 												portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_P
1958:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 												pxIdleTaskStackBuffer,
1959:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 												pxIdleTaskTCBBuffer ); /*lint !e961 MISRA exception, justified as it is not a redundant
1960:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1961:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xIdleTaskHandle != NULL )
1962:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1963:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = pdPASS;
1964:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1965:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1966:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1967:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
1968:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1969:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1970:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#else
1971:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1972:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The Idle task is being created using dynamically allocated RAM. */
1973:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xReturn = xTaskCreate(	prvIdleTask,
 2278              		.loc 1 1973 0
 2279 0004 1D4B     		ldr	r3, .L160
 2280 0006 0193     		str	r3, [sp, #4]
 2281 0008 0023     		movs	r3, #0
 2282 000a 0093     		str	r3, [sp]
 2283 000c 0023     		movs	r3, #0
 2284 000e 8222     		movs	r2, #130
 2285 0010 1B49     		ldr	r1, .L160+4
 2286 0012 1C48     		ldr	r0, .L160+8
 2287 0014 FFF7FEFF 		bl	xTaskCreate
 2288 0018 0590     		str	r0, [sp, #20]
1974:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								configIDLE_TASK_NAME,
1975:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								configMINIMAL_STACK_SIZE,
1976:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								( void * ) NULL,
1977:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								portPRIVILEGE_BIT, /* In effect ( tskIDLE_PRIORITY | portPRIVILEGE_BIT ), but tskIDLE_PRIOR
1978:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								&xIdleTaskHandle ); /*lint !e961 MISRA exception, justified as it is not a redundant explic
1979:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1980:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* configSUPPORT_STATIC_ALLOCATION */
1981:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1982:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_TIMERS == 1 )
1983:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1984:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xReturn == pdPASS )
 2289              		.loc 1 1984 0
 2290 001a 059B     		ldr	r3, [sp, #20]
 2291 001c 012B     		cmp	r3, #1
 2292 001e 02D1     		bne	.L155
1985:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1986:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = xTimerCreateTimerTask();
 2293              		.loc 1 1986 0
 2294 0020 FFF7FEFF 		bl	xTimerCreateTimerTask
 2295 0024 0590     		str	r0, [sp, #20]
 2296              	.L155:
1987:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1988:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
1989:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
1990:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
1991:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
1992:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
1993:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_TIMERS */
1994:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
1995:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( xReturn == pdPASS )
 2297              		.loc 1 1995 0
 2298 0026 059B     		ldr	r3, [sp, #20]
 2299 0028 012B     		cmp	r3, #1
 2300 002a 15D1     		bne	.L156
 2301              	.LBB147:
 2302              	.LBB148:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2303              		.loc 2 195 0
 2304              		.syntax unified
 2305              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 2306 002c 4FF05003 			mov r3, #80												
 2307 0030 83F31188 		msr basepri, r3											
 2308 0034 BFF36F8F 		isb														
 2309 0038 BFF34F8F 		dsb														
 2310              	
 2311              	@ 0 "" 2
 2312              		.thumb
 2313              		.syntax unified
 2314 003c 0493     		str	r3, [sp, #16]
 2315              	.LBE148:
 2316              	.LBE147:
1996:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
1997:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* freertos_tasks_c_additions_init() should only be called if the user
1998:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		definable macro FREERTOS_TASKS_C_ADDITIONS_INIT() is defined, as that is
1999:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the only macro called by the function. */
2000:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#ifdef FREERTOS_TASKS_C_ADDITIONS_INIT
2001:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2002:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			freertos_tasks_c_additions_init();
2003:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2004:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
2005:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2006:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Interrupts are turned off here, to ensure a tick does not occur
2007:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		before or during the call to xPortStartScheduler().  The stacks of
2008:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the created tasks contain a status word with interrupts switched on
2009:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		so interrupts will automatically get re-enabled when the first task
2010:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		starts to run. */
2011:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
2012:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2013:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2014:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2015:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2016:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			structure specific to the task that will run first. */
2017:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2018:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2019:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2020:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2021:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 2317              		.loc 1 2021 0
 2318 003e 124B     		ldr	r3, .L160+12
 2319 0040 4FF0FF32 		mov	r2, #-1
 2320 0044 1A60     		str	r2, [r3]
2022:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xSchedulerRunning = pdTRUE;
 2321              		.loc 1 2022 0
 2322 0046 114B     		ldr	r3, .L160+16
 2323 0048 0122     		movs	r2, #1
 2324 004a 1A60     		str	r2, [r3]
2023:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xTickCount = ( TickType_t ) configINITIAL_TICK_COUNT;
 2325              		.loc 1 2023 0
 2326 004c 104B     		ldr	r3, .L160+20
 2327 004e 0022     		movs	r2, #0
 2328 0050 1A60     		str	r2, [r3]
2024:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2025:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If configGENERATE_RUN_TIME_STATS is defined then the following
2026:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		macro must be defined to configure the timer/counter used to generate
2027:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the run time counter time base.   NOTE:  If configGENERATE_RUN_TIME_STATS
2028:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		is set to 0 and the following line fails to build then ensure you do not
2029:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		have portCONFIGURE_TIMER_FOR_RUN_TIME_STATS() defined in your
2030:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		FreeRTOSConfig.h file. */
2031:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portCONFIGURE_TIMER_FOR_RUN_TIME_STATS();
2032:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2033:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2034:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2035:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Setting up the timer tick is hardware specific and thus in the
2036:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portable interface. */
2037:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xPortStartScheduler() != pdFALSE )
 2329              		.loc 1 2037 0
 2330 0052 FFF7FEFF 		bl	xPortStartScheduler
2038:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2039:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Should not reach here as if the scheduler is running the
2040:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			function will not return. */
2041:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2042:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2043:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2044:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Should only reach here if a task calls xTaskEndScheduler(). */
2045:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2046:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2047:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
2048:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2049:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* This line will only be reached if the kernel could not be started,
2050:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		because there was not enough FreeRTOS heap to create the idle task
2051:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		or the timer task. */
2052:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( xReturn != errCOULD_NOT_ALLOCATE_REQUIRED_MEMORY );
2053:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2054:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2055:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Prevent compiler warnings if INCLUDE_xTaskGetIdleTaskHandle is set to 0,
2056:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	meaning xIdleTaskHandle is not used anywhere else. */
2057:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	( void ) xIdleTaskHandle;
2058:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 2331              		.loc 1 2058 0
 2332 0056 0DE0     		b	.L159
 2333              	.L156:
2052:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 2334              		.loc 1 2052 0
 2335 0058 059B     		ldr	r3, [sp, #20]
 2336 005a B3F1FF3F 		cmp	r3, #-1
 2337 005e 09D1     		bne	.L159
 2338              	.LBB149:
 2339              	.LBB150:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2340              		.loc 2 195 0 discriminator 1
 2341              		.syntax unified
 2342              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 2343 0060 4FF05003 			mov r3, #80												
 2344 0064 83F31188 		msr basepri, r3											
 2345 0068 BFF36F8F 		isb														
 2346 006c BFF34F8F 		dsb														
 2347              	
 2348              	@ 0 "" 2
 2349              		.thumb
 2350              		.syntax unified
 2351 0070 0393     		str	r3, [sp, #12]
 2352              	.L158:
 2353              	.LBE150:
 2354              	.LBE149:
2052:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 2355              		.loc 1 2052 0 discriminator 2
 2356 0072 FEE7     		b	.L158
 2357              	.L159:
 2358              		.loc 1 2058 0
 2359 0074 00BF     		nop
 2360 0076 07B0     		add	sp, sp, #28
 2361              	.LCFI43:
 2362              		.cfi_def_cfa_offset 4
 2363              		@ sp needed
 2364 0078 5DF804FB 		ldr	pc, [sp], #4
 2365              	.L161:
 2366              		.align	2
 2367              	.L160:
 2368 007c 00000000 		.word	xIdleTaskHandle
 2369 0080 00000000 		.word	.LC0
 2370 0084 00000000 		.word	prvIdleTask
 2371 0088 00000000 		.word	xNextTaskUnblockTime
 2372 008c 00000000 		.word	xSchedulerRunning
 2373 0090 00000000 		.word	xTickCount
 2374              		.cfi_endproc
 2375              	.LFE19:
 2377              		.section	.text.vTaskEndScheduler,"ax",%progbits
 2378              		.align	1
 2379              		.global	vTaskEndScheduler
 2380              		.syntax unified
 2381              		.thumb
 2382              		.thumb_func
 2383              		.fpu fpv4-sp-d16
 2385              	vTaskEndScheduler:
 2386              	.LFB20:
2059:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2060:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2061:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskEndScheduler( void )
2062:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 2387              		.loc 1 2062 0
 2388              		.cfi_startproc
 2389              		@ args = 0, pretend = 0, frame = 8
 2390              		@ frame_needed = 0, uses_anonymous_args = 0
 2391 0000 00B5     		push	{lr}
 2392              	.LCFI44:
 2393              		.cfi_def_cfa_offset 4
 2394              		.cfi_offset 14, -4
 2395 0002 83B0     		sub	sp, sp, #12
 2396              	.LCFI45:
 2397              		.cfi_def_cfa_offset 16
 2398              	.LBB151:
 2399              	.LBB152:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2400              		.loc 2 195 0
 2401              		.syntax unified
 2402              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 2403 0004 4FF05003 			mov r3, #80												
 2404 0008 83F31188 		msr basepri, r3											
 2405 000c BFF36F8F 		isb														
 2406 0010 BFF34F8F 		dsb														
 2407              	
 2408              	@ 0 "" 2
 2409              		.thumb
 2410              		.syntax unified
 2411 0014 0193     		str	r3, [sp, #4]
 2412              	.LBE152:
 2413              	.LBE151:
2063:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Stop the scheduler interrupts and call the portable scheduler end
2064:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	routine so the original ISRs can be restored if necessary.  The port
2065:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	layer must ensure interrupts enable	bit is left in the correct state. */
2066:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	portDISABLE_INTERRUPTS();
2067:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	xSchedulerRunning = pdFALSE;
 2414              		.loc 1 2067 0
 2415 0016 044B     		ldr	r3, .L163
 2416 0018 0022     		movs	r2, #0
 2417 001a 1A60     		str	r2, [r3]
2068:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	vPortEndScheduler();
 2418              		.loc 1 2068 0
 2419 001c FFF7FEFF 		bl	vPortEndScheduler
2069:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 2420              		.loc 1 2069 0
 2421 0020 00BF     		nop
 2422 0022 03B0     		add	sp, sp, #12
 2423              	.LCFI46:
 2424              		.cfi_def_cfa_offset 4
 2425              		@ sp needed
 2426 0024 5DF804FB 		ldr	pc, [sp], #4
 2427              	.L164:
 2428              		.align	2
 2429              	.L163:
 2430 0028 00000000 		.word	xSchedulerRunning
 2431              		.cfi_endproc
 2432              	.LFE20:
 2434              		.section	.text.vTaskSuspendAll,"ax",%progbits
 2435              		.align	1
 2436              		.global	vTaskSuspendAll
 2437              		.syntax unified
 2438              		.thumb
 2439              		.thumb_func
 2440              		.fpu fpv4-sp-d16
 2442              	vTaskSuspendAll:
 2443              	.LFB21:
2070:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2071:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2072:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskSuspendAll( void )
2073:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 2444              		.loc 1 2073 0
 2445              		.cfi_startproc
 2446              		@ args = 0, pretend = 0, frame = 0
 2447              		@ frame_needed = 0, uses_anonymous_args = 0
 2448              		@ link register save eliminated.
2074:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required as the variable is of type
2075:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t.  Please read Richard Barry's reply in the following link to a
2076:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	post in the FreeRTOS support forum before reporting this as a bug! -
2077:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	http://goo.gl/wu4acr */
2078:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	++uxSchedulerSuspended;
 2449              		.loc 1 2078 0
 2450 0000 034B     		ldr	r3, .L166
 2451 0002 1B68     		ldr	r3, [r3]
 2452 0004 0133     		adds	r3, r3, #1
 2453 0006 024A     		ldr	r2, .L166
 2454 0008 1360     		str	r3, [r2]
2079:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 2455              		.loc 1 2079 0
 2456 000a 00BF     		nop
 2457 000c 7047     		bx	lr
 2458              	.L167:
 2459 000e 00BF     		.align	2
 2460              	.L166:
 2461 0010 00000000 		.word	uxSchedulerSuspended
 2462              		.cfi_endproc
 2463              	.LFE21:
 2465              		.section	.text.xTaskResumeAll,"ax",%progbits
 2466              		.align	1
 2467              		.global	xTaskResumeAll
 2468              		.syntax unified
 2469              		.thumb
 2470              		.thumb_func
 2471              		.fpu fpv4-sp-d16
 2473              	xTaskResumeAll:
 2474              	.LFB22:
2080:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2081:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2082:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2083:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2084:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static TickType_t prvGetExpectedIdleTime( void )
2085:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2086:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TickType_t xReturn;
2087:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxHigherPriorityReadyTasks = pdFALSE;
2088:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2089:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* uxHigherPriorityReadyTasks takes care of the case where
2090:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configUSE_PREEMPTION is 0, so there may be tasks above the idle priority
2091:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		task that are in the Ready state, even though the idle task is
2092:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		running. */
2093:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if( configUSE_PORT_OPTIMISED_TASK_SELECTION == 0 )
2094:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2095:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > tskIDLE_PRIORITY )
2096:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2097:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2098:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2099:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2100:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#else
2101:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2102:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			const UBaseType_t uxLeastSignificantBit = ( UBaseType_t ) 0x01;
2103:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2104:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* When port optimised task selection is used the uxTopReadyPriority
2105:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			variable is used as a bit map.  If bits other than the least
2106:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			significant bit are set then there are tasks that have a priority
2107:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			above the idle priority that are in the Ready state.  This takes
2108:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			care of the case where the co-operative scheduler is in use. */
2109:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxTopReadyPriority > uxLeastSignificantBit )
2110:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2111:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxHigherPriorityReadyTasks = pdTRUE;
2112:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2113:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2114:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
2115:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2116:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB->uxPriority > tskIDLE_PRIORITY )
2117:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2118:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2119:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2120:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > 1 )
2121:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2122:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* There are other idle priority tasks in the ready state.  If
2123:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			time slicing is used then the very next tick interrupt must be
2124:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			processed. */
2125:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2126:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2127:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else if( uxHigherPriorityReadyTasks != pdFALSE )
2128:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2129:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* There are tasks in the Ready state that have a priority above the
2130:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			idle priority.  This path can only be reached if
2131:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			configUSE_PREEMPTION is 0. */
2132:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = 0;
2133:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2134:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2135:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2136:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = xNextTaskUnblockTime - xTickCount;
2137:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2138:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2139:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
2140:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2141:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2142:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2143:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2144:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2145:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** BaseType_t xTaskResumeAll( void )
2146:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 2475              		.loc 1 2146 0
 2476              		.cfi_startproc
 2477              		@ args = 0, pretend = 0, frame = 16
 2478              		@ frame_needed = 0, uses_anonymous_args = 0
 2479 0000 00B5     		push	{lr}
 2480              	.LCFI47:
 2481              		.cfi_def_cfa_offset 4
 2482              		.cfi_offset 14, -4
 2483 0002 85B0     		sub	sp, sp, #20
 2484              	.LCFI48:
 2485              		.cfi_def_cfa_offset 24
2147:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB = NULL;
 2486              		.loc 1 2147 0
 2487 0004 0023     		movs	r3, #0
 2488 0006 0393     		str	r3, [sp, #12]
2148:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** BaseType_t xAlreadyYielded = pdFALSE;
 2489              		.loc 1 2148 0
 2490 0008 0023     		movs	r3, #0
 2491 000a 0293     		str	r3, [sp, #8]
2149:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2150:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* If uxSchedulerSuspended is zero then this function does not match a
2151:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	previous call to vTaskSuspendAll(). */
2152:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended );
 2492              		.loc 1 2152 0
 2493 000c 404B     		ldr	r3, .L179
 2494 000e 1B68     		ldr	r3, [r3]
 2495 0010 002B     		cmp	r3, #0
 2496 0012 09D1     		bne	.L169
 2497              	.LBB153:
 2498              	.LBB154:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2499              		.loc 2 195 0 discriminator 1
 2500              		.syntax unified
 2501              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 2502 0014 4FF05003 			mov r3, #80												
 2503 0018 83F31188 		msr basepri, r3											
 2504 001c BFF36F8F 		isb														
 2505 0020 BFF34F8F 		dsb														
 2506              	
 2507              	@ 0 "" 2
 2508              		.thumb
 2509              		.syntax unified
 2510 0024 0093     		str	r3, [sp]
 2511              	.L170:
 2512              	.LBE154:
 2513              	.LBE153:
 2514              		.loc 1 2152 0 discriminator 1
 2515 0026 FEE7     		b	.L170
 2516              	.L169:
2153:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2154:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* It is possible that an ISR caused a task to be removed from an event
2155:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	list while the scheduler was suspended.  If this was the case then the
2156:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	removed task will have been added to the xPendingReadyList.  Once the
2157:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	scheduler has been resumed it is safe to move all the pending ready
2158:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	tasks from this list into their appropriate ready list. */
2159:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 2517              		.loc 1 2159 0
 2518 0028 FFF7FEFF 		bl	vPortEnterCritical
2160:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2161:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		--uxSchedulerSuspended;
 2519              		.loc 1 2161 0
 2520 002c 384B     		ldr	r3, .L179
 2521 002e 1B68     		ldr	r3, [r3]
 2522 0030 013B     		subs	r3, r3, #1
 2523 0032 374A     		ldr	r2, .L179
 2524 0034 1360     		str	r3, [r2]
2162:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2163:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 2525              		.loc 1 2163 0
 2526 0036 364B     		ldr	r3, .L179
 2527 0038 1B68     		ldr	r3, [r3]
 2528 003a 002B     		cmp	r3, #0
 2529 003c 61D1     		bne	.L171
2164:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2165:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxCurrentNumberOfTasks > ( UBaseType_t ) 0U )
 2530              		.loc 1 2165 0
 2531 003e 354B     		ldr	r3, .L179+4
 2532 0040 1B68     		ldr	r3, [r3]
 2533 0042 002B     		cmp	r3, #0
 2534 0044 5DD0     		beq	.L171
2166:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2167:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Move any readied tasks from the pending list into the
2168:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				appropriate ready list. */
2169:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				while( listLIST_IS_EMPTY( &xPendingReadyList ) == pdFALSE )
 2535              		.loc 1 2169 0
 2536 0046 2EE0     		b	.L172
 2537              	.L173:
2170:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2171:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xPendingReadyList ) ); /*lint !e9079 void * is used as
 2538              		.loc 1 2171 0
 2539 0048 334B     		ldr	r3, .L179+8
 2540 004a DB68     		ldr	r3, [r3, #12]
 2541 004c DB68     		ldr	r3, [r3, #12]
 2542 004e 0393     		str	r3, [sp, #12]
2172:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 2543              		.loc 1 2172 0
 2544 0050 039B     		ldr	r3, [sp, #12]
 2545 0052 1833     		adds	r3, r3, #24
 2546 0054 1846     		mov	r0, r3
 2547 0056 FFF7FEFF 		bl	uxListRemove
2173:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 2548              		.loc 1 2173 0
 2549 005a 039B     		ldr	r3, [sp, #12]
 2550 005c 0433     		adds	r3, r3, #4
 2551 005e 1846     		mov	r0, r3
 2552 0060 FFF7FEFF 		bl	uxListRemove
2174:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 2553              		.loc 1 2174 0
 2554 0064 039B     		ldr	r3, [sp, #12]
 2555 0066 DB6A     		ldr	r3, [r3, #44]
 2556 0068 0122     		movs	r2, #1
 2557 006a 9A40     		lsls	r2, r2, r3
 2558 006c 2B4B     		ldr	r3, .L179+12
 2559 006e 1B68     		ldr	r3, [r3]
 2560 0070 1343     		orrs	r3, r3, r2
 2561 0072 2A4A     		ldr	r2, .L179+12
 2562 0074 1360     		str	r3, [r2]
 2563 0076 039B     		ldr	r3, [sp, #12]
 2564 0078 DA6A     		ldr	r2, [r3, #44]
 2565 007a 1346     		mov	r3, r2
 2566 007c 9B00     		lsls	r3, r3, #2
 2567 007e 1344     		add	r3, r3, r2
 2568 0080 9B00     		lsls	r3, r3, #2
 2569 0082 274A     		ldr	r2, .L179+16
 2570 0084 1A44     		add	r2, r2, r3
 2571 0086 039B     		ldr	r3, [sp, #12]
 2572 0088 0433     		adds	r3, r3, #4
 2573 008a 1946     		mov	r1, r3
 2574 008c 1046     		mov	r0, r2
 2575 008e FFF7FEFF 		bl	vListInsertEnd
2175:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2176:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* If the moved task has a priority higher than the current
2177:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					task then a yield must be performed. */
2178:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 2576              		.loc 1 2178 0
 2577 0092 039B     		ldr	r3, [sp, #12]
 2578 0094 DA6A     		ldr	r2, [r3, #44]
 2579 0096 234B     		ldr	r3, .L179+20
 2580 0098 1B68     		ldr	r3, [r3]
 2581 009a DB6A     		ldr	r3, [r3, #44]
 2582 009c 9A42     		cmp	r2, r3
 2583 009e 02D3     		bcc	.L172
2179:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2180:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
 2584              		.loc 1 2180 0
 2585 00a0 214B     		ldr	r3, .L179+24
 2586 00a2 0122     		movs	r2, #1
 2587 00a4 1A60     		str	r2, [r3]
 2588              	.L172:
2169:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
 2589              		.loc 1 2169 0
 2590 00a6 1C4B     		ldr	r3, .L179+8
 2591 00a8 1B68     		ldr	r3, [r3]
 2592 00aa 002B     		cmp	r3, #0
 2593 00ac CCD1     		bne	.L173
2181:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2182:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
2183:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2184:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2185:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2186:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2187:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2188:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
 2594              		.loc 1 2188 0
 2595 00ae 039B     		ldr	r3, [sp, #12]
 2596 00b0 002B     		cmp	r3, #0
 2597 00b2 01D0     		beq	.L174
2189:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2190:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* A task was unblocked while the scheduler was suspended,
2191:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					which may have prevented the next unblock time from being
2192:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					re-calculated, in which case re-calculate it now.  Mainly
2193:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					important for low power tickless implementations, where
2194:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					this can prevent an unnecessary exit from low power
2195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					state. */
2196:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
 2598              		.loc 1 2196 0
 2599 00b4 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 2600              	.L174:
 2601              	.LBB155:
2197:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2198:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2199:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* If any ticks occurred while the scheduler was suspended then
2200:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				they should be processed now.  This ensures the tick count does
2201:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				not	slip, and that any delayed tasks are resumed at the correct
2202:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				time. */
2203:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2204:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					UBaseType_t uxPendedCounts = uxPendedTicks; /* Non-volatile copy. */
 2602              		.loc 1 2204 0
 2603 00b8 1C4B     		ldr	r3, .L179+28
 2604 00ba 1B68     		ldr	r3, [r3]
 2605 00bc 0193     		str	r3, [sp, #4]
2205:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2206:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( uxPendedCounts > ( UBaseType_t ) 0U )
 2606              		.loc 1 2206 0
 2607 00be 019B     		ldr	r3, [sp, #4]
 2608 00c0 002B     		cmp	r3, #0
 2609 00c2 10D0     		beq	.L175
 2610              	.L177:
2207:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2208:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						do
2209:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
2210:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							if( xTaskIncrementTick() != pdFALSE )
 2611              		.loc 1 2210 0
 2612 00c4 FFF7FEFF 		bl	xTaskIncrementTick
 2613 00c8 0346     		mov	r3, r0
 2614 00ca 002B     		cmp	r3, #0
 2615 00cc 02D0     		beq	.L176
2211:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							{
2212:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								xYieldPending = pdTRUE;
 2616              		.loc 1 2212 0
 2617 00ce 164B     		ldr	r3, .L179+24
 2618 00d0 0122     		movs	r2, #1
 2619 00d2 1A60     		str	r2, [r3]
 2620              	.L176:
2213:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							}
2214:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							else
2215:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							{
2216:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								mtCOVERAGE_TEST_MARKER();
2217:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							}
2218:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							--uxPendedCounts;
 2621              		.loc 1 2218 0
 2622 00d4 019B     		ldr	r3, [sp, #4]
 2623 00d6 013B     		subs	r3, r3, #1
 2624 00d8 0193     		str	r3, [sp, #4]
2219:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						} while( uxPendedCounts > ( UBaseType_t ) 0U );
 2625              		.loc 1 2219 0
 2626 00da 019B     		ldr	r3, [sp, #4]
 2627 00dc 002B     		cmp	r3, #0
 2628 00de F1D1     		bne	.L177
2220:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2221:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						uxPendedTicks = 0;
 2629              		.loc 1 2221 0
 2630 00e0 124B     		ldr	r3, .L179+28
 2631 00e2 0022     		movs	r2, #0
 2632 00e4 1A60     		str	r2, [r3]
 2633              	.L175:
 2634              	.LBE155:
2222:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2223:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
2224:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2225:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2226:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2227:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2228:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2229:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( xYieldPending != pdFALSE )
 2635              		.loc 1 2229 0
 2636 00e6 104B     		ldr	r3, .L179+24
 2637 00e8 1B68     		ldr	r3, [r3]
 2638 00ea 002B     		cmp	r3, #0
 2639 00ec 09D0     		beq	.L171
2230:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2231:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					#if( configUSE_PREEMPTION != 0 )
2232:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2233:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xAlreadyYielded = pdTRUE;
 2640              		.loc 1 2233 0
 2641 00ee 0123     		movs	r3, #1
 2642 00f0 0293     		str	r3, [sp, #8]
2234:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2235:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					#endif
2236:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 2643              		.loc 1 2236 0
 2644 00f2 0F4B     		ldr	r3, .L179+32
 2645 00f4 4FF08052 		mov	r2, #268435456
 2646 00f8 1A60     		str	r2, [r3]
 2647              		.syntax unified
 2648              	@ 2236 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 2649 00fa BFF34F8F 		dsb
 2650              	@ 0 "" 2
 2651              	@ 2236 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 2652 00fe BFF36F8F 		isb
 2653              	@ 0 "" 2
 2654              		.thumb
 2655              		.syntax unified
 2656              	.L171:
2237:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2238:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
2239:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2240:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2241:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2242:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2243:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2244:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2245:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2246:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2247:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2248:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2249:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 2657              		.loc 1 2249 0
 2658 0102 FFF7FEFF 		bl	vPortExitCritical
2250:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2251:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	return xAlreadyYielded;
 2659              		.loc 1 2251 0
 2660 0106 029B     		ldr	r3, [sp, #8]
2252:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 2661              		.loc 1 2252 0
 2662 0108 1846     		mov	r0, r3
 2663 010a 05B0     		add	sp, sp, #20
 2664              	.LCFI49:
 2665              		.cfi_def_cfa_offset 4
 2666              		@ sp needed
 2667 010c 5DF804FB 		ldr	pc, [sp], #4
 2668              	.L180:
 2669              		.align	2
 2670              	.L179:
 2671 0110 00000000 		.word	uxSchedulerSuspended
 2672 0114 00000000 		.word	uxCurrentNumberOfTasks
 2673 0118 00000000 		.word	xPendingReadyList
 2674 011c 00000000 		.word	uxTopReadyPriority
 2675 0120 00000000 		.word	pxReadyTasksLists
 2676 0124 00000000 		.word	pxCurrentTCB
 2677 0128 00000000 		.word	xYieldPending
 2678 012c 00000000 		.word	uxPendedTicks
 2679 0130 04ED00E0 		.word	-536810236
 2680              		.cfi_endproc
 2681              	.LFE22:
 2683              		.section	.text.xTaskGetTickCount,"ax",%progbits
 2684              		.align	1
 2685              		.global	xTaskGetTickCount
 2686              		.syntax unified
 2687              		.thumb
 2688              		.thumb_func
 2689              		.fpu fpv4-sp-d16
 2691              	xTaskGetTickCount:
 2692              	.LFB23:
2253:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2254:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2255:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCount( void )
2256:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 2693              		.loc 1 2256 0
 2694              		.cfi_startproc
 2695              		@ args = 0, pretend = 0, frame = 8
 2696              		@ frame_needed = 0, uses_anonymous_args = 0
 2697              		@ link register save eliminated.
 2698 0000 82B0     		sub	sp, sp, #8
 2699              	.LCFI50:
 2700              		.cfi_def_cfa_offset 8
2257:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TickType_t xTicks;
2258:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2259:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Critical section required if running on a 16 bit processor. */
2260:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_ENTER_CRITICAL();
2261:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2262:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xTicks = xTickCount;
 2701              		.loc 1 2262 0
 2702 0002 034B     		ldr	r3, .L183
 2703 0004 1B68     		ldr	r3, [r3]
 2704 0006 0193     		str	r3, [sp, #4]
2263:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2264:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_EXIT_CRITICAL();
2265:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2266:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	return xTicks;
 2705              		.loc 1 2266 0
 2706 0008 019B     		ldr	r3, [sp, #4]
2267:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 2707              		.loc 1 2267 0
 2708 000a 1846     		mov	r0, r3
 2709 000c 02B0     		add	sp, sp, #8
 2710              	.LCFI51:
 2711              		.cfi_def_cfa_offset 0
 2712              		@ sp needed
 2713 000e 7047     		bx	lr
 2714              	.L184:
 2715              		.align	2
 2716              	.L183:
 2717 0010 00000000 		.word	xTickCount
 2718              		.cfi_endproc
 2719              	.LFE23:
 2721              		.section	.text.xTaskGetTickCountFromISR,"ax",%progbits
 2722              		.align	1
 2723              		.global	xTaskGetTickCountFromISR
 2724              		.syntax unified
 2725              		.thumb
 2726              		.thumb_func
 2727              		.fpu fpv4-sp-d16
 2729              	xTaskGetTickCountFromISR:
 2730              	.LFB24:
2268:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2269:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2270:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TickType_t xTaskGetTickCountFromISR( void )
2271:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 2731              		.loc 1 2271 0
 2732              		.cfi_startproc
 2733              		@ args = 0, pretend = 0, frame = 8
 2734              		@ frame_needed = 0, uses_anonymous_args = 0
 2735 0000 00B5     		push	{lr}
 2736              	.LCFI52:
 2737              		.cfi_def_cfa_offset 4
 2738              		.cfi_offset 14, -4
 2739 0002 83B0     		sub	sp, sp, #12
 2740              	.LCFI53:
 2741              		.cfi_def_cfa_offset 16
2272:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TickType_t xReturn;
2273:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** UBaseType_t uxSavedInterruptStatus;
2274:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2275:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* RTOS ports that support interrupt nesting have the concept of a maximum
2276:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	system call (or maximum API call) interrupt priority.  Interrupts that are
2277:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	above the maximum system call priority are kept permanently enabled, even
2278:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	when the RTOS kernel is in a critical section, but cannot make any calls to
2279:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	FreeRTOS API functions.  If configASSERT() is defined in FreeRTOSConfig.h
2280:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	then portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
2281:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	failure if a FreeRTOS API function is called from an interrupt that has been
2282:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	assigned a priority above the configured maximum system call priority.
2283:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	Only FreeRTOS functions that end in FromISR can be called from interrupts
2284:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	that have been assigned a priority at or (logically) below the maximum
2285:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	system call	interrupt priority.  FreeRTOS maintains a separate interrupt
2286:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	safe API to ensure interrupt entry is as fast and as simple as possible.
2287:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	More information (albeit Cortex-M specific) is provided on the following
2288:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	link: https://www.freertos.org/RTOS-Cortex-M3-M4.html */
2289:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 2742              		.loc 1 2289 0
 2743 0004 FFF7FEFF 		bl	vPortValidateInterruptPriority
2290:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2291:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uxSavedInterruptStatus = portTICK_TYPE_SET_INTERRUPT_MASK_FROM_ISR();
 2744              		.loc 1 2291 0
 2745 0008 0023     		movs	r3, #0
 2746 000a 0193     		str	r3, [sp, #4]
2292:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2293:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xReturn = xTickCount;
 2747              		.loc 1 2293 0
 2748 000c 034B     		ldr	r3, .L187
 2749 000e 1B68     		ldr	r3, [r3]
 2750 0010 0093     		str	r3, [sp]
2294:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2295:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	portTICK_TYPE_CLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
2296:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2297:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	return xReturn;
 2751              		.loc 1 2297 0
 2752 0012 009B     		ldr	r3, [sp]
2298:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 2753              		.loc 1 2298 0
 2754 0014 1846     		mov	r0, r3
 2755 0016 03B0     		add	sp, sp, #12
 2756              	.LCFI54:
 2757              		.cfi_def_cfa_offset 4
 2758              		@ sp needed
 2759 0018 5DF804FB 		ldr	pc, [sp], #4
 2760              	.L188:
 2761              		.align	2
 2762              	.L187:
 2763 001c 00000000 		.word	xTickCount
 2764              		.cfi_endproc
 2765              	.LFE24:
 2767              		.section	.text.uxTaskGetNumberOfTasks,"ax",%progbits
 2768              		.align	1
 2769              		.global	uxTaskGetNumberOfTasks
 2770              		.syntax unified
 2771              		.thumb
 2772              		.thumb_func
 2773              		.fpu fpv4-sp-d16
 2775              	uxTaskGetNumberOfTasks:
 2776              	.LFB25:
2299:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2300:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2301:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** UBaseType_t uxTaskGetNumberOfTasks( void )
2302:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 2777              		.loc 1 2302 0
 2778              		.cfi_startproc
 2779              		@ args = 0, pretend = 0, frame = 0
 2780              		@ frame_needed = 0, uses_anonymous_args = 0
 2781              		@ link register save eliminated.
2303:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* A critical section is not required because the variables are of type
2304:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t. */
2305:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	return uxCurrentNumberOfTasks;
 2782              		.loc 1 2305 0
 2783 0000 014B     		ldr	r3, .L191
 2784 0002 1B68     		ldr	r3, [r3]
2306:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 2785              		.loc 1 2306 0
 2786 0004 1846     		mov	r0, r3
 2787 0006 7047     		bx	lr
 2788              	.L192:
 2789              		.align	2
 2790              	.L191:
 2791 0008 00000000 		.word	uxCurrentNumberOfTasks
 2792              		.cfi_endproc
 2793              	.LFE25:
 2795              		.section	.text.pcTaskGetName,"ax",%progbits
 2796              		.align	1
 2797              		.global	pcTaskGetName
 2798              		.syntax unified
 2799              		.thumb
 2800              		.thumb_func
 2801              		.fpu fpv4-sp-d16
 2803              	pcTaskGetName:
 2804              	.LFB26:
2307:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2308:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2309:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** char *pcTaskGetName( TaskHandle_t xTaskToQuery ) /*lint !e971 Unqualified char types are allowed fo
2310:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 2805              		.loc 1 2310 0
 2806              		.cfi_startproc
 2807              		@ args = 0, pretend = 0, frame = 16
 2808              		@ frame_needed = 0, uses_anonymous_args = 0
 2809              		@ link register save eliminated.
 2810 0000 84B0     		sub	sp, sp, #16
 2811              	.LCFI55:
 2812              		.cfi_def_cfa_offset 16
 2813 0002 0190     		str	r0, [sp, #4]
2311:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
2312:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2313:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* If null is passed in here then the name of the calling task is being
2314:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	queried. */
2315:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxTCB = prvGetTCBFromHandle( xTaskToQuery );
 2814              		.loc 1 2315 0
 2815 0004 019B     		ldr	r3, [sp, #4]
 2816 0006 002B     		cmp	r3, #0
 2817 0008 02D1     		bne	.L194
 2818              		.loc 1 2315 0 is_stmt 0 discriminator 1
 2819 000a 0B4B     		ldr	r3, .L199
 2820 000c 1B68     		ldr	r3, [r3]
 2821 000e 00E0     		b	.L195
 2822              	.L194:
 2823              		.loc 1 2315 0 discriminator 2
 2824 0010 019B     		ldr	r3, [sp, #4]
 2825              	.L195:
 2826              		.loc 1 2315 0 discriminator 4
 2827 0012 0393     		str	r3, [sp, #12]
2316:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTCB );
 2828              		.loc 1 2316 0 is_stmt 1 discriminator 4
 2829 0014 039B     		ldr	r3, [sp, #12]
 2830 0016 002B     		cmp	r3, #0
 2831 0018 09D1     		bne	.L196
 2832              	.LBB156:
 2833              	.LBB157:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 2834              		.loc 2 195 0 discriminator 1
 2835              		.syntax unified
 2836              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 2837 001a 4FF05003 			mov r3, #80												
 2838 001e 83F31188 		msr basepri, r3											
 2839 0022 BFF36F8F 		isb														
 2840 0026 BFF34F8F 		dsb														
 2841              	
 2842              	@ 0 "" 2
 2843              		.thumb
 2844              		.syntax unified
 2845 002a 0293     		str	r3, [sp, #8]
 2846              	.L197:
 2847              	.LBE157:
 2848              	.LBE156:
 2849              		.loc 1 2316 0 discriminator 1
 2850 002c FEE7     		b	.L197
 2851              	.L196:
2317:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	return &( pxTCB->pcTaskName[ 0 ] );
 2852              		.loc 1 2317 0
 2853 002e 039B     		ldr	r3, [sp, #12]
 2854 0030 3433     		adds	r3, r3, #52
2318:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 2855              		.loc 1 2318 0
 2856 0032 1846     		mov	r0, r3
 2857 0034 04B0     		add	sp, sp, #16
 2858              	.LCFI56:
 2859              		.cfi_def_cfa_offset 0
 2860              		@ sp needed
 2861 0036 7047     		bx	lr
 2862              	.L200:
 2863              		.align	2
 2864              	.L199:
 2865 0038 00000000 		.word	pxCurrentTCB
 2866              		.cfi_endproc
 2867              	.LFE26:
 2869              		.section	.text.uxTaskGetSystemState,"ax",%progbits
 2870              		.align	1
 2871              		.global	uxTaskGetSystemState
 2872              		.syntax unified
 2873              		.thumb
 2874              		.thumb_func
 2875              		.fpu fpv4-sp-d16
 2877              	uxTaskGetSystemState:
 2878              	.LFB27:
2319:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2320:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2321:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2322:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2323:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static TCB_t *prvSearchForNameWithinSingleList( List_t *pxList, const char pcNameToQuery[] )
2324:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2325:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxNextTCB, *pxFirstTCB, *pxReturn = NULL;
2326:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t x;
2327:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	char cNextChar;
2328:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xBreakLoop;
2329:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2330:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* This function is called with the scheduler suspended. */
2331:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2332:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
2333:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2334:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList );  /*lint !e9079 void * is used as this macro i
2335:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2336:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			do
2337:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2338:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
2339:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2340:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Check each character in the name looking for a match or
2341:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mismatch. */
2342:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xBreakLoop = pdFALSE;
2343:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				for( x = ( UBaseType_t ) 0; x < ( UBaseType_t ) configMAX_TASK_NAME_LEN; x++ )
2344:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2345:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					cNextChar = pxNextTCB->pcTaskName[ x ];
2346:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2347:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( cNextChar != pcNameToQuery[ x ] )
2348:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2349:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* Characters didn't match. */
2350:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2351:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2352:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else if( cNextChar == ( char ) 0x00 )
2353:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2354:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* Both strings terminated, a match must have been
2355:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						found. */
2356:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						pxReturn = pxNextTCB;
2357:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xBreakLoop = pdTRUE;
2358:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2359:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
2360:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2361:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2362:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2363:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2364:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( xBreakLoop != pdFALSE )
2365:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2366:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						break;
2367:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2368:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2369:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2370:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxReturn != NULL )
2371:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2372:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The handle has been found. */
2373:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
2374:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2375:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2376:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
2377:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2378:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2379:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2380:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2381:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2382:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2383:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return pxReturn;
2384:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2385:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2386:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2387:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2388:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2389:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetHandle == 1 )
2390:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2391:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetHandle( const char *pcNameToQuery ) /*lint !e971 Unqualified char types are a
2392:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2393:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxQueue = configMAX_PRIORITIES;
2394:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t* pxTCB;
2395:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2396:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Task names will be truncated to configMAX_TASK_NAME_LEN - 1 bytes. */
2397:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( strlen( pcNameToQuery ) < configMAX_TASK_NAME_LEN );
2398:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2399:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2400:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2401:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Search the ready lists. */
2402:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			do
2403:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2404:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxQueue--;
2405:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) &( pxReadyTasksLists[ uxQueue ] ), pcNam
2406:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2407:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB != NULL )
2408:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2409:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Found the handle. */
2410:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
2411:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2412:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2413:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the casts
2414:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2415:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Search the delayed lists. */
2416:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2417:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2418:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxDelayedTaskList, pcNameToQuery );
2419:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2420:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2421:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB == NULL )
2422:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2423:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxTCB = prvSearchForNameWithinSingleList( ( List_t * ) pxOverflowDelayedTaskList, pcNameToQuery
2424:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2425:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2426:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if ( INCLUDE_vTaskSuspend == 1 )
2427:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2428:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2429:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2430:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Search the suspended list. */
2431:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xSuspendedTaskList, pcNameToQuery );
2432:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2433:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2434:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif
2435:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2436:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if( INCLUDE_vTaskDelete == 1 )
2437:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2438:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB == NULL )
2439:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2440:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Search the deleted list. */
2441:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB = prvSearchForNameWithinSingleList( &xTasksWaitingTermination, pcNameToQuery );
2442:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2443:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2444:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif
2445:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2446:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2447:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2448:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return pxTCB;
2449:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2450:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2451:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetHandle */
2452:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2453:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2454:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
2455:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2456:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetSystemState( TaskStatus_t * const pxTaskStatusArray, const UBaseType_t uxArra
2457:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 2879              		.loc 1 2457 0
 2880              		.cfi_startproc
 2881              		@ args = 0, pretend = 0, frame = 24
 2882              		@ frame_needed = 0, uses_anonymous_args = 0
 2883 0000 00B5     		push	{lr}
 2884              	.LCFI57:
 2885              		.cfi_def_cfa_offset 4
 2886              		.cfi_offset 14, -4
 2887 0002 87B0     		sub	sp, sp, #28
 2888              	.LCFI58:
 2889              		.cfi_def_cfa_offset 32
 2890 0004 0390     		str	r0, [sp, #12]
 2891 0006 0291     		str	r1, [sp, #8]
 2892 0008 0192     		str	r2, [sp, #4]
2458:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0, uxQueue = configMAX_PRIORITIES;
 2893              		.loc 1 2458 0
 2894 000a 0023     		movs	r3, #0
 2895 000c 0593     		str	r3, [sp, #20]
 2896 000e 0523     		movs	r3, #5
 2897 0010 0493     		str	r3, [sp, #16]
2459:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2460:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
 2898              		.loc 1 2460 0
 2899 0012 FFF7FEFF 		bl	vTaskSuspendAll
2461:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2462:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Is there a space in the array for each task in the system? */
2463:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxArraySize >= uxCurrentNumberOfTasks )
 2900              		.loc 1 2463 0
 2901 0016 3A4B     		ldr	r3, .L206
 2902 0018 1B68     		ldr	r3, [r3]
 2903 001a 029A     		ldr	r2, [sp, #8]
 2904 001c 9A42     		cmp	r2, r3
 2905 001e 68D3     		bcc	.L202
 2906              	.L203:
2464:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2465:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2466:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				task in the Ready state. */
2467:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				do
2468:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2469:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					uxQueue--;
 2907              		.loc 1 2469 0 discriminator 1
 2908 0020 049B     		ldr	r3, [sp, #16]
 2909 0022 013B     		subs	r3, r3, #1
 2910 0024 0493     		str	r3, [sp, #16]
2470:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &( pxReadyTasksLists
 2911              		.loc 1 2470 0 discriminator 1
 2912 0026 059A     		ldr	r2, [sp, #20]
 2913 0028 1346     		mov	r3, r2
 2914 002a DB00     		lsls	r3, r3, #3
 2915 002c 1344     		add	r3, r3, r2
 2916 002e 9B00     		lsls	r3, r3, #2
 2917 0030 1A46     		mov	r2, r3
 2918 0032 039B     		ldr	r3, [sp, #12]
 2919 0034 9818     		adds	r0, r3, r2
 2920 0036 049A     		ldr	r2, [sp, #16]
 2921 0038 1346     		mov	r3, r2
 2922 003a 9B00     		lsls	r3, r3, #2
 2923 003c 1344     		add	r3, r3, r2
 2924 003e 9B00     		lsls	r3, r3, #2
 2925 0040 304A     		ldr	r2, .L206+4
 2926 0042 1344     		add	r3, r3, r2
 2927 0044 0122     		movs	r2, #1
 2928 0046 1946     		mov	r1, r3
 2929 0048 FFF7FEFF 		bl	prvListTasksWithinSingleList
 2930 004c 0246     		mov	r2, r0
 2931 004e 059B     		ldr	r3, [sp, #20]
 2932 0050 1344     		add	r3, r3, r2
 2933 0052 0593     		str	r3, [sp, #20]
2471:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2472:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				} while( uxQueue > ( UBaseType_t ) tskIDLE_PRIORITY ); /*lint !e961 MISRA exception as the cast
 2934              		.loc 1 2472 0 discriminator 1
 2935 0054 049B     		ldr	r3, [sp, #16]
 2936 0056 002B     		cmp	r3, #0
 2937 0058 E2D1     		bne	.L203
2473:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2474:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Fill in an TaskStatus_t structure with information on each
2475:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				task in the Blocked state. */
2476:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxDelaye
 2938              		.loc 1 2476 0
 2939 005a 059A     		ldr	r2, [sp, #20]
 2940 005c 1346     		mov	r3, r2
 2941 005e DB00     		lsls	r3, r3, #3
 2942 0060 1344     		add	r3, r3, r2
 2943 0062 9B00     		lsls	r3, r3, #2
 2944 0064 1A46     		mov	r2, r3
 2945 0066 039B     		ldr	r3, [sp, #12]
 2946 0068 9818     		adds	r0, r3, r2
 2947 006a 274B     		ldr	r3, .L206+8
 2948 006c 1B68     		ldr	r3, [r3]
 2949 006e 0222     		movs	r2, #2
 2950 0070 1946     		mov	r1, r3
 2951 0072 FFF7FEFF 		bl	prvListTasksWithinSingleList
 2952 0076 0246     		mov	r2, r0
 2953 0078 059B     		ldr	r3, [sp, #20]
 2954 007a 1344     		add	r3, r3, r2
 2955 007c 0593     		str	r3, [sp, #20]
2477:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), ( List_t * ) pxOverfl
 2956              		.loc 1 2477 0
 2957 007e 059A     		ldr	r2, [sp, #20]
 2958 0080 1346     		mov	r3, r2
 2959 0082 DB00     		lsls	r3, r3, #3
 2960 0084 1344     		add	r3, r3, r2
 2961 0086 9B00     		lsls	r3, r3, #2
 2962 0088 1A46     		mov	r2, r3
 2963 008a 039B     		ldr	r3, [sp, #12]
 2964 008c 9818     		adds	r0, r3, r2
 2965 008e 1F4B     		ldr	r3, .L206+12
 2966 0090 1B68     		ldr	r3, [r3]
 2967 0092 0222     		movs	r2, #2
 2968 0094 1946     		mov	r1, r3
 2969 0096 FFF7FEFF 		bl	prvListTasksWithinSingleList
 2970 009a 0246     		mov	r2, r0
 2971 009c 059B     		ldr	r3, [sp, #20]
 2972 009e 1344     		add	r3, r3, r2
 2973 00a0 0593     		str	r3, [sp, #20]
2478:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2479:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#if( INCLUDE_vTaskDelete == 1 )
2480:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2481:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2482:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					each task that has been deleted but not yet cleaned up. */
2483:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xTasksWaitingTermin
 2974              		.loc 1 2483 0
 2975 00a2 059A     		ldr	r2, [sp, #20]
 2976 00a4 1346     		mov	r3, r2
 2977 00a6 DB00     		lsls	r3, r3, #3
 2978 00a8 1344     		add	r3, r3, r2
 2979 00aa 9B00     		lsls	r3, r3, #2
 2980 00ac 1A46     		mov	r2, r3
 2981 00ae 039B     		ldr	r3, [sp, #12]
 2982 00b0 1344     		add	r3, r3, r2
 2983 00b2 0422     		movs	r2, #4
 2984 00b4 1649     		ldr	r1, .L206+16
 2985 00b6 1846     		mov	r0, r3
 2986 00b8 FFF7FEFF 		bl	prvListTasksWithinSingleList
 2987 00bc 0246     		mov	r2, r0
 2988 00be 059B     		ldr	r3, [sp, #20]
 2989 00c0 1344     		add	r3, r3, r2
 2990 00c2 0593     		str	r3, [sp, #20]
2484:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2485:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#endif
2486:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2487:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
2488:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2489:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Fill in an TaskStatus_t structure with information on
2490:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					each task in the Suspended state. */
2491:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					uxTask += prvListTasksWithinSingleList( &( pxTaskStatusArray[ uxTask ] ), &xSuspendedTaskList,
 2991              		.loc 1 2491 0
 2992 00c4 059A     		ldr	r2, [sp, #20]
 2993 00c6 1346     		mov	r3, r2
 2994 00c8 DB00     		lsls	r3, r3, #3
 2995 00ca 1344     		add	r3, r3, r2
 2996 00cc 9B00     		lsls	r3, r3, #2
 2997 00ce 1A46     		mov	r2, r3
 2998 00d0 039B     		ldr	r3, [sp, #12]
 2999 00d2 1344     		add	r3, r3, r2
 3000 00d4 0322     		movs	r2, #3
 3001 00d6 0F49     		ldr	r1, .L206+20
 3002 00d8 1846     		mov	r0, r3
 3003 00da FFF7FEFF 		bl	prvListTasksWithinSingleList
 3004 00de 0246     		mov	r2, r0
 3005 00e0 059B     		ldr	r3, [sp, #20]
 3006 00e2 1344     		add	r3, r3, r2
 3007 00e4 0593     		str	r3, [sp, #20]
2492:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2493:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#endif
2494:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2495:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#if ( configGENERATE_RUN_TIME_STATS == 1)
2496:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2497:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
2498:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2499:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2500:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							portALT_GET_RUN_TIME_COUNTER_VALUE( ( *pulTotalRunTime ) );
2501:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#else
2502:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							*pulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2503:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#endif
2504:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2505:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2506:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#else
2507:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2508:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pulTotalRunTime != NULL )
 3008              		.loc 1 2508 0
 3009 00e6 019B     		ldr	r3, [sp, #4]
 3010 00e8 002B     		cmp	r3, #0
 3011 00ea 02D0     		beq	.L202
2509:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2510:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						*pulTotalRunTime = 0;
 3012              		.loc 1 2510 0
 3013 00ec 019B     		ldr	r3, [sp, #4]
 3014 00ee 0022     		movs	r2, #0
 3015 00f0 1A60     		str	r2, [r3]
 3016              	.L202:
2511:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2512:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2513:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#endif
2514:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2515:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
2516:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2517:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2518:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2519:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2520:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
 3017              		.loc 1 2520 0
 3018 00f2 FFF7FEFF 		bl	xTaskResumeAll
2521:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2522:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return uxTask;
 3019              		.loc 1 2522 0
 3020 00f6 059B     		ldr	r3, [sp, #20]
2523:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 3021              		.loc 1 2523 0
 3022 00f8 1846     		mov	r0, r3
 3023 00fa 07B0     		add	sp, sp, #28
 3024              	.LCFI59:
 3025              		.cfi_def_cfa_offset 4
 3026              		@ sp needed
 3027 00fc 5DF804FB 		ldr	pc, [sp], #4
 3028              	.L207:
 3029              		.align	2
 3030              	.L206:
 3031 0100 00000000 		.word	uxCurrentNumberOfTasks
 3032 0104 00000000 		.word	pxReadyTasksLists
 3033 0108 00000000 		.word	pxDelayedTaskList
 3034 010c 00000000 		.word	pxOverflowDelayedTaskList
 3035 0110 00000000 		.word	xTasksWaitingTermination
 3036 0114 00000000 		.word	xSuspendedTaskList
 3037              		.cfi_endproc
 3038              	.LFE27:
 3040              		.section	.text.xTaskIncrementTick,"ax",%progbits
 3041              		.align	1
 3042              		.global	xTaskIncrementTick
 3043              		.syntax unified
 3044              		.thumb
 3045              		.thumb_func
 3046              		.fpu fpv4-sp-d16
 3048              	xTaskIncrementTick:
 3049              	.LFB28:
2524:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2525:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
2526:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2527:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2528:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskGetIdleTaskHandle == 1 )
2529:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2530:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetIdleTaskHandle( void )
2531:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2532:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If xTaskGetIdleTaskHandle() is called before the scheduler has been
2533:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		started, then xIdleTaskHandle will be NULL. */
2534:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xIdleTaskHandle != NULL ) );
2535:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xIdleTaskHandle;
2536:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2537:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2538:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskGetIdleTaskHandle */
2539:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2540:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2541:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /* This conditional compilation should use inequality to 0, not equality to 1.
2542:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** This is to ensure vTaskStepTick() is available when user defined low power mode
2543:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** implementations require configUSE_TICKLESS_IDLE to be set to a value other than
2544:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 1. */
2545:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_TICKLESS_IDLE != 0 )
2546:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2547:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskStepTick( const TickType_t xTicksToJump )
2548:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2549:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Correct the tick count value after a period during which the tick
2550:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		was suppressed.  Note this does *not* call the tick hook function for
2551:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		each stepped tick. */
2552:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( ( xTickCount + xTicksToJump ) <= xNextTaskUnblockTime );
2553:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xTickCount += xTicksToJump;
2554:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceINCREASE_TICK_COUNT( xTicksToJump );
2555:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2556:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2557:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
2558:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2559:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2560:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_xTaskAbortDelay == 1 )
2561:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2562:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskAbortDelay( TaskHandle_t xTask )
2563:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2564:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB = xTask;
2565:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2566:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2567:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( pxTCB );
2568:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2569:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vTaskSuspendAll();
2570:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2571:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* A task can only be prematurely removed from the Blocked state if
2572:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			it is actually in the Blocked state. */
2573:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( eTaskGetState( xTask ) == eBlocked )
2574:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2575:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
2576:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2577:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Remove the reference to the task from the blocked list.  An
2578:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				interrupt won't touch the xStateListItem because the
2579:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				scheduler is suspended. */
2580:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
2581:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2582:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Is the task waiting on an event also?  If so remove it from
2583:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				the event list too.  Interrupts can touch the event list item,
2584:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				even though the scheduler is suspended, so a critical section
2585:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				is used. */
2586:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				taskENTER_CRITICAL();
2587:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2588:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
2589:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2590:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
2591:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						pxTCB->ucDelayAborted = pdTRUE;
2592:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2593:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
2594:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2595:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2596:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2597:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2598:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				taskEXIT_CRITICAL();
2599:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2600:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Place the unblocked task into the appropriate ready list. */
2601:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
2602:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2603:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* A task being unblocked cannot cause an immediate context
2604:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				switch if preemption is turned off. */
2605:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#if (  configUSE_PREEMPTION == 1 )
2606:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2607:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Preemption is on, but a context switch should only be
2608:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					performed if the unblocked task has a priority that is
2609:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					equal to or higher than the currently executing task. */
2610:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
2611:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2612:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* Pend the yield to be performed when the scheduler
2613:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						is unsuspended. */
2614:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xYieldPending = pdTRUE;
2615:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2616:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
2617:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2618:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2619:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2620:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2621:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#endif /* configUSE_PREEMPTION */
2622:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2623:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
2624:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2625:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
2626:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2627:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2628:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		( void ) xTaskResumeAll();
2629:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2630:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
2631:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2632:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2633:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_xTaskAbortDelay */
2634:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
2635:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2636:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** BaseType_t xTaskIncrementTick( void )
2637:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 3050              		.loc 1 2637 0
 3051              		.cfi_startproc
 3052              		@ args = 0, pretend = 0, frame = 24
 3053              		@ frame_needed = 0, uses_anonymous_args = 0
 3054 0000 00B5     		push	{lr}
 3055              	.LCFI60:
 3056              		.cfi_def_cfa_offset 4
 3057              		.cfi_offset 14, -4
 3058 0002 87B0     		sub	sp, sp, #28
 3059              	.LCFI61:
 3060              		.cfi_def_cfa_offset 32
2638:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TCB_t * pxTCB;
2639:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TickType_t xItemValue;
2640:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** BaseType_t xSwitchRequired = pdFALSE;
 3061              		.loc 1 2640 0
 3062 0004 0023     		movs	r3, #0
 3063 0006 0593     		str	r3, [sp, #20]
2641:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2642:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Called by the portable layer each time a tick interrupt occurs.
2643:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	Increments the tick then checks to see if the new tick value will cause any
2644:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	tasks to be unblocked. */
2645:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	traceTASK_INCREMENT_TICK( xTickCount );
2646:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 3064              		.loc 1 2646 0
 3065 0008 4D4B     		ldr	r3, .L223
 3066 000a 1B68     		ldr	r3, [r3]
 3067 000c 002B     		cmp	r3, #0
 3068 000e 40F08780 		bne	.L209
 3069              	.LBB158:
2647:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2648:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this
2649:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		block. */
2650:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount + ( TickType_t ) 1;
 3070              		.loc 1 2650 0
 3071 0012 4C4B     		ldr	r3, .L223+4
 3072 0014 1B68     		ldr	r3, [r3]
 3073 0016 0133     		adds	r3, r3, #1
 3074 0018 0493     		str	r3, [sp, #16]
2651:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2652:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Increment the RTOS tick, switching the delayed and overflowed
2653:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		delayed lists if it wraps to 0. */
2654:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xTickCount = xConstTickCount;
 3075              		.loc 1 2654 0
 3076 001a 4A4A     		ldr	r2, .L223+4
 3077 001c 049B     		ldr	r3, [sp, #16]
 3078 001e 1360     		str	r3, [r2]
2655:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2656:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount == ( TickType_t ) 0U ) /*lint !e774 'if' does not always evaluate to false as
 3079              		.loc 1 2656 0
 3080 0020 049B     		ldr	r3, [sp, #16]
 3081 0022 002B     		cmp	r3, #0
 3082 0024 1FD1     		bne	.L210
 3083              	.LBB159:
2657:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2658:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskSWITCH_DELAYED_LISTS();
 3084              		.loc 1 2658 0
 3085 0026 484B     		ldr	r3, .L223+8
 3086 0028 1B68     		ldr	r3, [r3]
 3087 002a 1B68     		ldr	r3, [r3]
 3088 002c 002B     		cmp	r3, #0
 3089 002e 09D0     		beq	.L211
 3090              	.LBB160:
 3091              	.LBB161:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3092              		.loc 2 195 0 discriminator 1
 3093              		.syntax unified
 3094              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3095 0030 4FF05003 			mov r3, #80												
 3096 0034 83F31188 		msr basepri, r3											
 3097 0038 BFF36F8F 		isb														
 3098 003c BFF34F8F 		dsb														
 3099              	
 3100              	@ 0 "" 2
 3101              		.thumb
 3102              		.syntax unified
 3103 0040 0093     		str	r3, [sp]
 3104              	.L212:
 3105              	.LBE161:
 3106              	.LBE160:
 3107              		.loc 1 2658 0 discriminator 1
 3108 0042 FEE7     		b	.L212
 3109              	.L211:
 3110              		.loc 1 2658 0 is_stmt 0 discriminator 2
 3111 0044 404B     		ldr	r3, .L223+8
 3112 0046 1B68     		ldr	r3, [r3]
 3113 0048 0393     		str	r3, [sp, #12]
 3114 004a 404B     		ldr	r3, .L223+12
 3115 004c 1B68     		ldr	r3, [r3]
 3116 004e 3E4A     		ldr	r2, .L223+8
 3117 0050 1360     		str	r3, [r2]
 3118 0052 3E4A     		ldr	r2, .L223+12
 3119 0054 039B     		ldr	r3, [sp, #12]
 3120 0056 1360     		str	r3, [r2]
 3121 0058 3D4B     		ldr	r3, .L223+16
 3122 005a 1B68     		ldr	r3, [r3]
 3123 005c 0133     		adds	r3, r3, #1
 3124 005e 3C4A     		ldr	r2, .L223+16
 3125 0060 1360     		str	r3, [r2]
 3126 0062 FFF7FEFF 		bl	prvResetNextTaskUnblockTime
 3127              	.L210:
 3128              	.LBE159:
2659:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2660:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2661:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2662:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2663:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2664:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2665:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* See if this tick has made a timeout expire.  Tasks are stored in
2666:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the	queue in the order of their wake time - meaning once one task
2667:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		has been found whose block time has not expired there is no need to
2668:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		look any further down the list. */
2669:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xConstTickCount >= xNextTaskUnblockTime )
 3129              		.loc 1 2669 0 is_stmt 1
 3130 0066 3B4B     		ldr	r3, .L223+20
 3131 0068 1B68     		ldr	r3, [r3]
 3132 006a 049A     		ldr	r2, [sp, #16]
 3133 006c 9A42     		cmp	r2, r3
 3134 006e 48D3     		bcc	.L213
 3135              	.L218:
2670:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2671:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			for( ;; )
2672:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2673:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 3136              		.loc 1 2673 0
 3137 0070 354B     		ldr	r3, .L223+8
 3138 0072 1B68     		ldr	r3, [r3]
 3139 0074 1B68     		ldr	r3, [r3]
 3140 0076 002B     		cmp	r3, #0
 3141 0078 04D1     		bne	.L214
2674:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2675:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The delayed list is empty.  Set xNextTaskUnblockTime
2676:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					to the maximum possible value so it is extremely
2677:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					unlikely that the
2678:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( xTickCount >= xNextTaskUnblockTime ) test will pass
2679:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					next time through. */
2680:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = portMAX_DELAY; /*lint !e961 MISRA exception as the casts are only redun
 3142              		.loc 1 2680 0
 3143 007a 364B     		ldr	r3, .L223+20
 3144 007c 4FF0FF32 		mov	r2, #-1
 3145 0080 1A60     		str	r2, [r3]
2681:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 3146              		.loc 1 2681 0
 3147 0082 3EE0     		b	.L213
 3148              	.L214:
2682:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2683:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
2684:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2685:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The delayed list is not empty, get the value of the
2686:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					item at the head of the delayed list.  This is the time
2687:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					at which the task at the head of the delayed list must
2688:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					be removed from the Blocked state. */
2689:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as this
 3149              		.loc 1 2689 0
 3150 0084 304B     		ldr	r3, .L223+8
 3151 0086 1B68     		ldr	r3, [r3]
 3152 0088 DB68     		ldr	r3, [r3, #12]
 3153 008a DB68     		ldr	r3, [r3, #12]
 3154 008c 0293     		str	r3, [sp, #8]
2690:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xItemValue = listGET_LIST_ITEM_VALUE( &( pxTCB->xStateListItem ) );
 3155              		.loc 1 2690 0
 3156 008e 029B     		ldr	r3, [sp, #8]
 3157 0090 5B68     		ldr	r3, [r3, #4]
 3158 0092 0193     		str	r3, [sp, #4]
2691:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2692:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( xConstTickCount < xItemValue )
 3159              		.loc 1 2692 0
 3160 0094 049A     		ldr	r2, [sp, #16]
 3161 0096 019B     		ldr	r3, [sp, #4]
 3162 0098 9A42     		cmp	r2, r3
 3163 009a 03D2     		bcs	.L215
2693:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2694:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* It is not time to unblock this item yet, but the
2695:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						item value is the time at which the task at the head
2696:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						of the blocked list must be removed from the Blocked
2697:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						state -	so record the item value in
2698:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime. */
2699:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xNextTaskUnblockTime = xItemValue;
 3164              		.loc 1 2699 0
 3165 009c 2D4A     		ldr	r2, .L223+20
 3166 009e 019B     		ldr	r3, [sp, #4]
 3167 00a0 1360     		str	r3, [r2]
2700:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						break; /*lint !e9011 Code structure here is deedmed easier to understand with multiple breaks
 3168              		.loc 1 2700 0
 3169 00a2 2EE0     		b	.L213
 3170              	.L215:
2701:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2702:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
2703:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2704:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2705:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2706:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2707:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* It is time to remove the item from the Blocked state. */
2708:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 3171              		.loc 1 2708 0
 3172 00a4 029B     		ldr	r3, [sp, #8]
 3173 00a6 0433     		adds	r3, r3, #4
 3174 00a8 1846     		mov	r0, r3
 3175 00aa FFF7FEFF 		bl	uxListRemove
2709:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2710:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Is the task waiting on an event also?  If so remove
2711:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					it from the event list. */
2712:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 3176              		.loc 1 2712 0
 3177 00ae 029B     		ldr	r3, [sp, #8]
 3178 00b0 9B6A     		ldr	r3, [r3, #40]
 3179 00b2 002B     		cmp	r3, #0
 3180 00b4 04D0     		beq	.L216
2713:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2714:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						( void ) uxListRemove( &( pxTCB->xEventListItem ) );
 3181              		.loc 1 2714 0
 3182 00b6 029B     		ldr	r3, [sp, #8]
 3183 00b8 1833     		adds	r3, r3, #24
 3184 00ba 1846     		mov	r0, r3
 3185 00bc FFF7FEFF 		bl	uxListRemove
 3186              	.L216:
2715:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2716:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
2717:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2718:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
2719:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2720:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2721:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Place the unblocked task into the appropriate ready
2722:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					list. */
2723:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 3187              		.loc 1 2723 0
 3188 00c0 029B     		ldr	r3, [sp, #8]
 3189 00c2 DB6A     		ldr	r3, [r3, #44]
 3190 00c4 0122     		movs	r2, #1
 3191 00c6 9A40     		lsls	r2, r2, r3
 3192 00c8 234B     		ldr	r3, .L223+24
 3193 00ca 1B68     		ldr	r3, [r3]
 3194 00cc 1343     		orrs	r3, r3, r2
 3195 00ce 224A     		ldr	r2, .L223+24
 3196 00d0 1360     		str	r3, [r2]
 3197 00d2 029B     		ldr	r3, [sp, #8]
 3198 00d4 DA6A     		ldr	r2, [r3, #44]
 3199 00d6 1346     		mov	r3, r2
 3200 00d8 9B00     		lsls	r3, r3, #2
 3201 00da 1344     		add	r3, r3, r2
 3202 00dc 9B00     		lsls	r3, r3, #2
 3203 00de 1F4A     		ldr	r2, .L223+28
 3204 00e0 1A44     		add	r2, r2, r3
 3205 00e2 029B     		ldr	r3, [sp, #8]
 3206 00e4 0433     		adds	r3, r3, #4
 3207 00e6 1946     		mov	r1, r3
 3208 00e8 1046     		mov	r0, r2
 3209 00ea FFF7FEFF 		bl	vListInsertEnd
2724:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2725:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* A task being unblocked cannot cause an immediate
2726:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					context switch if preemption is turned off. */
2727:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					#if (  configUSE_PREEMPTION == 1 )
2728:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
2729:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* Preemption is on, but a context switch should
2730:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						only be performed if the unblocked task has a
2731:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						priority that is equal to or higher than the
2732:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						currently executing task. */
2733:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						if( pxTCB->uxPriority >= pxCurrentTCB->uxPriority )
 3210              		.loc 1 2733 0
 3211 00ee 029B     		ldr	r3, [sp, #8]
 3212 00f0 DA6A     		ldr	r2, [r3, #44]
 3213 00f2 1B4B     		ldr	r3, .L223+32
 3214 00f4 1B68     		ldr	r3, [r3]
 3215 00f6 DB6A     		ldr	r3, [r3, #44]
 3216 00f8 9A42     		cmp	r2, r3
 3217 00fa B9D3     		bcc	.L218
2734:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
2735:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							xSwitchRequired = pdTRUE;
 3218              		.loc 1 2735 0
 3219 00fc 0123     		movs	r3, #1
 3220 00fe 0593     		str	r3, [sp, #20]
2673:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
 3221              		.loc 1 2673 0
 3222 0100 B6E7     		b	.L218
 3223              	.L213:
2736:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
2737:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						else
2738:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
2739:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
2740:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
2741:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
2742:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					#endif /* configUSE_PREEMPTION */
2743:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2744:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2745:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2746:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2747:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Tasks of equal priority to the currently running task will share
2748:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		processing time (time slice) if preemption is on, and the application
2749:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		writer has not explicitly turned time slicing off. */
2750:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) )
2751:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2752:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ pxCurrentTCB->uxPriority ] ) ) > ( UBaseType_
 3224              		.loc 1 2752 0
 3225 0102 174B     		ldr	r3, .L223+32
 3226 0104 1B68     		ldr	r3, [r3]
 3227 0106 DA6A     		ldr	r2, [r3, #44]
 3228 0108 1449     		ldr	r1, .L223+28
 3229 010a 1346     		mov	r3, r2
 3230 010c 9B00     		lsls	r3, r3, #2
 3231 010e 1344     		add	r3, r3, r2
 3232 0110 9B00     		lsls	r3, r3, #2
 3233 0112 0B44     		add	r3, r3, r1
 3234 0114 1B68     		ldr	r3, [r3]
 3235 0116 012B     		cmp	r3, #1
 3236 0118 07D9     		bls	.L220
2753:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2754:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xSwitchRequired = pdTRUE;
 3237              		.loc 1 2754 0
 3238 011a 0123     		movs	r3, #1
 3239 011c 0593     		str	r3, [sp, #20]
 3240 011e 04E0     		b	.L220
 3241              	.L209:
 3242              	.LBE158:
2755:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2756:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
2757:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2758:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2759:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2760:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2761:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configUSE_TIME_SLICING == 1 ) ) */
2762:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2763:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2764:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2765:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Guard against the tick hook being called when the pended tick
2766:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			count is being unwound (when the scheduler is being unlocked). */
2767:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxPendedTicks == ( UBaseType_t ) 0U )
2768:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2769:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				vApplicationTickHook();
2770:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2771:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
2772:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
2773:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
2774:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
2775:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2776:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICK_HOOK */
2777:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2778:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
2779:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2780:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		++uxPendedTicks;
 3243              		.loc 1 2780 0
 3244 0120 104B     		ldr	r3, .L223+36
 3245 0122 1B68     		ldr	r3, [r3]
 3246 0124 0133     		adds	r3, r3, #1
 3247 0126 0F4A     		ldr	r2, .L223+36
 3248 0128 1360     		str	r3, [r2]
 3249              	.L220:
2781:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2782:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The tick hook gets called at regular intervals, even if the
2783:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		scheduler is locked. */
2784:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICK_HOOK == 1 )
2785:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2786:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vApplicationTickHook();
2787:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2788:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
2789:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2790:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2791:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( configUSE_PREEMPTION == 1 )
2792:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2793:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xYieldPending != pdFALSE )
 3250              		.loc 1 2793 0
 3251 012a 0F4B     		ldr	r3, .L223+40
 3252 012c 1B68     		ldr	r3, [r3]
 3253 012e 002B     		cmp	r3, #0
 3254 0130 01D0     		beq	.L221
2794:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2795:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xSwitchRequired = pdTRUE;
 3255              		.loc 1 2795 0
 3256 0132 0123     		movs	r3, #1
 3257 0134 0593     		str	r3, [sp, #20]
 3258              	.L221:
2796:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2797:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2798:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2799:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
2800:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2801:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2802:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* configUSE_PREEMPTION */
2803:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2804:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	return xSwitchRequired;
 3259              		.loc 1 2804 0
 3260 0136 059B     		ldr	r3, [sp, #20]
2805:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 3261              		.loc 1 2805 0
 3262 0138 1846     		mov	r0, r3
 3263 013a 07B0     		add	sp, sp, #28
 3264              	.LCFI62:
 3265              		.cfi_def_cfa_offset 4
 3266              		@ sp needed
 3267 013c 5DF804FB 		ldr	pc, [sp], #4
 3268              	.L224:
 3269              		.align	2
 3270              	.L223:
 3271 0140 00000000 		.word	uxSchedulerSuspended
 3272 0144 00000000 		.word	xTickCount
 3273 0148 00000000 		.word	pxDelayedTaskList
 3274 014c 00000000 		.word	pxOverflowDelayedTaskList
 3275 0150 00000000 		.word	xNumOfOverflows
 3276 0154 00000000 		.word	xNextTaskUnblockTime
 3277 0158 00000000 		.word	uxTopReadyPriority
 3278 015c 00000000 		.word	pxReadyTasksLists
 3279 0160 00000000 		.word	pxCurrentTCB
 3280 0164 00000000 		.word	uxPendedTicks
 3281 0168 00000000 		.word	xYieldPending
 3282              		.cfi_endproc
 3283              	.LFE28:
 3285              		.section	.text.vTaskSwitchContext,"ax",%progbits
 3286              		.align	1
 3287              		.global	vTaskSwitchContext
 3288              		.syntax unified
 3289              		.thumb
 3290              		.thumb_func
 3291              		.fpu fpv4-sp-d16
 3293              	vTaskSwitchContext:
 3294              	.LFB29:
2806:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2807:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2808:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2809:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2810:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskSetApplicationTaskTag( TaskHandle_t xTask, TaskHookFunction_t pxHookFunction )
2811:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2812:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2813:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2814:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then it is the task hook of the calling task that is
2815:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		getting set. */
2816:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2817:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2818:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2819:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2820:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2821:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2822:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2823:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2824:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2825:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2826:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2827:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2828:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2829:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTCB->pxTaskTag = pxHookFunction;
2830:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2831:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2832:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2833:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2834:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2835:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2836:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2837:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2838:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2839:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xTaskGetApplicationTaskTag( TaskHandle_t xTask )
2840:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2841:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2842:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskHookFunction_t xReturn;
2843:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2844:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are setting our own task hook. */
2845:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2846:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2847:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTCB = ( TCB_t * ) pxCurrentTCB;
2848:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2849:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2850:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2851:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2852:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2853:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2854:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Save the hook function in the TCB.  A critical section is required as
2855:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the value can be accessed from an interrupt. */
2856:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
2857:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2858:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag;
2859:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2860:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
2861:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2862:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
2863:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2864:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2865:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2866:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2867:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2868:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_APPLICATION_TASK_TAG == 1 )
2869:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2870:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskCallApplicationTaskHook( TaskHandle_t xTask, void *pvParameter )
2871:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2872:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *xTCB;
2873:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
2874:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2875:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If xTask is NULL then we are calling our own task hook. */
2876:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xTask == NULL )
2877:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2878:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTCB = pxCurrentTCB;
2879:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2880:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2881:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2882:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTCB = xTask;
2883:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2884:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2885:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xTCB->pxTaskTag != NULL )
2886:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2887:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = xTCB->pxTaskTag( pvParameter );
2888:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2889:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
2890:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2891:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = pdFAIL;
2892:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2893:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2894:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
2895:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2896:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2897:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_APPLICATION_TASK_TAG */
2898:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2899:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2900:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskSwitchContext( void )
2901:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 3295              		.loc 1 2901 0
 3296              		.cfi_startproc
 3297              		@ args = 0, pretend = 0, frame = 24
 3298              		@ frame_needed = 0, uses_anonymous_args = 0
 3299              		@ link register save eliminated.
 3300 0000 86B0     		sub	sp, sp, #24
 3301              	.LCFI63:
 3302              		.cfi_def_cfa_offset 24
2902:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended != ( UBaseType_t ) pdFALSE )
 3303              		.loc 1 2902 0
 3304 0002 264B     		ldr	r3, .L233
 3305 0004 1B68     		ldr	r3, [r3]
 3306 0006 002B     		cmp	r3, #0
 3307 0008 03D0     		beq	.L226
2903:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2904:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The scheduler is currently suspended - do not allow a context
2905:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		switch. */
2906:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 3308              		.loc 1 2906 0
 3309 000a 254B     		ldr	r3, .L233+4
 3310 000c 0122     		movs	r2, #1
 3311 000e 1A60     		str	r2, [r3]
2907:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2908:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
2909:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
2910:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdFALSE;
2911:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
2912:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2913:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
2914:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2915:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#ifdef portALT_GET_RUN_TIME_COUNTER_VALUE
2916:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					portALT_GET_RUN_TIME_COUNTER_VALUE( ulTotalRunTime );
2917:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#else
2918:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					ulTotalRunTime = portGET_RUN_TIME_COUNTER_VALUE();
2919:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#endif
2920:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2921:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Add the amount of time the task has been running to the
2922:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				accumulated time so far.  The time the task started running was
2923:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				stored in ulTaskSwitchedInTime.  Note that there is no overflow
2924:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				protection here so count values are only valid until the timer
2925:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				overflows.  The guard against negative values is to protect
2926:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				against suspect run time stat counter implementations - which
2927:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				are provided by the application, not the kernel. */
2928:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( ulTotalRunTime > ulTaskSwitchedInTime )
2929:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2930:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulRunTimeCounter += ( ulTotalRunTime - ulTaskSwitchedInTime );
2931:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2932:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
2933:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
2934:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
2935:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
2936:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				ulTaskSwitchedInTime = ulTotalRunTime;
2937:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2938:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configGENERATE_RUN_TIME_STATS */
2939:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2940:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Check for stack overflow, if configured. */
2941:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskCHECK_FOR_STACK_OVERFLOW();
2942:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2943:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Before the currently running task is switched out, save its errno. */
2944:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
2945:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2946:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->iTaskErrno = FreeRTOS_errno;
2947:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2948:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
2949:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2950:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Select a new task to run using either the generic C or port
2951:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		optimised asm code. */
2952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskSELECT_HIGHEST_PRIORITY_TASK(); /*lint !e9079 void * is used as this macro is used with timer
2953:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
2954:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2955:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* After the new task is switched in, update the global errno. */
2956:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if( configUSE_POSIX_ERRNO == 1 )
2957:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2958:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			FreeRTOS_errno = pxCurrentTCB->iTaskErrno;
2959:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2960:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
2961:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2962:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
2963:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
2964:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Switch Newlib's _impure_ptr variable to point to the _reent
2965:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			structure specific to this task. */
2966:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			_impure_ptr = &( pxCurrentTCB->xNewLib_reent );
2967:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
2968:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
2969:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
2970:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 3312              		.loc 1 2970 0
 3313 0010 40E0     		b	.L232
 3314              	.L226:
2910:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_OUT();
 3315              		.loc 1 2910 0
 3316 0012 234B     		ldr	r3, .L233+4
 3317 0014 0022     		movs	r2, #0
 3318 0016 1A60     		str	r2, [r3]
 3319              	.LBB162:
2952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3320              		.loc 1 2952 0
 3321 0018 224B     		ldr	r3, .L233+8
 3322 001a 1B68     		ldr	r3, [r3]
 3323 001c 0393     		str	r3, [sp, #12]
 3324              	.LBB163:
 3325              	.LBB164:
 134:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 		return ucReturn;
 3326              		.loc 2 134 0
 3327 001e 039B     		ldr	r3, [sp, #12]
 3328              		.syntax unified
 3329              	@ 134 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3330 0020 B3FA83F3 		clz r3, r3
 3331              	@ 0 "" 2
 3332              		.thumb
 3333              		.syntax unified
 3334 0024 8DF80B30 		strb	r3, [sp, #11]
 135:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	}
 3335              		.loc 2 135 0
 3336 0028 9DF80B30 		ldrb	r3, [sp, #11]	@ zero_extendqisi2
 3337              	.LBE164:
 3338              	.LBE163:
2952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3339              		.loc 1 2952 0
 3340 002c C3F11F03 		rsb	r3, r3, #31
 3341 0030 0593     		str	r3, [sp, #20]
 3342 0032 1D49     		ldr	r1, .L233+12
 3343 0034 059A     		ldr	r2, [sp, #20]
 3344 0036 1346     		mov	r3, r2
 3345 0038 9B00     		lsls	r3, r3, #2
 3346 003a 1344     		add	r3, r3, r2
 3347 003c 9B00     		lsls	r3, r3, #2
 3348 003e 0B44     		add	r3, r3, r1
 3349 0040 1B68     		ldr	r3, [r3]
 3350 0042 002B     		cmp	r3, #0
 3351 0044 09D1     		bne	.L229
 3352              	.LBB165:
 3353              	.LBB166:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3354              		.loc 2 195 0 discriminator 1
 3355              		.syntax unified
 3356              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3357 0046 4FF05003 			mov r3, #80												
 3358 004a 83F31188 		msr basepri, r3											
 3359 004e BFF36F8F 		isb														
 3360 0052 BFF34F8F 		dsb														
 3361              	
 3362              	@ 0 "" 2
 3363              		.thumb
 3364              		.syntax unified
 3365 0056 0193     		str	r3, [sp, #4]
 3366              	.L230:
 3367              	.LBE166:
 3368              	.LBE165:
2952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3369              		.loc 1 2952 0 discriminator 1
 3370 0058 FEE7     		b	.L230
 3371              	.L229:
 3372              	.LBB167:
2952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3373              		.loc 1 2952 0 is_stmt 0 discriminator 2
 3374 005a 059A     		ldr	r2, [sp, #20]
 3375 005c 1346     		mov	r3, r2
 3376 005e 9B00     		lsls	r3, r3, #2
 3377 0060 1344     		add	r3, r3, r2
 3378 0062 9B00     		lsls	r3, r3, #2
 3379 0064 104A     		ldr	r2, .L233+12
 3380 0066 1344     		add	r3, r3, r2
 3381 0068 0493     		str	r3, [sp, #16]
 3382 006a 049B     		ldr	r3, [sp, #16]
 3383 006c 5B68     		ldr	r3, [r3, #4]
 3384 006e 5A68     		ldr	r2, [r3, #4]
 3385 0070 049B     		ldr	r3, [sp, #16]
 3386 0072 5A60     		str	r2, [r3, #4]
 3387 0074 049B     		ldr	r3, [sp, #16]
 3388 0076 5A68     		ldr	r2, [r3, #4]
 3389 0078 049B     		ldr	r3, [sp, #16]
 3390 007a 0833     		adds	r3, r3, #8
 3391 007c 9A42     		cmp	r2, r3
 3392 007e 04D1     		bne	.L231
2952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3393              		.loc 1 2952 0 discriminator 3
 3394 0080 049B     		ldr	r3, [sp, #16]
 3395 0082 5B68     		ldr	r3, [r3, #4]
 3396 0084 5A68     		ldr	r2, [r3, #4]
 3397 0086 049B     		ldr	r3, [sp, #16]
 3398 0088 5A60     		str	r2, [r3, #4]
 3399              	.L231:
2952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_SWITCHED_IN();
 3400              		.loc 1 2952 0 discriminator 5
 3401 008a 049B     		ldr	r3, [sp, #16]
 3402 008c 5B68     		ldr	r3, [r3, #4]
 3403 008e DB68     		ldr	r3, [r3, #12]
 3404 0090 064A     		ldr	r2, .L233+16
 3405 0092 1360     		str	r3, [r2]
 3406              	.L232:
 3407              	.LBE167:
 3408              	.LBE162:
 3409              		.loc 1 2970 0 is_stmt 1
 3410 0094 00BF     		nop
 3411 0096 06B0     		add	sp, sp, #24
 3412              	.LCFI64:
 3413              		.cfi_def_cfa_offset 0
 3414              		@ sp needed
 3415 0098 7047     		bx	lr
 3416              	.L234:
 3417 009a 00BF     		.align	2
 3418              	.L233:
 3419 009c 00000000 		.word	uxSchedulerSuspended
 3420 00a0 00000000 		.word	xYieldPending
 3421 00a4 00000000 		.word	uxTopReadyPriority
 3422 00a8 00000000 		.word	pxReadyTasksLists
 3423 00ac 00000000 		.word	pxCurrentTCB
 3424              		.cfi_endproc
 3425              	.LFE29:
 3427              		.section	.text.vTaskPlaceOnEventList,"ax",%progbits
 3428              		.align	1
 3429              		.global	vTaskPlaceOnEventList
 3430              		.syntax unified
 3431              		.thumb
 3432              		.thumb_func
 3433              		.fpu fpv4-sp-d16
 3435              	vTaskPlaceOnEventList:
 3436              	.LFB30:
2971:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2972:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2973:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnEventList( List_t * const pxEventList, const TickType_t xTicksToWait )
2974:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 3437              		.loc 1 2974 0
 3438              		.cfi_startproc
 3439              		@ args = 0, pretend = 0, frame = 16
 3440              		@ frame_needed = 0, uses_anonymous_args = 0
 3441 0000 00B5     		push	{lr}
 3442              	.LCFI65:
 3443              		.cfi_def_cfa_offset 4
 3444              		.cfi_offset 14, -4
 3445 0002 85B0     		sub	sp, sp, #20
 3446              	.LCFI66:
 3447              		.cfi_def_cfa_offset 24
 3448 0004 0190     		str	r0, [sp, #4]
 3449 0006 0091     		str	r1, [sp]
2975:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3450              		.loc 1 2975 0
 3451 0008 019B     		ldr	r3, [sp, #4]
 3452 000a 002B     		cmp	r3, #0
 3453 000c 09D1     		bne	.L236
 3454              	.LBB168:
 3455              	.LBB169:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3456              		.loc 2 195 0 discriminator 1
 3457              		.syntax unified
 3458              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3459 000e 4FF05003 			mov r3, #80												
 3460 0012 83F31188 		msr basepri, r3											
 3461 0016 BFF36F8F 		isb														
 3462 001a BFF34F8F 		dsb														
 3463              	
 3464              	@ 0 "" 2
 3465              		.thumb
 3466              		.syntax unified
 3467 001e 0393     		str	r3, [sp, #12]
 3468              	.L237:
 3469              	.LBE169:
 3470              	.LBE168:
 3471              		.loc 1 2975 0 discriminator 1
 3472 0020 FEE7     		b	.L237
 3473              	.L236:
2976:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2977:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH EITHER INTERRUPTS DISABLED OR THE
2978:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	SCHEDULER SUSPENDED AND THE QUEUE BEING ACCESSED LOCKED. */
2979:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2980:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB in the appropriate event list.
2981:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	This is placed in the list in priority order so the highest priority task
2982:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	is the first to be woken by the event.  The queue that contains the event
2983:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	list is locked, preventing simultaneous access from interrupts. */
2984:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	vListInsert( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 3474              		.loc 1 2984 0
 3475 0022 074B     		ldr	r3, .L238
 3476 0024 1B68     		ldr	r3, [r3]
 3477 0026 1833     		adds	r3, r3, #24
 3478 0028 1946     		mov	r1, r3
 3479 002a 0198     		ldr	r0, [sp, #4]
 3480 002c FFF7FEFF 		bl	vListInsert
2985:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2986:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 3481              		.loc 1 2986 0
 3482 0030 0121     		movs	r1, #1
 3483 0032 0098     		ldr	r0, [sp]
 3484 0034 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
2987:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 3485              		.loc 1 2987 0
 3486 0038 00BF     		nop
 3487 003a 05B0     		add	sp, sp, #20
 3488              	.LCFI67:
 3489              		.cfi_def_cfa_offset 4
 3490              		@ sp needed
 3491 003c 5DF804FB 		ldr	pc, [sp], #4
 3492              	.L239:
 3493              		.align	2
 3494              	.L238:
 3495 0040 00000000 		.word	pxCurrentTCB
 3496              		.cfi_endproc
 3497              	.LFE30:
 3499              		.section	.text.vTaskPlaceOnUnorderedEventList,"ax",%progbits
 3500              		.align	1
 3501              		.global	vTaskPlaceOnUnorderedEventList
 3502              		.syntax unified
 3503              		.thumb
 3504              		.thumb_func
 3505              		.fpu fpv4-sp-d16
 3507              	vTaskPlaceOnUnorderedEventList:
 3508              	.LFB31:
2988:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
2989:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2990:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskPlaceOnUnorderedEventList( List_t * pxEventList, const TickType_t xItemValue, const TickT
2991:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 3509              		.loc 1 2991 0
 3510              		.cfi_startproc
 3511              		@ args = 0, pretend = 0, frame = 24
 3512              		@ frame_needed = 0, uses_anonymous_args = 0
 3513 0000 00B5     		push	{lr}
 3514              	.LCFI68:
 3515              		.cfi_def_cfa_offset 4
 3516              		.cfi_offset 14, -4
 3517 0002 87B0     		sub	sp, sp, #28
 3518              	.LCFI69:
 3519              		.cfi_def_cfa_offset 32
 3520 0004 0390     		str	r0, [sp, #12]
 3521 0006 0291     		str	r1, [sp, #8]
 3522 0008 0192     		str	r2, [sp, #4]
2992:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( pxEventList );
 3523              		.loc 1 2992 0
 3524 000a 039B     		ldr	r3, [sp, #12]
 3525 000c 002B     		cmp	r3, #0
 3526 000e 09D1     		bne	.L241
 3527              	.LBB170:
 3528              	.LBB171:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3529              		.loc 2 195 0 discriminator 1
 3530              		.syntax unified
 3531              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3532 0010 4FF05003 			mov r3, #80												
 3533 0014 83F31188 		msr basepri, r3											
 3534 0018 BFF36F8F 		isb														
 3535 001c BFF34F8F 		dsb														
 3536              	
 3537              	@ 0 "" 2
 3538              		.thumb
 3539              		.syntax unified
 3540 0020 0593     		str	r3, [sp, #20]
 3541              	.L242:
 3542              	.LBE171:
 3543              	.LBE170:
 3544              		.loc 1 2992 0 discriminator 1
 3545 0022 FEE7     		b	.L242
 3546              	.L241:
2993:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2994:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
2995:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	the event groups implementation. */
2996:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != 0 );
 3547              		.loc 1 2996 0
 3548 0024 114B     		ldr	r3, .L245
 3549 0026 1B68     		ldr	r3, [r3]
 3550 0028 002B     		cmp	r3, #0
 3551 002a 09D1     		bne	.L243
 3552              	.LBB172:
 3553              	.LBB173:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3554              		.loc 2 195 0 discriminator 1
 3555              		.syntax unified
 3556              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3557 002c 4FF05003 			mov r3, #80												
 3558 0030 83F31188 		msr basepri, r3											
 3559 0034 BFF36F8F 		isb														
 3560 0038 BFF34F8F 		dsb														
 3561              	
 3562              	@ 0 "" 2
 3563              		.thumb
 3564              		.syntax unified
 3565 003c 0493     		str	r3, [sp, #16]
 3566              	.L244:
 3567              	.LBE173:
 3568              	.LBE172:
 3569              		.loc 1 2996 0 discriminator 2
 3570 003e FEE7     		b	.L244
 3571              	.L243:
2997:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
2998:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Store the item value in the event list item.  It is safe to access the
2999:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	event list item here as interrupts won't access the event list item of a
3000:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	task that is not in the Blocked state. */
3001:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), xItemValue | taskEVENT_LIST_ITEM_VALUE
 3572              		.loc 1 3001 0
 3573 0040 0B4B     		ldr	r3, .L245+4
 3574 0042 1B68     		ldr	r3, [r3]
 3575 0044 029A     		ldr	r2, [sp, #8]
 3576 0046 42F00042 		orr	r2, r2, #-2147483648
 3577 004a 9A61     		str	r2, [r3, #24]
3002:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3003:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Place the event list item of the TCB at the end of the appropriate event
3004:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	list.  It is safe to access the event list here because it is part of an
3005:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	event group implementation - and interrupts don't access event groups
3006:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	directly (instead they access them indirectly by pending function calls to
3007:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	the task level). */
3008:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 3578              		.loc 1 3008 0
 3579 004c 084B     		ldr	r3, .L245+4
 3580 004e 1B68     		ldr	r3, [r3]
 3581 0050 1833     		adds	r3, r3, #24
 3582 0052 1946     		mov	r1, r3
 3583 0054 0398     		ldr	r0, [sp, #12]
 3584 0056 FFF7FEFF 		bl	vListInsertEnd
3009:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3010:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 3585              		.loc 1 3010 0
 3586 005a 0121     		movs	r1, #1
 3587 005c 0198     		ldr	r0, [sp, #4]
 3588 005e FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
3011:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 3589              		.loc 1 3011 0
 3590 0062 00BF     		nop
 3591 0064 07B0     		add	sp, sp, #28
 3592              	.LCFI70:
 3593              		.cfi_def_cfa_offset 4
 3594              		@ sp needed
 3595 0066 5DF804FB 		ldr	pc, [sp], #4
 3596              	.L246:
 3597 006a 00BF     		.align	2
 3598              	.L245:
 3599 006c 00000000 		.word	uxSchedulerSuspended
 3600 0070 00000000 		.word	pxCurrentTCB
 3601              		.cfi_endproc
 3602              	.LFE31:
 3604              		.section	.text.vTaskPlaceOnEventListRestricted,"ax",%progbits
 3605              		.align	1
 3606              		.global	vTaskPlaceOnEventListRestricted
 3607              		.syntax unified
 3608              		.thumb
 3609              		.thumb_func
 3610              		.fpu fpv4-sp-d16
 3612              	vTaskPlaceOnEventListRestricted:
 3613              	.LFB32:
3012:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3013:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3014:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TIMERS == 1 )
3015:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3016:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskPlaceOnEventListRestricted( List_t * const pxEventList, TickType_t xTicksToWait, const B
3017:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 3614              		.loc 1 3017 0
 3615              		.cfi_startproc
 3616              		@ args = 0, pretend = 0, frame = 24
 3617              		@ frame_needed = 0, uses_anonymous_args = 0
 3618 0000 00B5     		push	{lr}
 3619              	.LCFI71:
 3620              		.cfi_def_cfa_offset 4
 3621              		.cfi_offset 14, -4
 3622 0002 87B0     		sub	sp, sp, #28
 3623              	.LCFI72:
 3624              		.cfi_def_cfa_offset 32
 3625 0004 0390     		str	r0, [sp, #12]
 3626 0006 0291     		str	r1, [sp, #8]
 3627 0008 0192     		str	r2, [sp, #4]
3018:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( pxEventList );
 3628              		.loc 1 3018 0
 3629 000a 039B     		ldr	r3, [sp, #12]
 3630 000c 002B     		cmp	r3, #0
 3631 000e 09D1     		bne	.L248
 3632              	.LBB174:
 3633              	.LBB175:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3634              		.loc 2 195 0 discriminator 1
 3635              		.syntax unified
 3636              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3637 0010 4FF05003 			mov r3, #80												
 3638 0014 83F31188 		msr basepri, r3											
 3639 0018 BFF36F8F 		isb														
 3640 001c BFF34F8F 		dsb														
 3641              	
 3642              	@ 0 "" 2
 3643              		.thumb
 3644              		.syntax unified
 3645 0020 0593     		str	r3, [sp, #20]
 3646              	.L249:
 3647              	.LBE175:
 3648              	.LBE174:
 3649              		.loc 1 3018 0 discriminator 1
 3650 0022 FEE7     		b	.L249
 3651              	.L248:
3019:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3020:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* This function should not be called by application code hence the
3021:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		'Restricted' in its name.  It is not part of the public API.  It is
3022:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		designed for use by kernel code, and has special calling requirements -
3023:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		it should be called with the scheduler suspended. */
3024:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3025:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3026:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Place the event list item of the TCB in the appropriate event list.
3027:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		In this case it is assume that this is the only task that is going to
3028:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		be waiting on this event list, so the faster vListInsertEnd() function
3029:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		can be used in place of vListInsert. */
3030:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( pxEventList, &( pxCurrentTCB->xEventListItem ) );
 3652              		.loc 1 3030 0
 3653 0024 0A4B     		ldr	r3, .L251
 3654 0026 1B68     		ldr	r3, [r3]
 3655 0028 1833     		adds	r3, r3, #24
 3656 002a 1946     		mov	r1, r3
 3657 002c 0398     		ldr	r0, [sp, #12]
 3658 002e FFF7FEFF 		bl	vListInsertEnd
3031:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3032:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If the task should block indefinitely then set the block time to a
3033:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		value that will be recognised as an indefinite delay inside the
3034:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList() function. */
3035:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xWaitIndefinitely != pdFALSE )
 3659              		.loc 1 3035 0
 3660 0032 019B     		ldr	r3, [sp, #4]
 3661 0034 002B     		cmp	r3, #0
 3662 0036 02D0     		beq	.L250
3036:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3037:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTicksToWait = portMAX_DELAY;
 3663              		.loc 1 3037 0
 3664 0038 4FF0FF33 		mov	r3, #-1
 3665 003c 0293     		str	r3, [sp, #8]
 3666              	.L250:
3038:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3039:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3040:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		traceTASK_DELAY_UNTIL( ( xTickCount + xTicksToWait ) );
3041:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		prvAddCurrentTaskToDelayedList( xTicksToWait, xWaitIndefinitely );
 3667              		.loc 1 3041 0
 3668 003e 0199     		ldr	r1, [sp, #4]
 3669 0040 0298     		ldr	r0, [sp, #8]
 3670 0042 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
3042:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 3671              		.loc 1 3042 0
 3672 0046 00BF     		nop
 3673 0048 07B0     		add	sp, sp, #28
 3674              	.LCFI73:
 3675              		.cfi_def_cfa_offset 4
 3676              		@ sp needed
 3677 004a 5DF804FB 		ldr	pc, [sp], #4
 3678              	.L252:
 3679 004e 00BF     		.align	2
 3680              	.L251:
 3681 0050 00000000 		.word	pxCurrentTCB
 3682              		.cfi_endproc
 3683              	.LFE32:
 3685              		.section	.text.xTaskRemoveFromEventList,"ax",%progbits
 3686              		.align	1
 3687              		.global	xTaskRemoveFromEventList
 3688              		.syntax unified
 3689              		.thumb
 3690              		.thumb_func
 3691              		.fpu fpv4-sp-d16
 3693              	xTaskRemoveFromEventList:
 3694              	.LFB33:
3043:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3044:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TIMERS */
3045:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3046:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3047:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** BaseType_t xTaskRemoveFromEventList( const List_t * const pxEventList )
3048:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 3695              		.loc 1 3048 0
 3696              		.cfi_startproc
 3697              		@ args = 0, pretend = 0, frame = 24
 3698              		@ frame_needed = 0, uses_anonymous_args = 0
 3699 0000 00B5     		push	{lr}
 3700              	.LCFI74:
 3701              		.cfi_def_cfa_offset 4
 3702              		.cfi_offset 14, -4
 3703 0002 87B0     		sub	sp, sp, #28
 3704              	.LCFI75:
 3705              		.cfi_def_cfa_offset 32
 3706 0004 0190     		str	r0, [sp, #4]
3049:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3050:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3051:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3052:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED FROM A CRITICAL SECTION.  It can also be
3053:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	called from a critical section within an ISR. */
3054:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3055:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* The event list is sorted in priority order, so the first in the list can
3056:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	be removed as it is known to be the highest priority.  Remove the TCB from
3057:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	the delayed list, and add it to the ready list.
3058:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3059:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	If an event is for a queue that is locked then this function will never
3060:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	get called - the lock count on the queue will get modified instead.  This
3061:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	means exclusive access to the event list is guaranteed here.
3062:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3063:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	This function assumes that a check has already been made to ensure that
3064:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxEventList is not empty. */
3065:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_OWNER_OF_HEAD_ENTRY( pxEventList ); /*lint !e9079 void * is used as this 
 3707              		.loc 1 3065 0
 3708 0006 019B     		ldr	r3, [sp, #4]
 3709 0008 DB68     		ldr	r3, [r3, #12]
 3710 000a DB68     		ldr	r3, [r3, #12]
 3711 000c 0493     		str	r3, [sp, #16]
3066:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3712              		.loc 1 3066 0
 3713 000e 049B     		ldr	r3, [sp, #16]
 3714 0010 002B     		cmp	r3, #0
 3715 0012 09D1     		bne	.L254
 3716              	.LBB176:
 3717              	.LBB177:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3718              		.loc 2 195 0 discriminator 1
 3719              		.syntax unified
 3720              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3721 0014 4FF05003 			mov r3, #80												
 3722 0018 83F31188 		msr basepri, r3											
 3723 001c BFF36F8F 		isb														
 3724 0020 BFF34F8F 		dsb														
 3725              	
 3726              	@ 0 "" 2
 3727              		.thumb
 3728              		.syntax unified
 3729 0024 0393     		str	r3, [sp, #12]
 3730              	.L255:
 3731              	.LBE177:
 3732              	.LBE176:
 3733              		.loc 1 3066 0 discriminator 1
 3734 0026 FEE7     		b	.L255
 3735              	.L254:
3067:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xEventListItem ) );
 3736              		.loc 1 3067 0
 3737 0028 049B     		ldr	r3, [sp, #16]
 3738 002a 1833     		adds	r3, r3, #24
 3739 002c 1846     		mov	r0, r3
 3740 002e FFF7FEFF 		bl	uxListRemove
3068:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3069:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 3741              		.loc 1 3069 0
 3742 0032 1D4B     		ldr	r3, .L261
 3743 0034 1B68     		ldr	r3, [r3]
 3744 0036 002B     		cmp	r3, #0
 3745 0038 1CD1     		bne	.L256
3070:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3071:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 3746              		.loc 1 3071 0
 3747 003a 049B     		ldr	r3, [sp, #16]
 3748 003c 0433     		adds	r3, r3, #4
 3749 003e 1846     		mov	r0, r3
 3750 0040 FFF7FEFF 		bl	uxListRemove
3072:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		prvAddTaskToReadyList( pxUnblockedTCB );
 3751              		.loc 1 3072 0
 3752 0044 049B     		ldr	r3, [sp, #16]
 3753 0046 DB6A     		ldr	r3, [r3, #44]
 3754 0048 0122     		movs	r2, #1
 3755 004a 9A40     		lsls	r2, r2, r3
 3756 004c 174B     		ldr	r3, .L261+4
 3757 004e 1B68     		ldr	r3, [r3]
 3758 0050 1343     		orrs	r3, r3, r2
 3759 0052 164A     		ldr	r2, .L261+4
 3760 0054 1360     		str	r3, [r2]
 3761 0056 049B     		ldr	r3, [sp, #16]
 3762 0058 DA6A     		ldr	r2, [r3, #44]
 3763 005a 1346     		mov	r3, r2
 3764 005c 9B00     		lsls	r3, r3, #2
 3765 005e 1344     		add	r3, r3, r2
 3766 0060 9B00     		lsls	r3, r3, #2
 3767 0062 134A     		ldr	r2, .L261+8
 3768 0064 1A44     		add	r2, r2, r3
 3769 0066 049B     		ldr	r3, [sp, #16]
 3770 0068 0433     		adds	r3, r3, #4
 3771 006a 1946     		mov	r1, r3
 3772 006c 1046     		mov	r0, r2
 3773 006e FFF7FEFF 		bl	vListInsertEnd
 3774 0072 05E0     		b	.L257
 3775              	.L256:
3073:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3074:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
3075:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3076:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The delayed and ready lists cannot be accessed, so hold this task
3077:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pending until the scheduler is resumed. */
3078:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vListInsertEnd( &( xPendingReadyList ), &( pxUnblockedTCB->xEventListItem ) );
 3776              		.loc 1 3078 0
 3777 0074 049B     		ldr	r3, [sp, #16]
 3778 0076 1833     		adds	r3, r3, #24
 3779 0078 1946     		mov	r1, r3
 3780 007a 0E48     		ldr	r0, .L261+12
 3781 007c FFF7FEFF 		bl	vListInsertEnd
 3782              	.L257:
3079:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3080:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3081:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 3783              		.loc 1 3081 0
 3784 0080 049B     		ldr	r3, [sp, #16]
 3785 0082 DA6A     		ldr	r2, [r3, #44]
 3786 0084 0C4B     		ldr	r3, .L261+16
 3787 0086 1B68     		ldr	r3, [r3]
 3788 0088 DB6A     		ldr	r3, [r3, #44]
 3789 008a 9A42     		cmp	r2, r3
 3790 008c 05D9     		bls	.L258
3082:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3083:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Return true if the task removed from the event list has a higher
3084:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		priority than the calling task.  This allows the calling task to know if
3085:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		it should force a context switch now. */
3086:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xReturn = pdTRUE;
 3791              		.loc 1 3086 0
 3792 008e 0123     		movs	r3, #1
 3793 0090 0593     		str	r3, [sp, #20]
3087:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3088:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Mark that a yield is pending in case the user is not using the
3089:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		"xHigherPriorityTaskWoken" parameter to an ISR safe FreeRTOS function. */
3090:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 3794              		.loc 1 3090 0
 3795 0092 0A4B     		ldr	r3, .L261+20
 3796 0094 0122     		movs	r2, #1
 3797 0096 1A60     		str	r2, [r3]
 3798 0098 01E0     		b	.L259
 3799              	.L258:
3091:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3092:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
3093:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3094:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xReturn = pdFALSE;
 3800              		.loc 1 3094 0
 3801 009a 0023     		movs	r3, #0
 3802 009c 0593     		str	r3, [sp, #20]
 3803              	.L259:
3095:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3096:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3097:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( configUSE_TICKLESS_IDLE != 0 )
3098:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3099:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If a task is blocked on a kernel object then xNextTaskUnblockTime
3100:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		might be set to the blocked task's time out time.  If the task is
3101:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		unblocked for a reason other than a timeout xNextTaskUnblockTime is
3102:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		normally left unchanged, because it is automatically reset to a new
3103:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		value when the tick count equals xNextTaskUnblockTime.  However if
3104:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		tickless idling is used it might be more important to enter sleep mode
3105:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		at the earliest possible time - so reset xNextTaskUnblockTime here to
3106:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		ensure it is updated at the earliest possible time. */
3107:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		prvResetNextTaskUnblockTime();
3108:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3109:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
3110:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3111:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	return xReturn;
 3804              		.loc 1 3111 0
 3805 009e 059B     		ldr	r3, [sp, #20]
3112:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 3806              		.loc 1 3112 0
 3807 00a0 1846     		mov	r0, r3
 3808 00a2 07B0     		add	sp, sp, #28
 3809              	.LCFI76:
 3810              		.cfi_def_cfa_offset 4
 3811              		@ sp needed
 3812 00a4 5DF804FB 		ldr	pc, [sp], #4
 3813              	.L262:
 3814              		.align	2
 3815              	.L261:
 3816 00a8 00000000 		.word	uxSchedulerSuspended
 3817 00ac 00000000 		.word	uxTopReadyPriority
 3818 00b0 00000000 		.word	pxReadyTasksLists
 3819 00b4 00000000 		.word	xPendingReadyList
 3820 00b8 00000000 		.word	pxCurrentTCB
 3821 00bc 00000000 		.word	xYieldPending
 3822              		.cfi_endproc
 3823              	.LFE33:
 3825              		.section	.text.vTaskRemoveFromUnorderedEventList,"ax",%progbits
 3826              		.align	1
 3827              		.global	vTaskRemoveFromUnorderedEventList
 3828              		.syntax unified
 3829              		.thumb
 3830              		.thumb_func
 3831              		.fpu fpv4-sp-d16
 3833              	vTaskRemoveFromUnorderedEventList:
 3834              	.LFB34:
3113:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3114:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3115:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskRemoveFromUnorderedEventList( ListItem_t * pxEventListItem, const TickType_t xItemValue )
3116:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 3835              		.loc 1 3116 0
 3836              		.cfi_startproc
 3837              		@ args = 0, pretend = 0, frame = 24
 3838              		@ frame_needed = 0, uses_anonymous_args = 0
 3839 0000 00B5     		push	{lr}
 3840              	.LCFI77:
 3841              		.cfi_def_cfa_offset 4
 3842              		.cfi_offset 14, -4
 3843 0002 87B0     		sub	sp, sp, #28
 3844              	.LCFI78:
 3845              		.cfi_def_cfa_offset 32
 3846 0004 0190     		str	r0, [sp, #4]
 3847 0006 0091     		str	r1, [sp]
3117:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TCB_t *pxUnblockedTCB;
3118:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3119:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* THIS FUNCTION MUST BE CALLED WITH THE SCHEDULER SUSPENDED.  It is used by
3120:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	the event flags implementation. */
3121:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( uxSchedulerSuspended != pdFALSE );
 3848              		.loc 1 3121 0
 3849 0008 274B     		ldr	r3, .L270
 3850 000a 1B68     		ldr	r3, [r3]
 3851 000c 002B     		cmp	r3, #0
 3852 000e 09D1     		bne	.L264
 3853              	.LBB178:
 3854              	.LBB179:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3855              		.loc 2 195 0 discriminator 1
 3856              		.syntax unified
 3857              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3858 0010 4FF05003 			mov r3, #80												
 3859 0014 83F31188 		msr basepri, r3											
 3860 0018 BFF36F8F 		isb														
 3861 001c BFF34F8F 		dsb														
 3862              	
 3863              	@ 0 "" 2
 3864              		.thumb
 3865              		.syntax unified
 3866 0020 0493     		str	r3, [sp, #16]
 3867              	.L265:
 3868              	.LBE179:
 3869              	.LBE178:
 3870              		.loc 1 3121 0 discriminator 1
 3871 0022 FEE7     		b	.L265
 3872              	.L264:
3122:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3123:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Store the new item value in the event list. */
3124:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( pxEventListItem, xItemValue | taskEVENT_LIST_ITEM_VALUE_IN_USE );
 3873              		.loc 1 3124 0
 3874 0024 009B     		ldr	r3, [sp]
 3875 0026 43F00042 		orr	r2, r3, #-2147483648
 3876 002a 019B     		ldr	r3, [sp, #4]
 3877 002c 1A60     		str	r2, [r3]
3125:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3126:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Remove the event list form the event flag.  Interrupts do not access
3127:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	event flags. */
3128:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxUnblockedTCB = listGET_LIST_ITEM_OWNER( pxEventListItem ); /*lint !e9079 void * is used as this 
 3878              		.loc 1 3128 0
 3879 002e 019B     		ldr	r3, [sp, #4]
 3880 0030 DB68     		ldr	r3, [r3, #12]
 3881 0032 0593     		str	r3, [sp, #20]
3129:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( pxUnblockedTCB );
 3882              		.loc 1 3129 0
 3883 0034 059B     		ldr	r3, [sp, #20]
 3884 0036 002B     		cmp	r3, #0
 3885 0038 09D1     		bne	.L266
 3886              	.LBB180:
 3887              	.LBB181:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3888              		.loc 2 195 0 discriminator 1
 3889              		.syntax unified
 3890              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3891 003a 4FF05003 			mov r3, #80												
 3892 003e 83F31188 		msr basepri, r3											
 3893 0042 BFF36F8F 		isb														
 3894 0046 BFF34F8F 		dsb														
 3895              	
 3896              	@ 0 "" 2
 3897              		.thumb
 3898              		.syntax unified
 3899 004a 0393     		str	r3, [sp, #12]
 3900              	.L267:
 3901              	.LBE181:
 3902              	.LBE180:
 3903              		.loc 1 3129 0 discriminator 2
 3904 004c FEE7     		b	.L267
 3905              	.L266:
3130:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( pxEventListItem );
 3906              		.loc 1 3130 0
 3907 004e 0198     		ldr	r0, [sp, #4]
 3908 0050 FFF7FEFF 		bl	uxListRemove
3131:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3132:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the delayed list and add it to the ready list.  The
3133:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	scheduler is suspended so interrupts will not be accessing the ready
3134:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	lists. */
3135:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	( void ) uxListRemove( &( pxUnblockedTCB->xStateListItem ) );
 3909              		.loc 1 3135 0
 3910 0054 059B     		ldr	r3, [sp, #20]
 3911 0056 0433     		adds	r3, r3, #4
 3912 0058 1846     		mov	r0, r3
 3913 005a FFF7FEFF 		bl	uxListRemove
3136:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	prvAddTaskToReadyList( pxUnblockedTCB );
 3914              		.loc 1 3136 0
 3915 005e 059B     		ldr	r3, [sp, #20]
 3916 0060 DB6A     		ldr	r3, [r3, #44]
 3917 0062 0122     		movs	r2, #1
 3918 0064 9A40     		lsls	r2, r2, r3
 3919 0066 114B     		ldr	r3, .L270+4
 3920 0068 1B68     		ldr	r3, [r3]
 3921 006a 1343     		orrs	r3, r3, r2
 3922 006c 0F4A     		ldr	r2, .L270+4
 3923 006e 1360     		str	r3, [r2]
 3924 0070 059B     		ldr	r3, [sp, #20]
 3925 0072 DA6A     		ldr	r2, [r3, #44]
 3926 0074 1346     		mov	r3, r2
 3927 0076 9B00     		lsls	r3, r3, #2
 3928 0078 1344     		add	r3, r3, r2
 3929 007a 9B00     		lsls	r3, r3, #2
 3930 007c 0C4A     		ldr	r2, .L270+8
 3931 007e 1A44     		add	r2, r2, r3
 3932 0080 059B     		ldr	r3, [sp, #20]
 3933 0082 0433     		adds	r3, r3, #4
 3934 0084 1946     		mov	r1, r3
 3935 0086 1046     		mov	r0, r2
 3936 0088 FFF7FEFF 		bl	vListInsertEnd
3137:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3138:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( pxUnblockedTCB->uxPriority > pxCurrentTCB->uxPriority )
 3937              		.loc 1 3138 0
 3938 008c 059B     		ldr	r3, [sp, #20]
 3939 008e DA6A     		ldr	r2, [r3, #44]
 3940 0090 084B     		ldr	r3, .L270+12
 3941 0092 1B68     		ldr	r3, [r3]
 3942 0094 DB6A     		ldr	r3, [r3, #44]
 3943 0096 9A42     		cmp	r2, r3
 3944 0098 02D9     		bls	.L269
3139:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3140:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The unblocked task has a priority above that of the calling task, so
3141:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		a context switch is required.  This function is called with the
3142:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		scheduler suspended so xYieldPending is set so the context switch
3143:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		occurs immediately that the scheduler is resumed (unsuspended). */
3144:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xYieldPending = pdTRUE;
 3945              		.loc 1 3144 0
 3946 009a 074B     		ldr	r3, .L270+16
 3947 009c 0122     		movs	r2, #1
 3948 009e 1A60     		str	r2, [r3]
 3949              	.L269:
3145:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3146:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 3950              		.loc 1 3146 0
 3951 00a0 00BF     		nop
 3952 00a2 07B0     		add	sp, sp, #28
 3953              	.LCFI79:
 3954              		.cfi_def_cfa_offset 4
 3955              		@ sp needed
 3956 00a4 5DF804FB 		ldr	pc, [sp], #4
 3957              	.L271:
 3958              		.align	2
 3959              	.L270:
 3960 00a8 00000000 		.word	uxSchedulerSuspended
 3961 00ac 00000000 		.word	uxTopReadyPriority
 3962 00b0 00000000 		.word	pxReadyTasksLists
 3963 00b4 00000000 		.word	pxCurrentTCB
 3964 00b8 00000000 		.word	xYieldPending
 3965              		.cfi_endproc
 3966              	.LFE34:
 3968              		.section	.text.vTaskSetTimeOutState,"ax",%progbits
 3969              		.align	1
 3970              		.global	vTaskSetTimeOutState
 3971              		.syntax unified
 3972              		.thumb
 3973              		.thumb_func
 3974              		.fpu fpv4-sp-d16
 3976              	vTaskSetTimeOutState:
 3977              	.LFB35:
3147:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3148:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3149:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskSetTimeOutState( TimeOut_t * const pxTimeOut )
3150:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 3978              		.loc 1 3150 0
 3979              		.cfi_startproc
 3980              		@ args = 0, pretend = 0, frame = 16
 3981              		@ frame_needed = 0, uses_anonymous_args = 0
 3982 0000 00B5     		push	{lr}
 3983              	.LCFI80:
 3984              		.cfi_def_cfa_offset 4
 3985              		.cfi_offset 14, -4
 3986 0002 85B0     		sub	sp, sp, #20
 3987              	.LCFI81:
 3988              		.cfi_def_cfa_offset 24
 3989 0004 0190     		str	r0, [sp, #4]
3151:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 3990              		.loc 1 3151 0
 3991 0006 019B     		ldr	r3, [sp, #4]
 3992 0008 002B     		cmp	r3, #0
 3993 000a 09D1     		bne	.L273
 3994              	.LBB182:
 3995              	.LBB183:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 3996              		.loc 2 195 0 discriminator 1
 3997              		.syntax unified
 3998              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 3999 000c 4FF05003 			mov r3, #80												
 4000 0010 83F31188 		msr basepri, r3											
 4001 0014 BFF36F8F 		isb														
 4002 0018 BFF34F8F 		dsb														
 4003              	
 4004              	@ 0 "" 2
 4005              		.thumb
 4006              		.syntax unified
 4007 001c 0393     		str	r3, [sp, #12]
 4008              	.L274:
 4009              	.LBE183:
 4010              	.LBE182:
 4011              		.loc 1 3151 0 discriminator 1
 4012 001e FEE7     		b	.L274
 4013              	.L273:
3152:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4014              		.loc 1 3152 0
 4015 0020 FFF7FEFF 		bl	vPortEnterCritical
3153:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3154:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xOverflowCount = xNumOfOverflows;
 4016              		.loc 1 3154 0
 4017 0024 064B     		ldr	r3, .L275
 4018 0026 1A68     		ldr	r2, [r3]
 4019 0028 019B     		ldr	r3, [sp, #4]
 4020 002a 1A60     		str	r2, [r3]
3155:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTimeOut->xTimeOnEntering = xTickCount;
 4021              		.loc 1 3155 0
 4022 002c 054B     		ldr	r3, .L275+4
 4023 002e 1A68     		ldr	r2, [r3]
 4024 0030 019B     		ldr	r3, [sp, #4]
 4025 0032 5A60     		str	r2, [r3, #4]
3156:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3157:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 4026              		.loc 1 3157 0
 4027 0034 FFF7FEFF 		bl	vPortExitCritical
3158:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 4028              		.loc 1 3158 0
 4029 0038 00BF     		nop
 4030 003a 05B0     		add	sp, sp, #20
 4031              	.LCFI82:
 4032              		.cfi_def_cfa_offset 4
 4033              		@ sp needed
 4034 003c 5DF804FB 		ldr	pc, [sp], #4
 4035              	.L276:
 4036              		.align	2
 4037              	.L275:
 4038 0040 00000000 		.word	xNumOfOverflows
 4039 0044 00000000 		.word	xTickCount
 4040              		.cfi_endproc
 4041              	.LFE35:
 4043              		.section	.text.vTaskInternalSetTimeOutState,"ax",%progbits
 4044              		.align	1
 4045              		.global	vTaskInternalSetTimeOutState
 4046              		.syntax unified
 4047              		.thumb
 4048              		.thumb_func
 4049              		.fpu fpv4-sp-d16
 4051              	vTaskInternalSetTimeOutState:
 4052              	.LFB36:
3159:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3160:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3161:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskInternalSetTimeOutState( TimeOut_t * const pxTimeOut )
3162:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 4053              		.loc 1 3162 0
 4054              		.cfi_startproc
 4055              		@ args = 0, pretend = 0, frame = 8
 4056              		@ frame_needed = 0, uses_anonymous_args = 0
 4057              		@ link register save eliminated.
 4058 0000 82B0     		sub	sp, sp, #8
 4059              	.LCFI83:
 4060              		.cfi_def_cfa_offset 8
 4061 0002 0190     		str	r0, [sp, #4]
3163:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* For internal use only as it does not use a critical section. */
3164:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xOverflowCount = xNumOfOverflows;
 4062              		.loc 1 3164 0
 4063 0004 054B     		ldr	r3, .L278
 4064 0006 1A68     		ldr	r2, [r3]
 4065 0008 019B     		ldr	r3, [sp, #4]
 4066 000a 1A60     		str	r2, [r3]
3165:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxTimeOut->xTimeOnEntering = xTickCount;
 4067              		.loc 1 3165 0
 4068 000c 044B     		ldr	r3, .L278+4
 4069 000e 1A68     		ldr	r2, [r3]
 4070 0010 019B     		ldr	r3, [sp, #4]
 4071 0012 5A60     		str	r2, [r3, #4]
3166:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 4072              		.loc 1 3166 0
 4073 0014 00BF     		nop
 4074 0016 02B0     		add	sp, sp, #8
 4075              	.LCFI84:
 4076              		.cfi_def_cfa_offset 0
 4077              		@ sp needed
 4078 0018 7047     		bx	lr
 4079              	.L279:
 4080 001a 00BF     		.align	2
 4081              	.L278:
 4082 001c 00000000 		.word	xNumOfOverflows
 4083 0020 00000000 		.word	xTickCount
 4084              		.cfi_endproc
 4085              	.LFE36:
 4087              		.section	.text.xTaskCheckForTimeOut,"ax",%progbits
 4088              		.align	1
 4089              		.global	xTaskCheckForTimeOut
 4090              		.syntax unified
 4091              		.thumb
 4092              		.thumb_func
 4093              		.fpu fpv4-sp-d16
 4095              	xTaskCheckForTimeOut:
 4096              	.LFB37:
3167:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3168:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3169:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** BaseType_t xTaskCheckForTimeOut( TimeOut_t * const pxTimeOut, TickType_t * const pxTicksToWait )
3170:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 4097              		.loc 1 3170 0
 4098              		.cfi_startproc
 4099              		@ args = 0, pretend = 0, frame = 32
 4100              		@ frame_needed = 0, uses_anonymous_args = 0
 4101 0000 00B5     		push	{lr}
 4102              	.LCFI85:
 4103              		.cfi_def_cfa_offset 4
 4104              		.cfi_offset 14, -4
 4105 0002 89B0     		sub	sp, sp, #36
 4106              	.LCFI86:
 4107              		.cfi_def_cfa_offset 40
 4108 0004 0190     		str	r0, [sp, #4]
 4109 0006 0091     		str	r1, [sp]
3171:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** BaseType_t xReturn;
3172:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3173:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTimeOut );
 4110              		.loc 1 3173 0
 4111 0008 019B     		ldr	r3, [sp, #4]
 4112 000a 002B     		cmp	r3, #0
 4113 000c 09D1     		bne	.L281
 4114              	.LBB184:
 4115              	.LBB185:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4116              		.loc 2 195 0 discriminator 1
 4117              		.syntax unified
 4118              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 4119 000e 4FF05003 			mov r3, #80												
 4120 0012 83F31188 		msr basepri, r3											
 4121 0016 BFF36F8F 		isb														
 4122 001a BFF34F8F 		dsb														
 4123              	
 4124              	@ 0 "" 2
 4125              		.thumb
 4126              		.syntax unified
 4127 001e 0493     		str	r3, [sp, #16]
 4128              	.L282:
 4129              	.LBE185:
 4130              	.LBE184:
 4131              		.loc 1 3173 0 discriminator 1
 4132 0020 FEE7     		b	.L282
 4133              	.L281:
3174:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configASSERT( pxTicksToWait );
 4134              		.loc 1 3174 0
 4135 0022 009B     		ldr	r3, [sp]
 4136 0024 002B     		cmp	r3, #0
 4137 0026 09D1     		bne	.L283
 4138              	.LBB186:
 4139              	.LBB187:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 4140              		.loc 2 195 0 discriminator 1
 4141              		.syntax unified
 4142              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 4143 0028 4FF05003 			mov r3, #80												
 4144 002c 83F31188 		msr basepri, r3											
 4145 0030 BFF36F8F 		isb														
 4146 0034 BFF34F8F 		dsb														
 4147              	
 4148              	@ 0 "" 2
 4149              		.thumb
 4150              		.syntax unified
 4151 0038 0393     		str	r3, [sp, #12]
 4152              	.L284:
 4153              	.LBE187:
 4154              	.LBE186:
 4155              		.loc 1 3174 0 discriminator 2
 4156 003a FEE7     		b	.L284
 4157              	.L283:
3175:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3176:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	taskENTER_CRITICAL();
 4158              		.loc 1 3176 0
 4159 003c FFF7FEFF 		bl	vPortEnterCritical
 4160              	.LBB188:
3177:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3178:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Minor optimisation.  The tick count cannot change in this block. */
3179:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		const TickType_t xConstTickCount = xTickCount;
 4161              		.loc 1 3179 0
 4162 0040 1D4B     		ldr	r3, .L290
 4163 0042 1B68     		ldr	r3, [r3]
 4164 0044 0693     		str	r3, [sp, #24]
3180:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		const TickType_t xElapsedTime = xConstTickCount - pxTimeOut->xTimeOnEntering;
 4165              		.loc 1 3180 0
 4166 0046 019B     		ldr	r3, [sp, #4]
 4167 0048 5B68     		ldr	r3, [r3, #4]
 4168 004a 069A     		ldr	r2, [sp, #24]
 4169 004c D31A     		subs	r3, r2, r3
 4170 004e 0593     		str	r3, [sp, #20]
3181:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3182:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if( INCLUDE_xTaskAbortDelay == 1 )
3183:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucDelayAborted != ( uint8_t ) pdFALSE )
3184:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3185:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The delay was aborted, which is not the same as a time out,
3186:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				but has the same result. */
3187:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucDelayAborted = pdFALSE;
3188:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
3189:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3190:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
3191:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
3192:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3193:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( INCLUDE_vTaskSuspend == 1 )
3194:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( *pxTicksToWait == portMAX_DELAY )
 4171              		.loc 1 3194 0
 4172 0050 009B     		ldr	r3, [sp]
 4173 0052 1B68     		ldr	r3, [r3]
 4174 0054 B3F1FF3F 		cmp	r3, #-1
 4175 0058 02D1     		bne	.L285
3195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3196:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* If INCLUDE_vTaskSuspend is set to 1 and the block time
3197:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				specified is the maximum block time then the task should block
3198:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				indefinitely, and therefore never time out. */
3199:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
 4176              		.loc 1 3199 0
 4177 005a 0023     		movs	r3, #0
 4178 005c 0793     		str	r3, [sp, #28]
 4179 005e 23E0     		b	.L286
 4180              	.L285:
3200:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3201:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
3202:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
3203:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3204:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( ( xNumOfOverflows != pxTimeOut->xOverflowCount ) && ( xConstTickCount >= pxTimeOut->xTimeOnEn
 4181              		.loc 1 3204 0
 4182 0060 019B     		ldr	r3, [sp, #4]
 4183 0062 1A68     		ldr	r2, [r3]
 4184 0064 154B     		ldr	r3, .L290+4
 4185 0066 1B68     		ldr	r3, [r3]
 4186 0068 9A42     		cmp	r2, r3
 4187 006a 07D0     		beq	.L287
 4188              		.loc 1 3204 0 is_stmt 0 discriminator 1
 4189 006c 019B     		ldr	r3, [sp, #4]
 4190 006e 5B68     		ldr	r3, [r3, #4]
 4191 0070 069A     		ldr	r2, [sp, #24]
 4192 0072 9A42     		cmp	r2, r3
 4193 0074 02D3     		bcc	.L287
3205:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3206:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* The tick count is greater than the time at which
3207:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeout() was called, but has also overflowed since
3208:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vTaskSetTimeOut() was called.  It must have wrapped all the way
3209:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			around and gone past again. This passed since vTaskSetTimeout()
3210:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			was called. */
3211:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4194              		.loc 1 3211 0 is_stmt 1
 4195 0076 0123     		movs	r3, #1
 4196 0078 0793     		str	r3, [sp, #28]
 4197 007a 15E0     		b	.L286
 4198              	.L287:
3212:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3213:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else if( xElapsedTime < *pxTicksToWait ) /*lint !e961 Explicit casting is only redundant with som
 4199              		.loc 1 3213 0
 4200 007c 009B     		ldr	r3, [sp]
 4201 007e 1B68     		ldr	r3, [r3]
 4202 0080 059A     		ldr	r2, [sp, #20]
 4203 0082 9A42     		cmp	r2, r3
 4204 0084 0BD2     		bcs	.L288
3214:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3215:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Not a genuine timeout. Adjust parameters for time remaining. */
3216:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait -= xElapsedTime;
 4205              		.loc 1 3216 0
 4206 0086 009B     		ldr	r3, [sp]
 4207 0088 1A68     		ldr	r2, [r3]
 4208 008a 059B     		ldr	r3, [sp, #20]
 4209 008c D21A     		subs	r2, r2, r3
 4210 008e 009B     		ldr	r3, [sp]
 4211 0090 1A60     		str	r2, [r3]
3217:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vTaskInternalSetTimeOutState( pxTimeOut );
 4212              		.loc 1 3217 0
 4213 0092 0198     		ldr	r0, [sp, #4]
 4214 0094 FFF7FEFF 		bl	vTaskInternalSetTimeOutState
3218:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = pdFALSE;
 4215              		.loc 1 3218 0
 4216 0098 0023     		movs	r3, #0
 4217 009a 0793     		str	r3, [sp, #28]
 4218 009c 04E0     		b	.L286
 4219              	.L288:
3219:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3220:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
3221:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3222:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			*pxTicksToWait = 0;
 4220              		.loc 1 3222 0
 4221 009e 009B     		ldr	r3, [sp]
 4222 00a0 0022     		movs	r2, #0
 4223 00a2 1A60     		str	r2, [r3]
3223:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = pdTRUE;
 4224              		.loc 1 3223 0
 4225 00a4 0123     		movs	r3, #1
 4226 00a6 0793     		str	r3, [sp, #28]
 4227              	.L286:
 4228              	.LBE188:
3224:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3225:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3226:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	taskEXIT_CRITICAL();
 4229              		.loc 1 3226 0
 4230 00a8 FFF7FEFF 		bl	vPortExitCritical
3227:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3228:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	return xReturn;
 4231              		.loc 1 3228 0
 4232 00ac 079B     		ldr	r3, [sp, #28]
3229:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 4233              		.loc 1 3229 0
 4234 00ae 1846     		mov	r0, r3
 4235 00b0 09B0     		add	sp, sp, #36
 4236              	.LCFI87:
 4237              		.cfi_def_cfa_offset 4
 4238              		@ sp needed
 4239 00b2 5DF804FB 		ldr	pc, [sp], #4
 4240              	.L291:
 4241 00b6 00BF     		.align	2
 4242              	.L290:
 4243 00b8 00000000 		.word	xTickCount
 4244 00bc 00000000 		.word	xNumOfOverflows
 4245              		.cfi_endproc
 4246              	.LFE37:
 4248              		.section	.text.vTaskMissedYield,"ax",%progbits
 4249              		.align	1
 4250              		.global	vTaskMissedYield
 4251              		.syntax unified
 4252              		.thumb
 4253              		.thumb_func
 4254              		.fpu fpv4-sp-d16
 4256              	vTaskMissedYield:
 4257              	.LFB38:
3230:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3231:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3232:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** void vTaskMissedYield( void )
3233:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 4258              		.loc 1 3233 0
 4259              		.cfi_startproc
 4260              		@ args = 0, pretend = 0, frame = 0
 4261              		@ frame_needed = 0, uses_anonymous_args = 0
 4262              		@ link register save eliminated.
3234:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	xYieldPending = pdTRUE;
 4263              		.loc 1 3234 0
 4264 0000 024B     		ldr	r3, .L293
 4265 0002 0122     		movs	r2, #1
 4266 0004 1A60     		str	r2, [r3]
3235:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 4267              		.loc 1 3235 0
 4268 0006 00BF     		nop
 4269 0008 7047     		bx	lr
 4270              	.L294:
 4271 000a 00BF     		.align	2
 4272              	.L293:
 4273 000c 00000000 		.word	xYieldPending
 4274              		.cfi_endproc
 4275              	.LFE38:
 4277              		.section	.text.uxTaskGetTaskNumber,"ax",%progbits
 4278              		.align	1
 4279              		.global	uxTaskGetTaskNumber
 4280              		.syntax unified
 4281              		.thumb
 4282              		.thumb_func
 4283              		.fpu fpv4-sp-d16
 4285              	uxTaskGetTaskNumber:
 4286              	.LFB39:
3236:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3237:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3238:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3239:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3240:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetTaskNumber( TaskHandle_t xTask )
3241:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 4287              		.loc 1 3241 0
 4288              		.cfi_startproc
 4289              		@ args = 0, pretend = 0, frame = 16
 4290              		@ frame_needed = 0, uses_anonymous_args = 0
 4291              		@ link register save eliminated.
 4292 0000 84B0     		sub	sp, sp, #16
 4293              	.LCFI88:
 4294              		.cfi_def_cfa_offset 16
 4295 0002 0190     		str	r0, [sp, #4]
3242:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3243:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t const *pxTCB;
3244:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3245:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
 4296              		.loc 1 3245 0
 4297 0004 019B     		ldr	r3, [sp, #4]
 4298 0006 002B     		cmp	r3, #0
 4299 0008 05D0     		beq	.L296
3246:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3247:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
 4300              		.loc 1 3247 0
 4301 000a 019B     		ldr	r3, [sp, #4]
 4302 000c 0293     		str	r3, [sp, #8]
3248:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			uxReturn = pxTCB->uxTaskNumber;
 4303              		.loc 1 3248 0
 4304 000e 029B     		ldr	r3, [sp, #8]
 4305 0010 5B6C     		ldr	r3, [r3, #68]
 4306 0012 0393     		str	r3, [sp, #12]
 4307 0014 01E0     		b	.L297
 4308              	.L296:
3249:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3250:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
3251:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3252:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			uxReturn = 0U;
 4309              		.loc 1 3252 0
 4310 0016 0023     		movs	r3, #0
 4311 0018 0393     		str	r3, [sp, #12]
 4312              	.L297:
3253:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3254:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3255:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return uxReturn;
 4313              		.loc 1 3255 0
 4314 001a 039B     		ldr	r3, [sp, #12]
3256:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 4315              		.loc 1 3256 0
 4316 001c 1846     		mov	r0, r3
 4317 001e 04B0     		add	sp, sp, #16
 4318              	.LCFI89:
 4319              		.cfi_def_cfa_offset 0
 4320              		@ sp needed
 4321 0020 7047     		bx	lr
 4322              		.cfi_endproc
 4323              	.LFE39:
 4325              		.section	.text.vTaskSetTaskNumber,"ax",%progbits
 4326              		.align	1
 4327              		.global	vTaskSetTaskNumber
 4328              		.syntax unified
 4329              		.thumb
 4330              		.thumb_func
 4331              		.fpu fpv4-sp-d16
 4333              	vTaskSetTaskNumber:
 4334              	.LFB40:
3257:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3258:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3259:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3260:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3261:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3262:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3263:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskSetTaskNumber( TaskHandle_t xTask, const UBaseType_t uxHandle )
3264:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 4335              		.loc 1 3264 0
 4336              		.cfi_startproc
 4337              		@ args = 0, pretend = 0, frame = 16
 4338              		@ frame_needed = 0, uses_anonymous_args = 0
 4339              		@ link register save eliminated.
 4340 0000 84B0     		sub	sp, sp, #16
 4341              	.LCFI90:
 4342              		.cfi_def_cfa_offset 16
 4343 0002 0190     		str	r0, [sp, #4]
 4344 0004 0091     		str	r1, [sp]
3265:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
3266:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3267:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xTask != NULL )
 4345              		.loc 1 3267 0
 4346 0006 019B     		ldr	r3, [sp, #4]
 4347 0008 002B     		cmp	r3, #0
 4348 000a 04D0     		beq	.L301
3268:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3269:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB = xTask;
 4349              		.loc 1 3269 0
 4350 000c 019B     		ldr	r3, [sp, #4]
 4351 000e 0393     		str	r3, [sp, #12]
3270:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB->uxTaskNumber = uxHandle;
 4352              		.loc 1 3270 0
 4353 0010 039B     		ldr	r3, [sp, #12]
 4354 0012 009A     		ldr	r2, [sp]
 4355 0014 5A64     		str	r2, [r3, #68]
 4356              	.L301:
3271:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3272:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 4357              		.loc 1 3272 0
 4358 0016 00BF     		nop
 4359 0018 04B0     		add	sp, sp, #16
 4360              	.LCFI91:
 4361              		.cfi_def_cfa_offset 0
 4362              		@ sp needed
 4363 001a 7047     		bx	lr
 4364              		.cfi_endproc
 4365              	.LFE40:
 4367              		.section	.text.prvIdleTask,"ax",%progbits
 4368              		.align	1
 4369              		.syntax unified
 4370              		.thumb
 4371              		.thumb_func
 4372              		.fpu fpv4-sp-d16
 4374              	prvIdleTask:
 4375              	.LFB41:
3273:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3274:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3275:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3276:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*
3277:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * -----------------------------------------------------------
3278:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * The Idle task.
3279:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * ----------------------------------------------------------
3280:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
3281:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * The portTASK_FUNCTION() macro is used to allow port/compiler specific
3282:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * language extensions.  The equivalent prototype for this function is:
3283:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
3284:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  * void prvIdleTask( void *pvParameters );
3285:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  *
3286:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c ****  */
3287:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static portTASK_FUNCTION( prvIdleTask, pvParameters )
3288:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 4376              		.loc 1 3288 0
 4377              		.cfi_startproc
 4378              		@ args = 0, pretend = 0, frame = 8
 4379              		@ frame_needed = 0, uses_anonymous_args = 0
 4380 0000 00B5     		push	{lr}
 4381              	.LCFI92:
 4382              		.cfi_def_cfa_offset 4
 4383              		.cfi_offset 14, -4
 4384 0002 83B0     		sub	sp, sp, #12
 4385              	.LCFI93:
 4386              		.cfi_def_cfa_offset 16
 4387 0004 0190     		str	r0, [sp, #4]
 4388              	.L304:
3289:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Stop warnings. */
3290:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	( void ) pvParameters;
3291:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3292:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/** THIS IS THE RTOS IDLE TASK - WHICH IS CREATED AUTOMATICALLY WHEN THE
3293:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	SCHEDULER IS STARTED. **/
3294:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3295:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* In case a task that has a secure context deletes itself, in which case
3296:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	the idle task is responsible for deleting the task's secure context, if
3297:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	any. */
3298:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	portTASK_CALLS_SECURE_FUNCTIONS();
3299:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3300:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	for( ;; )
3301:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3302:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* See if any tasks have deleted themselves - if so then the idle task
3303:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		is responsible for freeing the deleted task's TCB and stack. */
3304:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		prvCheckTasksWaitingTermination();
 4389              		.loc 1 3304 0
 4390 0006 FFF7FEFF 		bl	prvCheckTasksWaitingTermination
3305:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3306:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_PREEMPTION == 0 )
3307:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3308:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If we are not using preemption we keep forcing a task switch to
3309:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			see if any other task has become available.  If we are using
3310:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			preemption we don't need to do this as any task becoming available
3311:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			will automatically get the processor anyway. */
3312:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskYIELD();
3313:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3314:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_PREEMPTION */
3315:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3316:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) )
3317:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3318:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* When using preemption tasks of equal priority will be
3319:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			timesliced.  If a task that is sharing the idle priority is ready
3320:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			to run then the idle task should yield before the end of the
3321:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			timeslice.
3322:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3323:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			A critical region is not required here as we are just reading from
3324:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			the list, and an occasional incorrect value will not matter.  If
3325:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			the ready list at the idle priority contains more than one task
3326:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			then a task other than the idle task is ready to execute. */
3327:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &( pxReadyTasksLists[ tskIDLE_PRIORITY ] ) ) > ( UBaseType_t ) 1 )
 4391              		.loc 1 3327 0
 4392 000a 064B     		ldr	r3, .L305
 4393 000c 1B68     		ldr	r3, [r3]
 4394 000e 012B     		cmp	r3, #1
 4395 0010 F9D9     		bls	.L304
3328:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3329:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				taskYIELD();
 4396              		.loc 1 3329 0
 4397 0012 054B     		ldr	r3, .L305+4
 4398 0014 4FF08052 		mov	r2, #268435456
 4399 0018 1A60     		str	r2, [r3]
 4400              		.syntax unified
 4401              	@ 3329 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 4402 001a BFF34F8F 		dsb
 4403              	@ 0 "" 2
 4404              	@ 3329 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 4405 001e BFF36F8F 		isb
 4406              	@ 0 "" 2
3304:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 4407              		.loc 1 3304 0
 4408              		.thumb
 4409              		.syntax unified
 4410 0022 F0E7     		b	.L304
 4411              	.L306:
 4412              		.align	2
 4413              	.L305:
 4414 0024 00000000 		.word	pxReadyTasksLists
 4415 0028 04ED00E0 		.word	-536810236
 4416              		.cfi_endproc
 4417              	.LFE41:
 4419              		.section	.text.prvInitialiseTaskLists,"ax",%progbits
 4420              		.align	1
 4421              		.syntax unified
 4422              		.thumb
 4423              		.thumb_func
 4424              		.fpu fpv4-sp-d16
 4426              	prvInitialiseTaskLists:
 4427              	.LFB42:
3330:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3331:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
3332:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3333:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3334:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3335:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3336:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* ( ( configUSE_PREEMPTION == 1 ) && ( configIDLE_SHOULD_YIELD == 1 ) ) */
3337:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3338:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_IDLE_HOOK == 1 )
3339:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3340:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			extern void vApplicationIdleHook( void );
3341:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3342:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Call the user defined function from within the idle task.  This
3343:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			allows the application designer to add background functionality
3344:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			without the overhead of a separate task.
3345:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			NOTE: vApplicationIdleHook() MUST NOT, UNDER ANY CIRCUMSTANCES,
3346:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			CALL A FUNCTION THAT MIGHT BLOCK. */
3347:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vApplicationIdleHook();
3348:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3349:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_IDLE_HOOK */
3350:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3351:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* This conditional compilation should use inequality to 0, not equality
3352:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		to 1.  This is to ensure portSUPPRESS_TICKS_AND_SLEEP() is called when
3353:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		user defined low power mode	implementations require
3354:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configUSE_TICKLESS_IDLE to be set to a value other than 1. */
3355:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_TICKLESS_IDLE != 0 )
3356:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3357:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		TickType_t xExpectedIdleTime;
3358:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3359:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* It is not desirable to suspend then resume the scheduler on
3360:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			each iteration of the idle task.  Therefore, a preliminary
3361:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			test of the expected idle time is performed without the
3362:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			scheduler suspended.  The result here is not necessarily
3363:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			valid. */
3364:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xExpectedIdleTime = prvGetExpectedIdleTime();
3365:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3366:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3367:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3368:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				vTaskSuspendAll();
3369:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
3370:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Now the scheduler is suspended, the expected idle
3371:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					time can be sampled again, and this time its value can
3372:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					be used. */
3373:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					configASSERT( xNextTaskUnblockTime >= xTickCount );
3374:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xExpectedIdleTime = prvGetExpectedIdleTime();
3375:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3376:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Define the following macro to set xExpectedIdleTime to 0
3377:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if the application does not want
3378:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					portSUPPRESS_TICKS_AND_SLEEP() to be called. */
3379:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					configPRE_SUPPRESS_TICKS_AND_SLEEP_PROCESSING( xExpectedIdleTime );
3380:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3381:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( xExpectedIdleTime >= configEXPECTED_IDLE_TIME_BEFORE_SLEEP )
3382:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
3383:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_BEGIN();
3384:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						portSUPPRESS_TICKS_AND_SLEEP( xExpectedIdleTime );
3385:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						traceLOW_POWER_IDLE_END();
3386:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
3387:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
3388:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
3389:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3390:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
3391:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
3392:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				( void ) xTaskResumeAll();
3393:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3394:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
3395:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3396:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3397:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3398:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3399:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_TICKLESS_IDLE */
3400:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3401:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
3402:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3403:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3404:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TICKLESS_IDLE != 0 )
3405:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3406:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eTaskConfirmSleepModeStatus( void )
3407:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3408:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* The idle task exists in addition to the application tasks. */
3409:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxNonApplicationTasks = 1;
3410:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	eSleepModeStatus eReturn = eStandardSleep;
3411:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3412:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( &xPendingReadyList ) != 0 )
3413:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3414:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* A task was made ready while the scheduler was suspended. */
3415:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3416:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3417:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else if( xYieldPending != pdFALSE )
3418:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3419:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* A yield was pended while the scheduler was suspended. */
3420:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			eReturn = eAbortSleep;
3421:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3422:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
3423:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3424:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If all the tasks are in the suspended list (which might mean they
3425:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			have an infinite block time rather than actually being suspended)
3426:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			then it is safe to turn all clocks off and just wait for external
3427:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			interrupts. */
3428:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( listCURRENT_LIST_LENGTH( &xSuspendedTaskList ) == ( uxCurrentNumberOfTasks - uxNonApplicatio
3429:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3430:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				eReturn = eNoTasksWaitingTimeout;
3431:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3432:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
3433:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3434:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3435:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3436:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3437:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3438:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return eReturn;
3439:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3440:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3441:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TICKLESS_IDLE */
3442:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3443:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3444:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3445:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3446:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskSetThreadLocalStoragePointer( TaskHandle_t xTaskToSet, BaseType_t xIndex, void *pvValue 
3447:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3448:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3449:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3450:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3451:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3452:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToSet );
3453:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB->pvThreadLocalStoragePointers[ xIndex ] = pvValue;
3454:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3455:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3456:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3457:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3458:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3459:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3460:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configNUM_THREAD_LOCAL_STORAGE_POINTERS != 0 )
3461:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3462:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void *pvTaskGetThreadLocalStoragePointer( TaskHandle_t xTaskToQuery, BaseType_t xIndex )
3463:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3464:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void *pvReturn = NULL;
3465:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3466:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3467:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xIndex < configNUM_THREAD_LOCAL_STORAGE_POINTERS )
3468:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3469:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB = prvGetTCBFromHandle( xTaskToQuery );
3470:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pvReturn = pxTCB->pvThreadLocalStoragePointers[ xIndex ];
3471:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3472:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
3473:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3474:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pvReturn = NULL;
3475:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3476:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3477:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return pvReturn;
3478:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3479:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3480:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configNUM_THREAD_LOCAL_STORAGE_POINTERS */
3481:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3482:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3483:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( portUSING_MPU_WRAPPERS == 1 )
3484:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3485:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskAllocateMPURegions( TaskHandle_t xTaskToModify, const MemoryRegion_t * const xRegions )
3486:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3487:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3488:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3489:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then we are modifying the MPU settings of
3490:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the calling task. */
3491:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTaskToModify );
3492:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3493:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vPortStoreTaskMPUSettings( &( pxTCB->xMPUSettings ), xRegions, NULL, 0 );
3494:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3495:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3496:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* portUSING_MPU_WRAPPERS */
3497:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3498:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3499:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvInitialiseTaskLists( void )
3500:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 4428              		.loc 1 3500 0
 4429              		.cfi_startproc
 4430              		@ args = 0, pretend = 0, frame = 8
 4431              		@ frame_needed = 0, uses_anonymous_args = 0
 4432 0000 00B5     		push	{lr}
 4433              	.LCFI94:
 4434              		.cfi_def_cfa_offset 4
 4435              		.cfi_offset 14, -4
 4436 0002 83B0     		sub	sp, sp, #12
 4437              	.LCFI95:
 4438              		.cfi_def_cfa_offset 16
3501:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** UBaseType_t uxPriority;
3502:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3503:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	for( uxPriority = ( UBaseType_t ) 0U; uxPriority < ( UBaseType_t ) configMAX_PRIORITIES; uxPriorit
 4439              		.loc 1 3503 0
 4440 0004 0023     		movs	r3, #0
 4441 0006 0193     		str	r3, [sp, #4]
 4442 0008 0CE0     		b	.L308
 4443              	.L309:
3504:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3505:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vListInitialise( &( pxReadyTasksLists[ uxPriority ] ) );
 4444              		.loc 1 3505 0 discriminator 3
 4445 000a 019A     		ldr	r2, [sp, #4]
 4446 000c 1346     		mov	r3, r2
 4447 000e 9B00     		lsls	r3, r3, #2
 4448 0010 1344     		add	r3, r3, r2
 4449 0012 9B00     		lsls	r3, r3, #2
 4450 0014 114A     		ldr	r2, .L310
 4451 0016 1344     		add	r3, r3, r2
 4452 0018 1846     		mov	r0, r3
 4453 001a FFF7FEFF 		bl	vListInitialise
3503:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 4454              		.loc 1 3503 0 discriminator 3
 4455 001e 019B     		ldr	r3, [sp, #4]
 4456 0020 0133     		adds	r3, r3, #1
 4457 0022 0193     		str	r3, [sp, #4]
 4458              	.L308:
3503:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 4459              		.loc 1 3503 0 is_stmt 0 discriminator 1
 4460 0024 019B     		ldr	r3, [sp, #4]
 4461 0026 042B     		cmp	r3, #4
 4462 0028 EFD9     		bls	.L309
3506:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3507:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3508:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList1 );
 4463              		.loc 1 3508 0 is_stmt 1
 4464 002a 0D48     		ldr	r0, .L310+4
 4465 002c FFF7FEFF 		bl	vListInitialise
3509:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xDelayedTaskList2 );
 4466              		.loc 1 3509 0
 4467 0030 0C48     		ldr	r0, .L310+8
 4468 0032 FFF7FEFF 		bl	vListInitialise
3510:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	vListInitialise( &xPendingReadyList );
 4469              		.loc 1 3510 0
 4470 0036 0C48     		ldr	r0, .L310+12
 4471 0038 FFF7FEFF 		bl	vListInitialise
3511:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3512:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3513:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3514:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xTasksWaitingTermination );
 4472              		.loc 1 3514 0
 4473 003c 0B48     		ldr	r0, .L310+16
 4474 003e FFF7FEFF 		bl	vListInitialise
3515:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3516:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3517:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3518:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
3519:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3520:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		vListInitialise( &xSuspendedTaskList );
 4475              		.loc 1 3520 0
 4476 0042 0B48     		ldr	r0, .L310+20
 4477 0044 FFF7FEFF 		bl	vListInitialise
3521:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3522:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
3523:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3524:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Start with pxDelayedTaskList using list1 and the pxOverflowDelayedTaskList
3525:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	using list2. */
3526:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxDelayedTaskList = &xDelayedTaskList1;
 4478              		.loc 1 3526 0
 4479 0048 0A4B     		ldr	r3, .L310+24
 4480 004a 054A     		ldr	r2, .L310+4
 4481 004c 1A60     		str	r2, [r3]
3527:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	pxOverflowDelayedTaskList = &xDelayedTaskList2;
 4482              		.loc 1 3527 0
 4483 004e 0A4B     		ldr	r3, .L310+28
 4484 0050 044A     		ldr	r2, .L310+8
 4485 0052 1A60     		str	r2, [r3]
3528:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 4486              		.loc 1 3528 0
 4487 0054 00BF     		nop
 4488 0056 03B0     		add	sp, sp, #12
 4489              	.LCFI96:
 4490              		.cfi_def_cfa_offset 4
 4491              		@ sp needed
 4492 0058 5DF804FB 		ldr	pc, [sp], #4
 4493              	.L311:
 4494              		.align	2
 4495              	.L310:
 4496 005c 00000000 		.word	pxReadyTasksLists
 4497 0060 00000000 		.word	xDelayedTaskList1
 4498 0064 00000000 		.word	xDelayedTaskList2
 4499 0068 00000000 		.word	xPendingReadyList
 4500 006c 00000000 		.word	xTasksWaitingTermination
 4501 0070 00000000 		.word	xSuspendedTaskList
 4502 0074 00000000 		.word	pxDelayedTaskList
 4503 0078 00000000 		.word	pxOverflowDelayedTaskList
 4504              		.cfi_endproc
 4505              	.LFE42:
 4507              		.section	.text.prvCheckTasksWaitingTermination,"ax",%progbits
 4508              		.align	1
 4509              		.syntax unified
 4510              		.thumb
 4511              		.thumb_func
 4512              		.fpu fpv4-sp-d16
 4514              	prvCheckTasksWaitingTermination:
 4515              	.LFB43:
3529:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3530:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3531:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvCheckTasksWaitingTermination( void )
3532:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 4516              		.loc 1 3532 0
 4517              		.cfi_startproc
 4518              		@ args = 0, pretend = 0, frame = 8
 4519              		@ frame_needed = 0, uses_anonymous_args = 0
 4520 0000 00B5     		push	{lr}
 4521              	.LCFI97:
 4522              		.cfi_def_cfa_offset 4
 4523              		.cfi_offset 14, -4
 4524 0002 83B0     		sub	sp, sp, #12
 4525              	.LCFI98:
 4526              		.cfi_def_cfa_offset 16
 4527              	.LBB189:
3533:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3534:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/** THIS FUNCTION IS CALLED FROM THE RTOS IDLE TASK **/
3535:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3536:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskDelete == 1 )
3537:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3538:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		TCB_t *pxTCB;
3539:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3540:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* uxDeletedTasksWaitingCleanUp is used to prevent taskENTER_CRITICAL()
3541:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		being called too often in the idle task. */
3542:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		while( uxDeletedTasksWaitingCleanUp > ( UBaseType_t ) 0U )
 4528              		.loc 1 3542 0
 4529 0004 19E0     		b	.L313
 4530              	.L314:
3543:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3544:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskENTER_CRITICAL();
 4531              		.loc 1 3544 0
 4532 0006 FFF7FEFF 		bl	vPortEnterCritical
3545:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3546:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxTCB = listGET_OWNER_OF_HEAD_ENTRY( ( &xTasksWaitingTermination ) ); /*lint !e9079 void * is u
 4533              		.loc 1 3546 0
 4534 000a 104B     		ldr	r3, .L315
 4535 000c DB68     		ldr	r3, [r3, #12]
 4536 000e DB68     		ldr	r3, [r3, #12]
 4537 0010 0193     		str	r3, [sp, #4]
3547:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 4538              		.loc 1 3547 0
 4539 0012 019B     		ldr	r3, [sp, #4]
 4540 0014 0433     		adds	r3, r3, #4
 4541 0016 1846     		mov	r0, r3
 4542 0018 FFF7FEFF 		bl	uxListRemove
3548:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				--uxCurrentNumberOfTasks;
 4543              		.loc 1 3548 0
 4544 001c 0C4B     		ldr	r3, .L315+4
 4545 001e 1B68     		ldr	r3, [r3]
 4546 0020 013B     		subs	r3, r3, #1
 4547 0022 0B4A     		ldr	r2, .L315+4
 4548 0024 1360     		str	r3, [r2]
3549:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				--uxDeletedTasksWaitingCleanUp;
 4549              		.loc 1 3549 0
 4550 0026 0B4B     		ldr	r3, .L315+8
 4551 0028 1B68     		ldr	r3, [r3]
 4552 002a 013B     		subs	r3, r3, #1
 4553 002c 094A     		ldr	r2, .L315+8
 4554 002e 1360     		str	r3, [r2]
3550:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3551:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			taskEXIT_CRITICAL();
 4555              		.loc 1 3551 0
 4556 0030 FFF7FEFF 		bl	vPortExitCritical
3552:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3553:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			prvDeleteTCB( pxTCB );
 4557              		.loc 1 3553 0
 4558 0034 0198     		ldr	r0, [sp, #4]
 4559 0036 FFF7FEFF 		bl	prvDeleteTCB
 4560              	.L313:
3542:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 4561              		.loc 1 3542 0
 4562 003a 064B     		ldr	r3, .L315+8
 4563 003c 1B68     		ldr	r3, [r3]
 4564 003e 002B     		cmp	r3, #0
 4565 0040 E1D1     		bne	.L314
 4566              	.LBE189:
3554:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3555:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3556:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskDelete */
3557:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 4567              		.loc 1 3557 0
 4568 0042 00BF     		nop
 4569 0044 03B0     		add	sp, sp, #12
 4570              	.LCFI99:
 4571              		.cfi_def_cfa_offset 4
 4572              		@ sp needed
 4573 0046 5DF804FB 		ldr	pc, [sp], #4
 4574              	.L316:
 4575 004a 00BF     		.align	2
 4576              	.L315:
 4577 004c 00000000 		.word	xTasksWaitingTermination
 4578 0050 00000000 		.word	uxCurrentNumberOfTasks
 4579 0054 00000000 		.word	uxDeletedTasksWaitingCleanUp
 4580              		.cfi_endproc
 4581              	.LFE43:
 4583              		.section	.text.vTaskGetInfo,"ax",%progbits
 4584              		.align	1
 4585              		.global	vTaskGetInfo
 4586              		.syntax unified
 4587              		.thumb
 4588              		.thumb_func
 4589              		.fpu fpv4-sp-d16
 4591              	vTaskGetInfo:
 4592              	.LFB44:
3558:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3559:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3560:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TRACE_FACILITY == 1 )
3561:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3562:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskGetInfo( TaskHandle_t xTask, TaskStatus_t *pxTaskStatus, BaseType_t xGetFreeStackSpace, 
3563:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 4593              		.loc 1 3563 0
 4594              		.cfi_startproc
 4595              		@ args = 0, pretend = 0, frame = 24
 4596              		@ frame_needed = 0, uses_anonymous_args = 0
 4597 0000 00B5     		push	{lr}
 4598              	.LCFI100:
 4599              		.cfi_def_cfa_offset 4
 4600              		.cfi_offset 14, -4
 4601 0002 87B0     		sub	sp, sp, #28
 4602              	.LCFI101:
 4603              		.cfi_def_cfa_offset 32
 4604 0004 0390     		str	r0, [sp, #12]
 4605 0006 0291     		str	r1, [sp, #8]
 4606 0008 0192     		str	r2, [sp, #4]
 4607 000a 8DF80330 		strb	r3, [sp, #3]
3564:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3565:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3566:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* xTask is NULL then get the state of the calling task. */
3567:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 4608              		.loc 1 3567 0
 4609 000e 039B     		ldr	r3, [sp, #12]
 4610 0010 002B     		cmp	r3, #0
 4611 0012 02D1     		bne	.L318
 4612              		.loc 1 3567 0 is_stmt 0 discriminator 1
 4613 0014 2D4B     		ldr	r3, .L328
 4614 0016 1B68     		ldr	r3, [r3]
 4615 0018 00E0     		b	.L319
 4616              	.L318:
 4617              		.loc 1 3567 0 discriminator 2
 4618 001a 039B     		ldr	r3, [sp, #12]
 4619              	.L319:
 4620              		.loc 1 3567 0 discriminator 4
 4621 001c 0593     		str	r3, [sp, #20]
3568:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3569:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xHandle = ( TaskHandle_t ) pxTCB;
 4622              		.loc 1 3569 0 is_stmt 1 discriminator 4
 4623 001e 029B     		ldr	r3, [sp, #8]
 4624 0020 059A     		ldr	r2, [sp, #20]
 4625 0022 1A60     		str	r2, [r3]
3570:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pcTaskName = ( const char * ) &( pxTCB->pcTaskName [ 0 ] );
 4626              		.loc 1 3570 0 discriminator 4
 4627 0024 059B     		ldr	r3, [sp, #20]
 4628 0026 03F13402 		add	r2, r3, #52
 4629 002a 029B     		ldr	r3, [sp, #8]
 4630 002c 5A60     		str	r2, [r3, #4]
3571:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->uxCurrentPriority = pxTCB->uxPriority;
 4631              		.loc 1 3571 0 discriminator 4
 4632 002e 059B     		ldr	r3, [sp, #20]
 4633 0030 DA6A     		ldr	r2, [r3, #44]
 4634 0032 029B     		ldr	r3, [sp, #8]
 4635 0034 1A61     		str	r2, [r3, #16]
3572:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->pxStackBase = pxTCB->pxStack;
 4636              		.loc 1 3572 0 discriminator 4
 4637 0036 059B     		ldr	r3, [sp, #20]
 4638 0038 1A6B     		ldr	r2, [r3, #48]
 4639 003a 029B     		ldr	r3, [sp, #8]
 4640 003c DA61     		str	r2, [r3, #28]
3573:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTaskStatus->xTaskNumber = pxTCB->uxTCBNumber;
 4641              		.loc 1 3573 0 discriminator 4
 4642 003e 059B     		ldr	r3, [sp, #20]
 4643 0040 1A6C     		ldr	r2, [r3, #64]
 4644 0042 029B     		ldr	r3, [sp, #8]
 4645 0044 9A60     		str	r2, [r3, #8]
3574:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3575:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_MUTEXES == 1 )
3576:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3577:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = pxTCB->uxBasePriority;
 4646              		.loc 1 3577 0 discriminator 4
 4647 0046 059B     		ldr	r3, [sp, #20]
 4648 0048 9A6C     		ldr	r2, [r3, #72]
 4649 004a 029B     		ldr	r3, [sp, #8]
 4650 004c 5A61     		str	r2, [r3, #20]
3578:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3579:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#else
3580:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3581:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->uxBasePriority = 0;
3582:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3583:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
3584:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3585:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configGENERATE_RUN_TIME_STATS == 1 )
3586:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3587:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = pxTCB->ulRunTimeCounter;
3588:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3589:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#else
3590:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3591:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->ulRunTimeCounter = 0;
 4651              		.loc 1 3591 0 discriminator 4
 4652 004e 029B     		ldr	r3, [sp, #8]
 4653 0050 0022     		movs	r2, #0
 4654 0052 9A61     		str	r2, [r3, #24]
3592:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3593:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
3594:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3595:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Obtaining the task state is a little fiddly, so is only done if the
3596:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		value of eState passed into this function is eInvalid - otherwise the
3597:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		state is just set to whatever is passed in. */
3598:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( eState != eInvalid )
 4655              		.loc 1 3598 0 discriminator 4
 4656 0054 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 4657 0058 052B     		cmp	r3, #5
 4658 005a 1CD0     		beq	.L320
3599:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3600:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB == pxCurrentTCB )
 4659              		.loc 1 3600 0
 4660 005c 1B4B     		ldr	r3, .L328
 4661 005e 1B68     		ldr	r3, [r3]
 4662 0060 059A     		ldr	r2, [sp, #20]
 4663 0062 9A42     		cmp	r2, r3
 4664 0064 03D1     		bne	.L321
3601:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3602:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eRunning;
 4665              		.loc 1 3602 0
 4666 0066 029B     		ldr	r3, [sp, #8]
 4667 0068 0022     		movs	r2, #0
 4668 006a 1A73     		strb	r2, [r3, #12]
 4669 006c 1AE0     		b	.L324
 4670              	.L321:
3603:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3604:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
3605:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3606:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->eCurrentState = eState;
 4671              		.loc 1 3606 0
 4672 006e 029B     		ldr	r3, [sp, #8]
 4673 0070 9DF80320 		ldrb	r2, [sp, #3]
 4674 0074 1A73     		strb	r2, [r3, #12]
3607:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3608:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#if ( INCLUDE_vTaskSuspend == 1 )
3609:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
3610:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* If the task is in the suspended list then there is a
3611:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					chance it is actually just blocked indefinitely - so really
3612:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					it should be reported as being in the Blocked state. */
3613:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( eState == eSuspended )
 4675              		.loc 1 3613 0
 4676 0076 9DF80330 		ldrb	r3, [sp, #3]	@ zero_extendqisi2
 4677 007a 032B     		cmp	r3, #3
 4678 007c 12D1     		bne	.L324
3614:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
3615:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						vTaskSuspendAll();
 4679              		.loc 1 3615 0
 4680 007e FFF7FEFF 		bl	vTaskSuspendAll
3616:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
3617:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							if( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) != NULL )
 4681              		.loc 1 3617 0
 4682 0082 059B     		ldr	r3, [sp, #20]
 4683 0084 9B6A     		ldr	r3, [r3, #40]
 4684 0086 002B     		cmp	r3, #0
 4685 0088 02D0     		beq	.L323
3618:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							{
3619:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 								pxTaskStatus->eCurrentState = eBlocked;
 4686              		.loc 1 3619 0
 4687 008a 029B     		ldr	r3, [sp, #8]
 4688 008c 0222     		movs	r2, #2
 4689 008e 1A73     		strb	r2, [r3, #12]
 4690              	.L323:
3620:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							}
3621:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
3622:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						( void ) xTaskResumeAll();
 4691              		.loc 1 3622 0
 4692 0090 FFF7FEFF 		bl	xTaskResumeAll
 4693 0094 06E0     		b	.L324
 4694              	.L320:
3623:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
3624:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
3625:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#endif /* INCLUDE_vTaskSuspend */
3626:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3627:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3628:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
3629:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3630:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->eCurrentState = eTaskGetState( pxTCB );
 4695              		.loc 1 3630 0
 4696 0096 0598     		ldr	r0, [sp, #20]
 4697 0098 FFF7FEFF 		bl	eTaskGetState
 4698 009c 0346     		mov	r3, r0
 4699 009e 1A46     		mov	r2, r3
 4700 00a0 029B     		ldr	r3, [sp, #8]
 4701 00a2 1A73     		strb	r2, [r3, #12]
 4702              	.L324:
3631:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3632:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3633:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Obtaining the stack space takes some time, so the xGetFreeStackSpace
3634:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		parameter is provided to allow it to be skipped. */
3635:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xGetFreeStackSpace != pdFALSE )
 4703              		.loc 1 3635 0
 4704 00a4 019B     		ldr	r3, [sp, #4]
 4705 00a6 002B     		cmp	r3, #0
 4706 00a8 09D0     		beq	.L325
3636:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3637:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#if ( portSTACK_GROWTH > 0 )
3638:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3639:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxEndOfSt
3640:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3641:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#else
3642:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3643:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxTaskStatus->usStackHighWaterMark = prvTaskCheckFreeStackSpace( ( uint8_t * ) pxTCB->pxStack )
 4707              		.loc 1 3643 0
 4708 00aa 059B     		ldr	r3, [sp, #20]
 4709 00ac 1B6B     		ldr	r3, [r3, #48]
 4710 00ae 1846     		mov	r0, r3
 4711 00b0 FFF7FEFF 		bl	prvTaskCheckFreeStackSpace
 4712 00b4 0346     		mov	r3, r0
 4713 00b6 1A46     		mov	r2, r3
 4714 00b8 029B     		ldr	r3, [sp, #8]
 4715 00ba 1A84     		strh	r2, [r3, #32]	@ movhi
3644:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3645:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#endif
3646:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3647:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
3648:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3649:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTaskStatus->usStackHighWaterMark = 0;
3650:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3651:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 4716              		.loc 1 3651 0
 4717 00bc 02E0     		b	.L327
 4718              	.L325:
3649:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
 4719              		.loc 1 3649 0
 4720 00be 029B     		ldr	r3, [sp, #8]
 4721 00c0 0022     		movs	r2, #0
 4722 00c2 1A84     		strh	r2, [r3, #32]	@ movhi
 4723              	.L327:
 4724              		.loc 1 3651 0
 4725 00c4 00BF     		nop
 4726 00c6 07B0     		add	sp, sp, #28
 4727              	.LCFI102:
 4728              		.cfi_def_cfa_offset 4
 4729              		@ sp needed
 4730 00c8 5DF804FB 		ldr	pc, [sp], #4
 4731              	.L329:
 4732              		.align	2
 4733              	.L328:
 4734 00cc 00000000 		.word	pxCurrentTCB
 4735              		.cfi_endproc
 4736              	.LFE44:
 4738              		.section	.text.prvListTasksWithinSingleList,"ax",%progbits
 4739              		.align	1
 4740              		.syntax unified
 4741              		.thumb
 4742              		.thumb_func
 4743              		.fpu fpv4-sp-d16
 4745              	prvListTasksWithinSingleList:
 4746              	.LFB45:
3652:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3653:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3654:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3655:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3656:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_TRACE_FACILITY == 1 )
3657:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3658:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static UBaseType_t prvListTasksWithinSingleList( TaskStatus_t *pxTaskStatusArray, List_t *pxList, 
3659:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 4747              		.loc 1 3659 0
 4748              		.cfi_startproc
 4749              		@ args = 0, pretend = 0, frame = 40
 4750              		@ frame_needed = 0, uses_anonymous_args = 0
 4751 0000 00B5     		push	{lr}
 4752              	.LCFI103:
 4753              		.cfi_def_cfa_offset 4
 4754              		.cfi_offset 14, -4
 4755 0002 8BB0     		sub	sp, sp, #44
 4756              	.LCFI104:
 4757              		.cfi_def_cfa_offset 48
 4758 0004 0390     		str	r0, [sp, #12]
 4759 0006 0291     		str	r1, [sp, #8]
 4760 0008 1346     		mov	r3, r2
 4761 000a 8DF80730 		strb	r3, [sp, #7]
3660:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	configLIST_VOLATILE TCB_t *pxNextTCB, *pxFirstTCB;
3661:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTask = 0;
 4762              		.loc 1 3661 0
 4763 000e 0023     		movs	r3, #0
 4764 0010 0993     		str	r3, [sp, #36]
3662:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3663:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( listCURRENT_LIST_LENGTH( pxList ) > ( UBaseType_t ) 0 )
 4765              		.loc 1 3663 0
 4766 0012 029B     		ldr	r3, [sp, #8]
 4767 0014 1B68     		ldr	r3, [r3]
 4768 0016 002B     		cmp	r3, #0
 4769 0018 40D0     		beq	.L331
 4770              	.LBB190:
3664:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3665:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			listGET_OWNER_OF_NEXT_ENTRY( pxFirstTCB, pxList ); /*lint !e9079 void * is used as this macro is
 4771              		.loc 1 3665 0
 4772 001a 029B     		ldr	r3, [sp, #8]
 4773 001c 0893     		str	r3, [sp, #32]
 4774 001e 089B     		ldr	r3, [sp, #32]
 4775 0020 5B68     		ldr	r3, [r3, #4]
 4776 0022 5A68     		ldr	r2, [r3, #4]
 4777 0024 089B     		ldr	r3, [sp, #32]
 4778 0026 5A60     		str	r2, [r3, #4]
 4779 0028 089B     		ldr	r3, [sp, #32]
 4780 002a 5A68     		ldr	r2, [r3, #4]
 4781 002c 089B     		ldr	r3, [sp, #32]
 4782 002e 0833     		adds	r3, r3, #8
 4783 0030 9A42     		cmp	r2, r3
 4784 0032 04D1     		bne	.L332
 4785              		.loc 1 3665 0 is_stmt 0 discriminator 1
 4786 0034 089B     		ldr	r3, [sp, #32]
 4787 0036 5B68     		ldr	r3, [r3, #4]
 4788 0038 5A68     		ldr	r2, [r3, #4]
 4789 003a 089B     		ldr	r3, [sp, #32]
 4790 003c 5A60     		str	r2, [r3, #4]
 4791              	.L332:
 4792              		.loc 1 3665 0 discriminator 3
 4793 003e 089B     		ldr	r3, [sp, #32]
 4794 0040 5B68     		ldr	r3, [r3, #4]
 4795 0042 DB68     		ldr	r3, [r3, #12]
 4796 0044 0793     		str	r3, [sp, #28]
 4797              	.L334:
 4798              	.LBE190:
 4799              	.LBB191:
3666:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3667:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Populate an TaskStatus_t structure within the
3668:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTaskStatusArray array for each task that is referenced from
3669:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxList.  See the definition of TaskStatus_t in task.h for the
3670:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			meaning of each TaskStatus_t structure member. */
3671:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			do
3672:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3673:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				listGET_OWNER_OF_NEXT_ENTRY( pxNextTCB, pxList ); /*lint !e9079 void * is used as this macro is
 4800              		.loc 1 3673 0 is_stmt 1
 4801 0046 029B     		ldr	r3, [sp, #8]
 4802 0048 0693     		str	r3, [sp, #24]
 4803 004a 069B     		ldr	r3, [sp, #24]
 4804 004c 5B68     		ldr	r3, [r3, #4]
 4805 004e 5A68     		ldr	r2, [r3, #4]
 4806 0050 069B     		ldr	r3, [sp, #24]
 4807 0052 5A60     		str	r2, [r3, #4]
 4808 0054 069B     		ldr	r3, [sp, #24]
 4809 0056 5A68     		ldr	r2, [r3, #4]
 4810 0058 069B     		ldr	r3, [sp, #24]
 4811 005a 0833     		adds	r3, r3, #8
 4812 005c 9A42     		cmp	r2, r3
 4813 005e 04D1     		bne	.L333
 4814              		.loc 1 3673 0 is_stmt 0 discriminator 1
 4815 0060 069B     		ldr	r3, [sp, #24]
 4816 0062 5B68     		ldr	r3, [r3, #4]
 4817 0064 5A68     		ldr	r2, [r3, #4]
 4818 0066 069B     		ldr	r3, [sp, #24]
 4819 0068 5A60     		str	r2, [r3, #4]
 4820              	.L333:
 4821              		.loc 1 3673 0 discriminator 3
 4822 006a 069B     		ldr	r3, [sp, #24]
 4823 006c 5B68     		ldr	r3, [r3, #4]
 4824 006e DB68     		ldr	r3, [r3, #12]
 4825 0070 0593     		str	r3, [sp, #20]
 4826              	.LBE191:
3674:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				vTaskGetInfo( ( TaskHandle_t ) pxNextTCB, &( pxTaskStatusArray[ uxTask ] ), pdTRUE, eState );
 4827              		.loc 1 3674 0 is_stmt 1 discriminator 3
 4828 0072 099A     		ldr	r2, [sp, #36]
 4829 0074 1346     		mov	r3, r2
 4830 0076 DB00     		lsls	r3, r3, #3
 4831 0078 1344     		add	r3, r3, r2
 4832 007a 9B00     		lsls	r3, r3, #2
 4833 007c 1A46     		mov	r2, r3
 4834 007e 039B     		ldr	r3, [sp, #12]
 4835 0080 9918     		adds	r1, r3, r2
 4836 0082 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 4837 0086 0122     		movs	r2, #1
 4838 0088 0598     		ldr	r0, [sp, #20]
 4839 008a FFF7FEFF 		bl	vTaskGetInfo
3675:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxTask++;
 4840              		.loc 1 3675 0 discriminator 3
 4841 008e 099B     		ldr	r3, [sp, #36]
 4842 0090 0133     		adds	r3, r3, #1
 4843 0092 0993     		str	r3, [sp, #36]
3676:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			} while( pxNextTCB != pxFirstTCB );
 4844              		.loc 1 3676 0 discriminator 3
 4845 0094 059A     		ldr	r2, [sp, #20]
 4846 0096 079B     		ldr	r3, [sp, #28]
 4847 0098 9A42     		cmp	r2, r3
 4848 009a D4D1     		bne	.L334
 4849              	.L331:
3677:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3678:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
3679:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3680:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3681:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3682:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3683:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return uxTask;
 4850              		.loc 1 3683 0
 4851 009c 099B     		ldr	r3, [sp, #36]
3684:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 4852              		.loc 1 3684 0
 4853 009e 1846     		mov	r0, r3
 4854 00a0 0BB0     		add	sp, sp, #44
 4855              	.LCFI105:
 4856              		.cfi_def_cfa_offset 4
 4857              		@ sp needed
 4858 00a2 5DF804FB 		ldr	pc, [sp], #4
 4859              		.cfi_endproc
 4860              	.LFE45:
 4862              		.section	.text.prvTaskCheckFreeStackSpace,"ax",%progbits
 4863              		.align	1
 4864              		.syntax unified
 4865              		.thumb
 4866              		.thumb_func
 4867              		.fpu fpv4-sp-d16
 4869              	prvTaskCheckFreeStackSpace:
 4870              	.LFB46:
3685:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3686:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TRACE_FACILITY */
3687:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3688:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3689:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) )
3690:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3691:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static configSTACK_DEPTH_TYPE prvTaskCheckFreeStackSpace( const uint8_t * pucStackByte )
3692:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 4871              		.loc 1 3692 0
 4872              		.cfi_startproc
 4873              		@ args = 0, pretend = 0, frame = 16
 4874              		@ frame_needed = 0, uses_anonymous_args = 0
 4875              		@ link register save eliminated.
 4876 0000 84B0     		sub	sp, sp, #16
 4877              	.LCFI106:
 4878              		.cfi_def_cfa_offset 16
 4879 0002 0190     		str	r0, [sp, #4]
3693:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uint32_t ulCount = 0U;
 4880              		.loc 1 3693 0
 4881 0004 0023     		movs	r3, #0
 4882 0006 0393     		str	r3, [sp, #12]
3694:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3695:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		while( *pucStackByte == ( uint8_t ) tskSTACK_FILL_BYTE )
 4883              		.loc 1 3695 0
 4884 0008 05E0     		b	.L337
 4885              	.L338:
3696:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3697:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pucStackByte -= portSTACK_GROWTH;
 4886              		.loc 1 3697 0
 4887 000a 019B     		ldr	r3, [sp, #4]
 4888 000c 0133     		adds	r3, r3, #1
 4889 000e 0193     		str	r3, [sp, #4]
3698:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			ulCount++;
 4890              		.loc 1 3698 0
 4891 0010 039B     		ldr	r3, [sp, #12]
 4892 0012 0133     		adds	r3, r3, #1
 4893 0014 0393     		str	r3, [sp, #12]
 4894              	.L337:
3695:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
 4895              		.loc 1 3695 0
 4896 0016 019B     		ldr	r3, [sp, #4]
 4897 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4898 001a A52B     		cmp	r3, #165
 4899 001c F5D0     		beq	.L338
3699:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3700:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3701:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		ulCount /= ( uint32_t ) sizeof( StackType_t ); /*lint !e961 Casting is not redundant on smaller a
 4900              		.loc 1 3701 0
 4901 001e 039B     		ldr	r3, [sp, #12]
 4902 0020 9B08     		lsrs	r3, r3, #2
 4903 0022 0393     		str	r3, [sp, #12]
3702:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3703:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return ( configSTACK_DEPTH_TYPE ) ulCount;
 4904              		.loc 1 3703 0
 4905 0024 039B     		ldr	r3, [sp, #12]
 4906 0026 9BB2     		uxth	r3, r3
3704:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 4907              		.loc 1 3704 0
 4908 0028 1846     		mov	r0, r3
 4909 002a 04B0     		add	sp, sp, #16
 4910              	.LCFI107:
 4911              		.cfi_def_cfa_offset 0
 4912              		@ sp needed
 4913 002c 7047     		bx	lr
 4914              		.cfi_endproc
 4915              	.LFE46:
 4917              		.section	.text.prvDeleteTCB,"ax",%progbits
 4918              		.align	1
 4919              		.syntax unified
 4920              		.thumb
 4921              		.thumb_func
 4922              		.fpu fpv4-sp-d16
 4924              	prvDeleteTCB:
 4925              	.LFB47:
3705:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3706:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) || ( INCLUDE_uxTaskGetStackHighWaterMark == 1 ) ) */
3707:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3708:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3709:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_uxTaskGetStackHighWaterMark == 1 )
3710:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3711:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxTaskGetStackHighWaterMark( TaskHandle_t xTask )
3712:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3713:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
3714:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uint8_t *pucEndOfStack;
3715:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxReturn;
3716:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3717:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
3718:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3719:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if portSTACK_GROWTH < 0
3720:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3721:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxStack;
3722:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3723:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#else
3724:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3725:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pucEndOfStack = ( uint8_t * ) pxTCB->pxEndOfStack;
3726:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3727:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
3728:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3729:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxReturn = ( UBaseType_t ) prvTaskCheckFreeStackSpace( pucEndOfStack );
3730:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3731:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return uxReturn;
3732:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3733:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3734:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_uxTaskGetStackHighWaterMark */
3735:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3736:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3737:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( INCLUDE_vTaskDelete == 1 )
3738:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3739:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static void prvDeleteTCB( TCB_t *pxTCB )
3740:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 4926              		.loc 1 3740 0
 4927              		.cfi_startproc
 4928              		@ args = 0, pretend = 0, frame = 8
 4929              		@ frame_needed = 0, uses_anonymous_args = 0
 4930 0000 00B5     		push	{lr}
 4931              	.LCFI108:
 4932              		.cfi_def_cfa_offset 4
 4933              		.cfi_offset 14, -4
 4934 0002 83B0     		sub	sp, sp, #12
 4935              	.LCFI109:
 4936              		.cfi_def_cfa_offset 16
 4937 0004 0190     		str	r0, [sp, #4]
3741:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* This call is required specifically for the TriCore port.  It must be
3742:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		above the vPortFree() calls.  The call is also used by ports/demos that
3743:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		want to allocate and clean RAM statically. */
3744:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portCLEAN_UP_TCB( pxTCB );
3745:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3746:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Free up the memory allocated by the scheduler for the task.  It is up
3747:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		to the task to free any memory allocated at the application level. */
3748:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if ( configUSE_NEWLIB_REENTRANT == 1 )
3749:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3750:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			_reclaim_reent( &( pxTCB->xNewLib_reent ) );
3751:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3752:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configUSE_NEWLIB_REENTRANT */
3753:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3754:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if( ( configSUPPORT_DYNAMIC_ALLOCATION == 1 ) && ( configSUPPORT_STATIC_ALLOCATION == 0 ) && ( p
3755:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3756:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* The task can only have been allocated dynamically - free both
3757:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			the stack and TCB. */
3758:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB->pxStack );
 4938              		.loc 1 3758 0
 4939 0006 019B     		ldr	r3, [sp, #4]
 4940 0008 1B6B     		ldr	r3, [r3, #48]
 4941 000a 1846     		mov	r0, r3
 4942 000c FFF7FEFF 		bl	vPortFree
3759:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTCB );
 4943              		.loc 1 3759 0
 4944 0010 0198     		ldr	r0, [sp, #4]
 4945 0012 FFF7FEFF 		bl	vPortFree
3760:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3761:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#elif( tskSTATIC_AND_DYNAMIC_ALLOCATION_POSSIBLE != 0 ) /*lint !e731 !e9029 Macro has been consol
3762:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3763:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* The task could have been allocated statically or dynamically, so
3764:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			check what was statically allocated before trying to free the
3765:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			memory. */
3766:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucStaticallyAllocated == tskDYNAMICALLY_ALLOCATED_STACK_AND_TCB )
3767:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3768:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Both the stack and TCB were allocated dynamically, so both
3769:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				must be freed. */
3770:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB->pxStack );
3771:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3772:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3773:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else if( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_ONLY )
3774:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3775:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Only the stack was statically allocated, so the TCB is the
3776:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				only memory that must be freed. */
3777:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				vPortFree( pxTCB );
3778:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3779:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
3780:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3781:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Neither the stack nor the TCB were allocated dynamically, so
3782:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				nothing needs to be freed. */
3783:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				configASSERT( pxTCB->ucStaticallyAllocated == tskSTATICALLY_ALLOCATED_STACK_AND_TCB	);
3784:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
3785:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3786:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3787:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif /* configSUPPORT_DYNAMIC_ALLOCATION */
3788:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 4946              		.loc 1 3788 0
 4947 0016 00BF     		nop
 4948 0018 03B0     		add	sp, sp, #12
 4949              	.LCFI110:
 4950              		.cfi_def_cfa_offset 4
 4951              		@ sp needed
 4952 001a 5DF804FB 		ldr	pc, [sp], #4
 4953              		.cfi_endproc
 4954              	.LFE47:
 4956              		.section	.text.prvResetNextTaskUnblockTime,"ax",%progbits
 4957              		.align	1
 4958              		.syntax unified
 4959              		.thumb
 4960              		.thumb_func
 4961              		.fpu fpv4-sp-d16
 4963              	prvResetNextTaskUnblockTime:
 4964              	.LFB48:
3789:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3790:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* INCLUDE_vTaskDelete */
3791:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3792:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3793:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvResetNextTaskUnblockTime( void )
3794:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 4965              		.loc 1 3794 0
 4966              		.cfi_startproc
 4967              		@ args = 0, pretend = 0, frame = 8
 4968              		@ frame_needed = 0, uses_anonymous_args = 0
 4969              		@ link register save eliminated.
 4970 0000 82B0     		sub	sp, sp, #8
 4971              	.LCFI111:
 4972              		.cfi_def_cfa_offset 8
3795:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TCB_t *pxTCB;
3796:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3797:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( listLIST_IS_EMPTY( pxDelayedTaskList ) != pdFALSE )
 4973              		.loc 1 3797 0
 4974 0002 0B4B     		ldr	r3, .L345
 4975 0004 1B68     		ldr	r3, [r3]
 4976 0006 1B68     		ldr	r3, [r3]
 4977 0008 002B     		cmp	r3, #0
 4978 000a 04D1     		bne	.L342
3798:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3799:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is empty.  Set xNextTaskUnblockTime to
3800:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the maximum possible value so it is	extremely unlikely that the
3801:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xTickCount >= xNextTaskUnblockTime ) test will pass until
3802:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		there is an item in the delayed list. */
3803:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = portMAX_DELAY;
 4979              		.loc 1 3803 0
 4980 000c 094B     		ldr	r3, .L345+4
 4981 000e 4FF0FF32 		mov	r2, #-1
 4982 0012 1A60     		str	r2, [r3]
3804:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3805:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
3806:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
3807:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The new current delayed list is not empty, get the value of
3808:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		the item at the head of the delayed list.  This is the time at
3809:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		which the task at the head of the delayed list should be removed
3810:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		from the Blocked state. */
3811:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		( pxTCB ) = listGET_OWNER_OF_HEAD_ENTRY( pxDelayedTaskList ); /*lint !e9079 void * is used as thi
3812:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
3813:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
3814:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 4983              		.loc 1 3814 0
 4984 0014 08E0     		b	.L344
 4985              	.L342:
3811:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xNextTaskUnblockTime = listGET_LIST_ITEM_VALUE( &( ( pxTCB )->xStateListItem ) );
 4986              		.loc 1 3811 0
 4987 0016 064B     		ldr	r3, .L345
 4988 0018 1B68     		ldr	r3, [r3]
 4989 001a DB68     		ldr	r3, [r3, #12]
 4990 001c DB68     		ldr	r3, [r3, #12]
 4991 001e 0193     		str	r3, [sp, #4]
3812:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 4992              		.loc 1 3812 0
 4993 0020 019B     		ldr	r3, [sp, #4]
 4994 0022 5B68     		ldr	r3, [r3, #4]
 4995 0024 034A     		ldr	r2, .L345+4
 4996 0026 1360     		str	r3, [r2]
 4997              	.L344:
 4998              		.loc 1 3814 0
 4999 0028 00BF     		nop
 5000 002a 02B0     		add	sp, sp, #8
 5001              	.LCFI112:
 5002              		.cfi_def_cfa_offset 0
 5003              		@ sp needed
 5004 002c 7047     		bx	lr
 5005              	.L346:
 5006 002e 00BF     		.align	2
 5007              	.L345:
 5008 0030 00000000 		.word	pxDelayedTaskList
 5009 0034 00000000 		.word	xNextTaskUnblockTime
 5010              		.cfi_endproc
 5011              	.LFE48:
 5013              		.section	.text.xTaskGetCurrentTaskHandle,"ax",%progbits
 5014              		.align	1
 5015              		.global	xTaskGetCurrentTaskHandle
 5016              		.syntax unified
 5017              		.thumb
 5018              		.thumb_func
 5019              		.fpu fpv4-sp-d16
 5021              	xTaskGetCurrentTaskHandle:
 5022              	.LFB49:
3815:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3816:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3817:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) )
3818:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3819:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xTaskGetCurrentTaskHandle( void )
3820:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 5023              		.loc 1 3820 0
 5024              		.cfi_startproc
 5025              		@ args = 0, pretend = 0, frame = 8
 5026              		@ frame_needed = 0, uses_anonymous_args = 0
 5027              		@ link register save eliminated.
 5028 0000 82B0     		sub	sp, sp, #8
 5029              	.LCFI113:
 5030              		.cfi_def_cfa_offset 8
3821:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskHandle_t xReturn;
3822:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3823:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* A critical section is not required as this is not called from
3824:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		an interrupt and the current TCB will always be the same for any
3825:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		individual execution thread. */
3826:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xReturn = pxCurrentTCB;
 5031              		.loc 1 3826 0
 5032 0002 034B     		ldr	r3, .L349
 5033 0004 1B68     		ldr	r3, [r3]
 5034 0006 0193     		str	r3, [sp, #4]
3827:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3828:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5035              		.loc 1 3828 0
 5036 0008 019B     		ldr	r3, [sp, #4]
3829:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 5037              		.loc 1 3829 0
 5038 000a 1846     		mov	r0, r3
 5039 000c 02B0     		add	sp, sp, #8
 5040              	.LCFI114:
 5041              		.cfi_def_cfa_offset 0
 5042              		@ sp needed
 5043 000e 7047     		bx	lr
 5044              	.L350:
 5045              		.align	2
 5046              	.L349:
 5047 0010 00000000 		.word	pxCurrentTCB
 5048              		.cfi_endproc
 5049              	.LFE49:
 5051              		.section	.text.xTaskGetSchedulerState,"ax",%progbits
 5052              		.align	1
 5053              		.global	xTaskGetSchedulerState
 5054              		.syntax unified
 5055              		.thumb
 5056              		.thumb_func
 5057              		.fpu fpv4-sp-d16
 5059              	xTaskGetSchedulerState:
 5060              	.LFB50:
3830:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3831:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetCurrentTaskHandle == 1 ) || ( configUSE_MUTEXES == 1 ) ) */
3832:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3833:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3834:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) )
3835:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3836:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGetSchedulerState( void )
3837:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 5061              		.loc 1 3837 0
 5062              		.cfi_startproc
 5063              		@ args = 0, pretend = 0, frame = 8
 5064              		@ frame_needed = 0, uses_anonymous_args = 0
 5065              		@ link register save eliminated.
 5066 0000 82B0     		sub	sp, sp, #8
 5067              	.LCFI115:
 5068              		.cfi_def_cfa_offset 8
3838:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
3839:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3840:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning == pdFALSE )
 5069              		.loc 1 3840 0
 5070 0002 0A4B     		ldr	r3, .L356
 5071 0004 1B68     		ldr	r3, [r3]
 5072 0006 002B     		cmp	r3, #0
 5073 0008 02D1     		bne	.L352
3841:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3842:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xReturn = taskSCHEDULER_NOT_STARTED;
 5074              		.loc 1 3842 0
 5075 000a 0123     		movs	r3, #1
 5076 000c 0193     		str	r3, [sp, #4]
 5077 000e 08E0     		b	.L353
 5078              	.L352:
3843:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3844:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
3845:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3846:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 5079              		.loc 1 3846 0
 5080 0010 074B     		ldr	r3, .L356+4
 5081 0012 1B68     		ldr	r3, [r3]
 5082 0014 002B     		cmp	r3, #0
 5083 0016 02D1     		bne	.L354
3847:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3848:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_RUNNING;
 5084              		.loc 1 3848 0
 5085 0018 0223     		movs	r3, #2
 5086 001a 0193     		str	r3, [sp, #4]
 5087 001c 01E0     		b	.L353
 5088              	.L354:
3849:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3850:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
3851:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3852:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = taskSCHEDULER_SUSPENDED;
 5089              		.loc 1 3852 0
 5090 001e 0023     		movs	r3, #0
 5091 0020 0193     		str	r3, [sp, #4]
 5092              	.L353:
3853:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3854:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3855:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3856:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5093              		.loc 1 3856 0
 5094 0022 019B     		ldr	r3, [sp, #4]
3857:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 5095              		.loc 1 3857 0
 5096 0024 1846     		mov	r0, r3
 5097 0026 02B0     		add	sp, sp, #8
 5098              	.LCFI116:
 5099              		.cfi_def_cfa_offset 0
 5100              		@ sp needed
 5101 0028 7047     		bx	lr
 5102              	.L357:
 5103 002a 00BF     		.align	2
 5104              	.L356:
 5105 002c 00000000 		.word	xSchedulerRunning
 5106 0030 00000000 		.word	uxSchedulerSuspended
 5107              		.cfi_endproc
 5108              	.LFE50:
 5110              		.section	.text.xTaskPriorityInherit,"ax",%progbits
 5111              		.align	1
 5112              		.global	xTaskPriorityInherit
 5113              		.syntax unified
 5114              		.thumb
 5115              		.thumb_func
 5116              		.fpu fpv4-sp-d16
 5118              	xTaskPriorityInherit:
 5119              	.LFB51:
3858:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3859:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* ( ( INCLUDE_xTaskGetSchedulerState == 1 ) || ( configUSE_TIMERS == 1 ) ) */
3860:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3861:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3862:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3863:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3864:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityInherit( TaskHandle_t const pxMutexHolder )
3865:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 5120              		.loc 1 3865 0
 5121              		.cfi_startproc
 5122              		@ args = 0, pretend = 0, frame = 16
 5123              		@ frame_needed = 0, uses_anonymous_args = 0
 5124 0000 00B5     		push	{lr}
 5125              	.LCFI117:
 5126              		.cfi_def_cfa_offset 4
 5127              		.cfi_offset 14, -4
 5128 0002 85B0     		sub	sp, sp, #20
 5129              	.LCFI118:
 5130              		.cfi_def_cfa_offset 24
 5131 0004 0190     		str	r0, [sp, #4]
3866:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxMutexHolderTCB = pxMutexHolder;
 5132              		.loc 1 3866 0
 5133 0006 019B     		ldr	r3, [sp, #4]
 5134 0008 0293     		str	r3, [sp, #8]
3867:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 5135              		.loc 1 3867 0
 5136 000a 0023     		movs	r3, #0
 5137 000c 0393     		str	r3, [sp, #12]
3868:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3869:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If the mutex was given back by an interrupt while the queue was
3870:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		locked then the mutex holder might now be NULL.  _RB_ Is this still
3871:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		needed as interrupts can no longer use mutexes? */
3872:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 5138              		.loc 1 3872 0
 5139 000e 019B     		ldr	r3, [sp, #4]
 5140 0010 002B     		cmp	r3, #0
 5141 0012 69D0     		beq	.L359
3873:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3874:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If the holder of the mutex has a priority below the priority of
3875:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			the task attempting to obtain the mutex then it will temporarily
3876:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			inherit the priority of the task attempting to obtain the mutex. */
3877:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxMutexHolderTCB->uxPriority < pxCurrentTCB->uxPriority )
 5142              		.loc 1 3877 0
 5143 0014 029B     		ldr	r3, [sp, #8]
 5144 0016 DA6A     		ldr	r2, [r3, #44]
 5145 0018 364B     		ldr	r3, .L367
 5146 001a 1B68     		ldr	r3, [r3]
 5147 001c DB6A     		ldr	r3, [r3, #44]
 5148 001e 9A42     		cmp	r2, r3
 5149 0020 59D2     		bcs	.L360
3878:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3879:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Adjust the mutex holder state to account for its new
3880:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				priority.  Only reset the event list item value if the value is
3881:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				not being used for anything else. */
3882:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( ( listGET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VA
 5150              		.loc 1 3882 0
 5151 0022 029B     		ldr	r3, [sp, #8]
 5152 0024 9B69     		ldr	r3, [r3, #24]
 5153 0026 002B     		cmp	r3, #0
 5154 0028 06DB     		blt	.L361
3883:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
3884:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxMutexHolderTCB->xEventListItem ), ( TickType_t ) configMAX_PRIOR
 5155              		.loc 1 3884 0
 5156 002a 324B     		ldr	r3, .L367
 5157 002c 1B68     		ldr	r3, [r3]
 5158 002e DB6A     		ldr	r3, [r3, #44]
 5159 0030 C3F10502 		rsb	r2, r3, #5
 5160 0034 029B     		ldr	r3, [sp, #8]
 5161 0036 9A61     		str	r2, [r3, #24]
 5162              	.L361:
3885:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
3886:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
3887:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
3888:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3889:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
3890:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3891:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* If the task being modified is in the ready state it will need
3892:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				to be moved into a new list. */
3893:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ pxMutexHolderTCB->uxPriority ] ), &( pxMutex
 5163              		.loc 1 3893 0
 5164 0038 029B     		ldr	r3, [sp, #8]
 5165 003a 5969     		ldr	r1, [r3, #20]
 5166 003c 029B     		ldr	r3, [sp, #8]
 5167 003e DA6A     		ldr	r2, [r3, #44]
 5168 0040 1346     		mov	r3, r2
 5169 0042 9B00     		lsls	r3, r3, #2
 5170 0044 1344     		add	r3, r3, r2
 5171 0046 9B00     		lsls	r3, r3, #2
 5172 0048 2B4A     		ldr	r2, .L367+4
 5173 004a 1344     		add	r3, r3, r2
 5174 004c 9942     		cmp	r1, r3
 5175 004e 3AD1     		bne	.L362
3894:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
3895:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxMutexHolderTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 5176              		.loc 1 3895 0
 5177 0050 029B     		ldr	r3, [sp, #8]
 5178 0052 0433     		adds	r3, r3, #4
 5179 0054 1846     		mov	r0, r3
 5180 0056 FFF7FEFF 		bl	uxListRemove
 5181 005a 0346     		mov	r3, r0
 5182 005c 002B     		cmp	r3, #0
 5183 005e 15D1     		bne	.L363
3896:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
3897:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxMutexHolderTCB->uxPriority );
 5184              		.loc 1 3897 0
 5185 0060 029B     		ldr	r3, [sp, #8]
 5186 0062 DA6A     		ldr	r2, [r3, #44]
 5187 0064 2449     		ldr	r1, .L367+4
 5188 0066 1346     		mov	r3, r2
 5189 0068 9B00     		lsls	r3, r3, #2
 5190 006a 1344     		add	r3, r3, r2
 5191 006c 9B00     		lsls	r3, r3, #2
 5192 006e 0B44     		add	r3, r3, r1
 5193 0070 1B68     		ldr	r3, [r3]
 5194 0072 002B     		cmp	r3, #0
 5195 0074 0AD1     		bne	.L363
 5196              		.loc 1 3897 0 is_stmt 0 discriminator 1
 5197 0076 029B     		ldr	r3, [sp, #8]
 5198 0078 DB6A     		ldr	r3, [r3, #44]
 5199 007a 0122     		movs	r2, #1
 5200 007c 02FA03F3 		lsl	r3, r2, r3
 5201 0080 DA43     		mvns	r2, r3
 5202 0082 1E4B     		ldr	r3, .L367+8
 5203 0084 1B68     		ldr	r3, [r3]
 5204 0086 1340     		ands	r3, r3, r2
 5205 0088 1C4A     		ldr	r2, .L367+8
 5206 008a 1360     		str	r3, [r2]
 5207              	.L363:
3898:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
3899:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
3900:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
3901:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3902:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
3903:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3904:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Inherit the priority before being moved into the new list. */
3905:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 5208              		.loc 1 3905 0 is_stmt 1
 5209 008c 194B     		ldr	r3, .L367
 5210 008e 1B68     		ldr	r3, [r3]
 5211 0090 DA6A     		ldr	r2, [r3, #44]
 5212 0092 029B     		ldr	r3, [sp, #8]
 5213 0094 DA62     		str	r2, [r3, #44]
3906:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxMutexHolderTCB );
 5214              		.loc 1 3906 0
 5215 0096 029B     		ldr	r3, [sp, #8]
 5216 0098 DB6A     		ldr	r3, [r3, #44]
 5217 009a 0122     		movs	r2, #1
 5218 009c 9A40     		lsls	r2, r2, r3
 5219 009e 174B     		ldr	r3, .L367+8
 5220 00a0 1B68     		ldr	r3, [r3]
 5221 00a2 1343     		orrs	r3, r3, r2
 5222 00a4 154A     		ldr	r2, .L367+8
 5223 00a6 1360     		str	r3, [r2]
 5224 00a8 029B     		ldr	r3, [sp, #8]
 5225 00aa DA6A     		ldr	r2, [r3, #44]
 5226 00ac 1346     		mov	r3, r2
 5227 00ae 9B00     		lsls	r3, r3, #2
 5228 00b0 1344     		add	r3, r3, r2
 5229 00b2 9B00     		lsls	r3, r3, #2
 5230 00b4 104A     		ldr	r2, .L367+4
 5231 00b6 1A44     		add	r2, r2, r3
 5232 00b8 029B     		ldr	r3, [sp, #8]
 5233 00ba 0433     		adds	r3, r3, #4
 5234 00bc 1946     		mov	r1, r3
 5235 00be 1046     		mov	r0, r2
 5236 00c0 FFF7FEFF 		bl	vListInsertEnd
 5237 00c4 04E0     		b	.L365
 5238              	.L362:
3907:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
3908:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
3909:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
3910:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Just inherit the priority. */
3911:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxMutexHolderTCB->uxPriority = pxCurrentTCB->uxPriority;
 5239              		.loc 1 3911 0
 5240 00c6 0B4B     		ldr	r3, .L367
 5241 00c8 1B68     		ldr	r3, [r3]
 5242 00ca DA6A     		ldr	r2, [r3, #44]
 5243 00cc 029B     		ldr	r3, [sp, #8]
 5244 00ce DA62     		str	r2, [r3, #44]
 5245              	.L365:
3912:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
3913:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3914:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				traceTASK_PRIORITY_INHERIT( pxMutexHolderTCB, pxCurrentTCB->uxPriority );
3915:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3916:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Inheritance occurred. */
3917:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5246              		.loc 1 3917 0
 5247 00d0 0123     		movs	r3, #1
 5248 00d2 0393     		str	r3, [sp, #12]
 5249 00d4 08E0     		b	.L359
 5250              	.L360:
3918:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3919:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
3920:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3921:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxMutexHolderTCB->uxBasePriority < pxCurrentTCB->uxPriority )
 5251              		.loc 1 3921 0
 5252 00d6 029B     		ldr	r3, [sp, #8]
 5253 00d8 9A6C     		ldr	r2, [r3, #72]
 5254 00da 064B     		ldr	r3, .L367
 5255 00dc 1B68     		ldr	r3, [r3]
 5256 00de DB6A     		ldr	r3, [r3, #44]
 5257 00e0 9A42     		cmp	r2, r3
 5258 00e2 01D2     		bcs	.L359
3922:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
3923:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The base priority of the mutex holder is lower than the
3924:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex, but the
3925:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					current priority of the mutex holder is not lower than the
3926:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					priority of the task attempting to take the mutex.
3927:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					Therefore the mutex holder must have already inherited a
3928:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					priority, but inheritance would have occurred if that had
3929:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					not been the case. */
3930:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 5259              		.loc 1 3930 0
 5260 00e4 0123     		movs	r3, #1
 5261 00e6 0393     		str	r3, [sp, #12]
 5262              	.L359:
3931:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
3932:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
3933:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
3934:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
3935:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
3936:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
3937:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3938:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
3939:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3940:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
3941:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
3942:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3943:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5263              		.loc 1 3943 0
 5264 00e8 039B     		ldr	r3, [sp, #12]
3944:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 5265              		.loc 1 3944 0
 5266 00ea 1846     		mov	r0, r3
 5267 00ec 05B0     		add	sp, sp, #20
 5268              	.LCFI119:
 5269              		.cfi_def_cfa_offset 4
 5270              		@ sp needed
 5271 00ee 5DF804FB 		ldr	pc, [sp], #4
 5272              	.L368:
 5273 00f2 00BF     		.align	2
 5274              	.L367:
 5275 00f4 00000000 		.word	pxCurrentTCB
 5276 00f8 00000000 		.word	pxReadyTasksLists
 5277 00fc 00000000 		.word	uxTopReadyPriority
 5278              		.cfi_endproc
 5279              	.LFE51:
 5281              		.section	.text.xTaskPriorityDisinherit,"ax",%progbits
 5282              		.align	1
 5283              		.global	xTaskPriorityDisinherit
 5284              		.syntax unified
 5285              		.thumb
 5286              		.thumb_func
 5287              		.fpu fpv4-sp-d16
 5289              	xTaskPriorityDisinherit:
 5290              	.LFB52:
3945:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3946:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
3947:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
3948:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3949:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
3950:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3951:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskPriorityDisinherit( TaskHandle_t const pxMutexHolder )
3952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 5291              		.loc 1 3952 0
 5292              		.cfi_startproc
 5293              		@ args = 0, pretend = 0, frame = 24
 5294              		@ frame_needed = 0, uses_anonymous_args = 0
 5295 0000 00B5     		push	{lr}
 5296              	.LCFI120:
 5297              		.cfi_def_cfa_offset 4
 5298              		.cfi_offset 14, -4
 5299 0002 87B0     		sub	sp, sp, #28
 5300              	.LCFI121:
 5301              		.cfi_def_cfa_offset 32
 5302 0004 0190     		str	r0, [sp, #4]
3953:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5303              		.loc 1 3953 0
 5304 0006 019B     		ldr	r3, [sp, #4]
 5305 0008 0493     		str	r3, [sp, #16]
3954:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdFALSE;
 5306              		.loc 1 3954 0
 5307 000a 0023     		movs	r3, #0
 5308 000c 0593     		str	r3, [sp, #20]
3955:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3956:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 5309              		.loc 1 3956 0
 5310 000e 019B     		ldr	r3, [sp, #4]
 5311 0010 002B     		cmp	r3, #0
 5312 0012 6CD0     		beq	.L370
3957:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
3958:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* A task can only have an inherited priority if it holds the mutex.
3959:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			If the mutex is held by a task then it cannot be given from an
3960:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			interrupt, and if a mutex is given by the holding task then it must
3961:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			be the running state task. */
3962:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB == pxCurrentTCB );
 5313              		.loc 1 3962 0
 5314 0014 384B     		ldr	r3, .L378
 5315 0016 1B68     		ldr	r3, [r3]
 5316 0018 049A     		ldr	r2, [sp, #16]
 5317 001a 9A42     		cmp	r2, r3
 5318 001c 09D0     		beq	.L371
 5319              	.LBB192:
 5320              	.LBB193:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5321              		.loc 2 195 0 discriminator 1
 5322              		.syntax unified
 5323              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 5324 001e 4FF05003 			mov r3, #80												
 5325 0022 83F31188 		msr basepri, r3											
 5326 0026 BFF36F8F 		isb														
 5327 002a BFF34F8F 		dsb														
 5328              	
 5329              	@ 0 "" 2
 5330              		.thumb
 5331              		.syntax unified
 5332 002e 0393     		str	r3, [sp, #12]
 5333              	.L372:
 5334              	.LBE193:
 5335              	.LBE192:
 5336              		.loc 1 3962 0 discriminator 1
 5337 0030 FEE7     		b	.L372
 5338              	.L371:
3963:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 5339              		.loc 1 3963 0
 5340 0032 049B     		ldr	r3, [sp, #16]
 5341 0034 DB6C     		ldr	r3, [r3, #76]
 5342 0036 002B     		cmp	r3, #0
 5343 0038 09D1     		bne	.L373
 5344              	.LBB194:
 5345              	.LBB195:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5346              		.loc 2 195 0 discriminator 1
 5347              		.syntax unified
 5348              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 5349 003a 4FF05003 			mov r3, #80												
 5350 003e 83F31188 		msr basepri, r3											
 5351 0042 BFF36F8F 		isb														
 5352 0046 BFF34F8F 		dsb														
 5353              	
 5354              	@ 0 "" 2
 5355              		.thumb
 5356              		.syntax unified
 5357 004a 0293     		str	r3, [sp, #8]
 5358              	.L374:
 5359              	.LBE195:
 5360              	.LBE194:
 5361              		.loc 1 3963 0 discriminator 2
 5362 004c FEE7     		b	.L374
 5363              	.L373:
3964:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			( pxTCB->uxMutexesHeld )--;
 5364              		.loc 1 3964 0
 5365 004e 049B     		ldr	r3, [sp, #16]
 5366 0050 DB6C     		ldr	r3, [r3, #76]
 5367 0052 5A1E     		subs	r2, r3, #1
 5368 0054 049B     		ldr	r3, [sp, #16]
 5369 0056 DA64     		str	r2, [r3, #76]
3965:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3966:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Has the holder of the mutex inherited the priority of another
3967:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			task? */
3968:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != pxTCB->uxBasePriority )
 5370              		.loc 1 3968 0
 5371 0058 049B     		ldr	r3, [sp, #16]
 5372 005a DA6A     		ldr	r2, [r3, #44]
 5373 005c 049B     		ldr	r3, [sp, #16]
 5374 005e 9B6C     		ldr	r3, [r3, #72]
 5375 0060 9A42     		cmp	r2, r3
 5376 0062 44D0     		beq	.L370
3969:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
3970:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held. */
3971:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == ( UBaseType_t ) 0 )
 5377              		.loc 1 3971 0
 5378 0064 049B     		ldr	r3, [sp, #16]
 5379 0066 DB6C     		ldr	r3, [r3, #76]
 5380 0068 002B     		cmp	r3, #0
 5381 006a 40D1     		bne	.L370
3972:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
3973:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* A task can only have an inherited priority if it holds
3974:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					the mutex.  If the mutex is held by a task then it cannot be
3975:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					given from an interrupt, and if a mutex is given by the
3976:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					holding task then it must be the running state task.  Remove
3977:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					the holding task from the ready list. */
3978:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 5382              		.loc 1 3978 0
 5383 006c 049B     		ldr	r3, [sp, #16]
 5384 006e 0433     		adds	r3, r3, #4
 5385 0070 1846     		mov	r0, r3
 5386 0072 FFF7FEFF 		bl	uxListRemove
 5387 0076 0346     		mov	r3, r0
 5388 0078 002B     		cmp	r3, #0
 5389 007a 15D1     		bne	.L375
3979:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
3980:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 5390              		.loc 1 3980 0
 5391 007c 049B     		ldr	r3, [sp, #16]
 5392 007e DA6A     		ldr	r2, [r3, #44]
 5393 0080 1E49     		ldr	r1, .L378+4
 5394 0082 1346     		mov	r3, r2
 5395 0084 9B00     		lsls	r3, r3, #2
 5396 0086 1344     		add	r3, r3, r2
 5397 0088 9B00     		lsls	r3, r3, #2
 5398 008a 0B44     		add	r3, r3, r1
 5399 008c 1B68     		ldr	r3, [r3]
 5400 008e 002B     		cmp	r3, #0
 5401 0090 0AD1     		bne	.L375
 5402              		.loc 1 3980 0 is_stmt 0 discriminator 1
 5403 0092 049B     		ldr	r3, [sp, #16]
 5404 0094 DB6A     		ldr	r3, [r3, #44]
 5405 0096 0122     		movs	r2, #1
 5406 0098 02FA03F3 		lsl	r3, r2, r3
 5407 009c DA43     		mvns	r2, r3
 5408 009e 184B     		ldr	r3, .L378+8
 5409 00a0 1B68     		ldr	r3, [r3]
 5410 00a2 1340     		ands	r3, r3, r2
 5411 00a4 164A     		ldr	r2, .L378+8
 5412 00a6 1360     		str	r3, [r2]
 5413              	.L375:
3981:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
3982:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
3983:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
3984:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
3985:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
3986:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3987:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority before adding the task into the
3988:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					new	ready list. */
3989:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
3990:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = pxTCB->uxBasePriority;
 5414              		.loc 1 3990 0 is_stmt 1
 5415 00a8 049B     		ldr	r3, [sp, #16]
 5416 00aa 9A6C     		ldr	r2, [r3, #72]
 5417 00ac 049B     		ldr	r3, [sp, #16]
 5418 00ae DA62     		str	r2, [r3, #44]
3991:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3992:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Reset the event list item value.  It cannot be in use for
3993:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					any other purpose if this task is running, and it must be
3994:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					running to give back the mutex. */
3995:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( T
 5419              		.loc 1 3995 0
 5420 00b0 049B     		ldr	r3, [sp, #16]
 5421 00b2 DB6A     		ldr	r3, [r3, #44]
 5422 00b4 C3F10502 		rsb	r2, r3, #5
 5423 00b8 049B     		ldr	r3, [sp, #16]
 5424 00ba 9A61     		str	r2, [r3, #24]
3996:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 5425              		.loc 1 3996 0
 5426 00bc 049B     		ldr	r3, [sp, #16]
 5427 00be DB6A     		ldr	r3, [r3, #44]
 5428 00c0 0122     		movs	r2, #1
 5429 00c2 9A40     		lsls	r2, r2, r3
 5430 00c4 0E4B     		ldr	r3, .L378+8
 5431 00c6 1B68     		ldr	r3, [r3]
 5432 00c8 1343     		orrs	r3, r3, r2
 5433 00ca 0D4A     		ldr	r2, .L378+8
 5434 00cc 1360     		str	r3, [r2]
 5435 00ce 049B     		ldr	r3, [sp, #16]
 5436 00d0 DA6A     		ldr	r2, [r3, #44]
 5437 00d2 1346     		mov	r3, r2
 5438 00d4 9B00     		lsls	r3, r3, #2
 5439 00d6 1344     		add	r3, r3, r2
 5440 00d8 9B00     		lsls	r3, r3, #2
 5441 00da 084A     		ldr	r2, .L378+4
 5442 00dc 1A44     		add	r2, r2, r3
 5443 00de 049B     		ldr	r3, [sp, #16]
 5444 00e0 0433     		adds	r3, r3, #4
 5445 00e2 1946     		mov	r1, r3
 5446 00e4 1046     		mov	r0, r2
 5447 00e6 FFF7FEFF 		bl	vListInsertEnd
3997:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
3998:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Return true to indicate that a context switch is required.
3999:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					This is only actually required in the corner case whereby
4000:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					multiple mutexes were held and the mutexes were given back
4001:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					in an order different to that in which they were taken.
4002:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					If a context switch did not occur when the first mutex was
4003:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					returned, even if a task was waiting on it, then a context
4004:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					switch should occur when the last mutex is returned whether
4005:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					a task is waiting on it or not. */
4006:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xReturn = pdTRUE;
 5448              		.loc 1 4006 0
 5449 00ea 0123     		movs	r3, #1
 5450 00ec 0593     		str	r3, [sp, #20]
 5451              	.L370:
4007:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4008:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4009:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4010:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4011:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4012:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4013:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4014:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4015:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4016:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4017:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4018:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
4019:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4020:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4021:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4022:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4023:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 5452              		.loc 1 4023 0
 5453 00ee 059B     		ldr	r3, [sp, #20]
4024:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 5454              		.loc 1 4024 0
 5455 00f0 1846     		mov	r0, r3
 5456 00f2 07B0     		add	sp, sp, #28
 5457              	.LCFI122:
 5458              		.cfi_def_cfa_offset 4
 5459              		@ sp needed
 5460 00f4 5DF804FB 		ldr	pc, [sp], #4
 5461              	.L379:
 5462              		.align	2
 5463              	.L378:
 5464 00f8 00000000 		.word	pxCurrentTCB
 5465 00fc 00000000 		.word	pxReadyTasksLists
 5466 0100 00000000 		.word	uxTopReadyPriority
 5467              		.cfi_endproc
 5468              	.LFE52:
 5470              		.section	.text.vTaskPriorityDisinheritAfterTimeout,"ax",%progbits
 5471              		.align	1
 5472              		.global	vTaskPriorityDisinheritAfterTimeout
 5473              		.syntax unified
 5474              		.thumb
 5475              		.thumb_func
 5476              		.fpu fpv4-sp-d16
 5478              	vTaskPriorityDisinheritAfterTimeout:
 5479              	.LFB53:
4025:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4026:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4027:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4028:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4029:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4030:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4031:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskPriorityDisinheritAfterTimeout( TaskHandle_t const pxMutexHolder, UBaseType_t uxHighestP
4032:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 5480              		.loc 1 4032 0
 5481              		.cfi_startproc
 5482              		@ args = 0, pretend = 0, frame = 32
 5483              		@ frame_needed = 0, uses_anonymous_args = 0
 5484 0000 00B5     		push	{lr}
 5485              	.LCFI123:
 5486              		.cfi_def_cfa_offset 4
 5487              		.cfi_offset 14, -4
 5488 0002 89B0     		sub	sp, sp, #36
 5489              	.LCFI124:
 5490              		.cfi_def_cfa_offset 40
 5491 0004 0190     		str	r0, [sp, #4]
 5492 0006 0091     		str	r1, [sp]
4033:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t * const pxTCB = pxMutexHolder;
 5493              		.loc 1 4033 0
 5494 0008 019B     		ldr	r3, [sp, #4]
 5495 000a 0693     		str	r3, [sp, #24]
4034:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxPriorityUsedOnEntry, uxPriorityToUse;
4035:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	const UBaseType_t uxOnlyOneMutexHeld = ( UBaseType_t ) 1;
 5496              		.loc 1 4035 0
 5497 000c 0123     		movs	r3, #1
 5498 000e 0593     		str	r3, [sp, #20]
4036:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4037:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxMutexHolder != NULL )
 5499              		.loc 1 4037 0
 5500 0010 019B     		ldr	r3, [sp, #4]
 5501 0012 002B     		cmp	r3, #0
 5502 0014 00F08180 		beq	.L391
4038:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4039:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If pxMutexHolder is not NULL then the holder must hold at least
4040:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			one mutex. */
4041:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			configASSERT( pxTCB->uxMutexesHeld );
 5503              		.loc 1 4041 0
 5504 0018 069B     		ldr	r3, [sp, #24]
 5505 001a DB6C     		ldr	r3, [r3, #76]
 5506 001c 002B     		cmp	r3, #0
 5507 001e 09D1     		bne	.L382
 5508              	.LBB196:
 5509              	.LBB197:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5510              		.loc 2 195 0 discriminator 1
 5511              		.syntax unified
 5512              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 5513 0020 4FF05003 			mov r3, #80												
 5514 0024 83F31188 		msr basepri, r3											
 5515 0028 BFF36F8F 		isb														
 5516 002c BFF34F8F 		dsb														
 5517              	
 5518              	@ 0 "" 2
 5519              		.thumb
 5520              		.syntax unified
 5521 0030 0393     		str	r3, [sp, #12]
 5522              	.L383:
 5523              	.LBE197:
 5524              	.LBE196:
 5525              		.loc 1 4041 0 discriminator 1
 5526 0032 FEE7     		b	.L383
 5527              	.L382:
4042:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4043:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Determine the priority to which the priority of the task that
4044:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			holds the mutex should be set.  This will be the greater of the
4045:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			holding task's base priority and the priority of the highest
4046:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			priority task that is waiting to obtain the mutex. */
4047:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxBasePriority < uxHighestPriorityWaitingTask )
 5528              		.loc 1 4047 0
 5529 0034 069B     		ldr	r3, [sp, #24]
 5530 0036 9B6C     		ldr	r3, [r3, #72]
 5531 0038 009A     		ldr	r2, [sp]
 5532 003a 9A42     		cmp	r2, r3
 5533 003c 02D9     		bls	.L384
4048:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4049:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = uxHighestPriorityWaitingTask;
 5534              		.loc 1 4049 0
 5535 003e 009B     		ldr	r3, [sp]
 5536 0040 0793     		str	r3, [sp, #28]
 5537 0042 02E0     		b	.L385
 5538              	.L384:
4050:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4051:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4052:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4053:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				uxPriorityToUse = pxTCB->uxBasePriority;
 5539              		.loc 1 4053 0
 5540 0044 069B     		ldr	r3, [sp, #24]
 5541 0046 9B6C     		ldr	r3, [r3, #72]
 5542 0048 0793     		str	r3, [sp, #28]
 5543              	.L385:
4054:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4055:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4056:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Does the priority need to change? */
4057:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB->uxPriority != uxPriorityToUse )
 5544              		.loc 1 4057 0
 5545 004a 069B     		ldr	r3, [sp, #24]
 5546 004c DB6A     		ldr	r3, [r3, #44]
 5547 004e 079A     		ldr	r2, [sp, #28]
 5548 0050 9A42     		cmp	r2, r3
 5549 0052 62D0     		beq	.L391
4058:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4059:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Only disinherit if no other mutexes are held.  This is a
4060:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				simplification in the priority inheritance implementation.  If
4061:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				the task that holds the mutex is also holding other mutexes then
4062:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				the other mutexes may have caused the priority inheritance. */
4063:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxMutexesHeld == uxOnlyOneMutexHeld )
 5550              		.loc 1 4063 0
 5551 0054 069B     		ldr	r3, [sp, #24]
 5552 0056 DB6C     		ldr	r3, [r3, #76]
 5553 0058 059A     		ldr	r2, [sp, #20]
 5554 005a 9A42     		cmp	r2, r3
 5555 005c 5DD1     		bne	.L391
4064:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4065:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* If a task has timed out because it already holds the
4066:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mutex it was trying to obtain then it cannot of inherited
4067:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					its own priority. */
4068:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB != pxCurrentTCB );
 5556              		.loc 1 4068 0
 5557 005e 314B     		ldr	r3, .L392
 5558 0060 1B68     		ldr	r3, [r3]
 5559 0062 069A     		ldr	r2, [sp, #24]
 5560 0064 9A42     		cmp	r2, r3
 5561 0066 09D1     		bne	.L386
 5562              	.LBB198:
 5563              	.LBB199:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 5564              		.loc 2 195 0 discriminator 1
 5565              		.syntax unified
 5566              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 5567 0068 4FF05003 			mov r3, #80												
 5568 006c 83F31188 		msr basepri, r3											
 5569 0070 BFF36F8F 		isb														
 5570 0074 BFF34F8F 		dsb														
 5571              	
 5572              	@ 0 "" 2
 5573              		.thumb
 5574              		.syntax unified
 5575 0078 0293     		str	r3, [sp, #8]
 5576              	.L387:
 5577              	.LBE199:
 5578              	.LBE198:
 5579              		.loc 1 4068 0 discriminator 2
 5580 007a FEE7     		b	.L387
 5581              	.L386:
4069:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4070:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Disinherit the priority, remembering the previous
4071:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					priority to facilitate determining the subject task's
4072:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					state. */
4073:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					traceTASK_PRIORITY_DISINHERIT( pxTCB, pxTCB->uxBasePriority );
4074:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					uxPriorityUsedOnEntry = pxTCB->uxPriority;
 5582              		.loc 1 4074 0
 5583 007c 069B     		ldr	r3, [sp, #24]
 5584 007e DB6A     		ldr	r3, [r3, #44]
 5585 0080 0493     		str	r3, [sp, #16]
4075:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB->uxPriority = uxPriorityToUse;
 5586              		.loc 1 4075 0
 5587 0082 069B     		ldr	r3, [sp, #24]
 5588 0084 079A     		ldr	r2, [sp, #28]
 5589 0086 DA62     		str	r2, [r3, #44]
4076:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4077:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Only reset the event list item value if the value is not
4078:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					being used for anything else. */
4079:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( ( listGET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ) ) & taskEVENT_LIST_ITEM_VALUE_IN_USE
 5590              		.loc 1 4079 0
 5591 0088 069B     		ldr	r3, [sp, #24]
 5592 008a 9B69     		ldr	r3, [r3, #24]
 5593 008c 002B     		cmp	r3, #0
 5594 008e 04DB     		blt	.L388
4080:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4081:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						listSET_LIST_ITEM_VALUE( &( pxTCB->xEventListItem ), ( TickType_t ) configMAX_PRIORITIES - ( 
 5595              		.loc 1 4081 0
 5596 0090 079B     		ldr	r3, [sp, #28]
 5597 0092 C3F10502 		rsb	r2, r3, #5
 5598 0096 069B     		ldr	r3, [sp, #24]
 5599 0098 9A61     		str	r2, [r3, #24]
 5600              	.L388:
4082:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4083:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
4084:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4085:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4086:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4087:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4088:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* If the running task is not the task that holds the mutex
4089:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					then the task that holds the mutex could be in either the
4090:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					Ready, Blocked or Suspended states.  Only remove the task
4091:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					from its current state list if it is in the Ready state as
4092:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					the task's priority is going to change and there is one
4093:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					Ready list per priority. */
4094:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( listIS_CONTAINED_WITHIN( &( pxReadyTasksLists[ uxPriorityUsedOnEntry ] ), &( pxTCB->xState
 5601              		.loc 1 4094 0
 5602 009a 069B     		ldr	r3, [sp, #24]
 5603 009c 5969     		ldr	r1, [r3, #20]
 5604 009e 049A     		ldr	r2, [sp, #16]
 5605 00a0 1346     		mov	r3, r2
 5606 00a2 9B00     		lsls	r3, r3, #2
 5607 00a4 1344     		add	r3, r3, r2
 5608 00a6 9B00     		lsls	r3, r3, #2
 5609 00a8 1F4A     		ldr	r2, .L392+4
 5610 00aa 1344     		add	r3, r3, r2
 5611 00ac 9942     		cmp	r1, r3
 5612 00ae 34D1     		bne	.L391
4095:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4096:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						if( uxListRemove( &( pxTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 5613              		.loc 1 4096 0
 5614 00b0 069B     		ldr	r3, [sp, #24]
 5615 00b2 0433     		adds	r3, r3, #4
 5616 00b4 1846     		mov	r0, r3
 5617 00b6 FFF7FEFF 		bl	uxListRemove
 5618 00ba 0346     		mov	r3, r0
 5619 00bc 002B     		cmp	r3, #0
 5620 00be 15D1     		bne	.L389
4097:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
4098:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							taskRESET_READY_PRIORITY( pxTCB->uxPriority );
 5621              		.loc 1 4098 0
 5622 00c0 069B     		ldr	r3, [sp, #24]
 5623 00c2 DA6A     		ldr	r2, [r3, #44]
 5624 00c4 1849     		ldr	r1, .L392+4
 5625 00c6 1346     		mov	r3, r2
 5626 00c8 9B00     		lsls	r3, r3, #2
 5627 00ca 1344     		add	r3, r3, r2
 5628 00cc 9B00     		lsls	r3, r3, #2
 5629 00ce 0B44     		add	r3, r3, r1
 5630 00d0 1B68     		ldr	r3, [r3]
 5631 00d2 002B     		cmp	r3, #0
 5632 00d4 0AD1     		bne	.L389
 5633              		.loc 1 4098 0 is_stmt 0 discriminator 1
 5634 00d6 069B     		ldr	r3, [sp, #24]
 5635 00d8 DB6A     		ldr	r3, [r3, #44]
 5636 00da 0122     		movs	r2, #1
 5637 00dc 02FA03F3 		lsl	r3, r2, r3
 5638 00e0 DA43     		mvns	r2, r3
 5639 00e2 124B     		ldr	r3, .L392+8
 5640 00e4 1B68     		ldr	r3, [r3]
 5641 00e6 1340     		ands	r3, r3, r2
 5642 00e8 104A     		ldr	r2, .L392+8
 5643 00ea 1360     		str	r3, [r2]
 5644              	.L389:
4099:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
4100:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						else
4101:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
4102:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							mtCOVERAGE_TEST_MARKER();
4103:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
4104:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4105:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						prvAddTaskToReadyList( pxTCB );
 5645              		.loc 1 4105 0 is_stmt 1
 5646 00ec 069B     		ldr	r3, [sp, #24]
 5647 00ee DB6A     		ldr	r3, [r3, #44]
 5648 00f0 0122     		movs	r2, #1
 5649 00f2 9A40     		lsls	r2, r2, r3
 5650 00f4 0D4B     		ldr	r3, .L392+8
 5651 00f6 1B68     		ldr	r3, [r3]
 5652 00f8 1343     		orrs	r3, r3, r2
 5653 00fa 0C4A     		ldr	r2, .L392+8
 5654 00fc 1360     		str	r3, [r2]
 5655 00fe 069B     		ldr	r3, [sp, #24]
 5656 0100 DA6A     		ldr	r2, [r3, #44]
 5657 0102 1346     		mov	r3, r2
 5658 0104 9B00     		lsls	r3, r3, #2
 5659 0106 1344     		add	r3, r3, r2
 5660 0108 9B00     		lsls	r3, r3, #2
 5661 010a 074A     		ldr	r2, .L392+4
 5662 010c 1A44     		add	r2, r2, r3
 5663 010e 069B     		ldr	r3, [sp, #24]
 5664 0110 0433     		adds	r3, r3, #4
 5665 0112 1946     		mov	r1, r3
 5666 0114 1046     		mov	r0, r2
 5667 0116 FFF7FEFF 		bl	vListInsertEnd
 5668              	.L391:
4106:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4107:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
4108:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4109:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						mtCOVERAGE_TEST_MARKER();
4110:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4111:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4112:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4113:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4114:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4115:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4116:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4117:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4118:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4119:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4120:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4121:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4122:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
4123:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4124:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4125:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4126:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 5669              		.loc 1 4126 0
 5670 011a 00BF     		nop
 5671 011c 09B0     		add	sp, sp, #36
 5672              	.LCFI125:
 5673              		.cfi_def_cfa_offset 4
 5674              		@ sp needed
 5675 011e 5DF804FB 		ldr	pc, [sp], #4
 5676              	.L393:
 5677 0122 00BF     		.align	2
 5678              	.L392:
 5679 0124 00000000 		.word	pxCurrentTCB
 5680 0128 00000000 		.word	pxReadyTasksLists
 5681 012c 00000000 		.word	uxTopReadyPriority
 5682              		.cfi_endproc
 5683              	.LFE53:
 5685              		.section	.text.uxTaskResetEventItemValue,"ax",%progbits
 5686              		.align	1
 5687              		.global	uxTaskResetEventItemValue
 5688              		.syntax unified
 5689              		.thumb
 5690              		.thumb_func
 5691              		.fpu fpv4-sp-d16
 5693              	uxTaskResetEventItemValue:
 5694              	.LFB54:
4127:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4128:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4129:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4130:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4131:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4132:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4133:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskEnterCritical( void )
4134:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
4135:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portDISABLE_INTERRUPTS();
4136:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4137:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4138:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4139:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxCriticalNesting )++;
4140:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4141:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* This is not the interrupt safe version of the enter critical
4142:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			function so	assert() if it is being called from an interrupt
4143:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			context.  Only API functions that end in "FromISR" can be used in an
4144:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			interrupt.  Only assert if the critical nesting count is 1 to
4145:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			protect against recursive calls if the assert function also uses a
4146:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			critical section. */
4147:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting == 1 )
4148:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4149:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				portASSERT_IF_IN_ISR();
4150:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4151:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4152:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
4153:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4154:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4155:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4156:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
4157:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4158:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4159:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4160:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4161:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( portCRITICAL_NESTING_IN_TCB == 1 )
4162:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4163:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskExitCritical( void )
4164:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
4165:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xSchedulerRunning != pdFALSE )
4166:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4167:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->uxCriticalNesting > 0U )
4168:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4169:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				( pxCurrentTCB->uxCriticalNesting )--;
4170:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4171:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxCurrentTCB->uxCriticalNesting == 0U )
4172:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4173:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					portENABLE_INTERRUPTS();
4174:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4175:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4176:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4177:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4178:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4179:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4180:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4181:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4182:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4183:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4184:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4185:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
4186:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4187:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4188:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4189:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
4190:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4191:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* portCRITICAL_NESTING_IN_TCB */
4192:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4193:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4194:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) )
4195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4196:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	static char *prvWriteNameToBuffer( char *pcBuffer, const char *pcTaskName )
4197:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
4198:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	size_t x;
4199:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4200:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Start by copying the entire string. */
4201:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		strcpy( pcBuffer, pcTaskName );
4202:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4203:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Pad the end of the string with spaces to ensure columns line up when
4204:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		printed out. */
4205:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		for( x = strlen( pcBuffer ); x < ( size_t ) ( configMAX_TASK_NAME_LEN - 1 ); x++ )
4206:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4207:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pcBuffer[ x ] = ' ';
4208:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4209:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4210:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Terminate. */
4211:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pcBuffer[ x ] = ( char ) 0x00;
4212:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4213:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Return the new end of string. */
4214:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return &( pcBuffer[ x ] );
4215:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
4216:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4217:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) */
4218:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4219:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4220:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( config
4221:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4222:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskList( char * pcWriteBuffer )
4223:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
4224:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4225:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4226:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	char cStatus;
4227:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4228:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/*
4229:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4230:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 *
4231:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4232:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4233:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4234:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 *
4235:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * vTaskList() calls uxTaskGetSystemState(), then formats part of the
4236:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * uxTaskGetSystemState() output into a human readable table that
4237:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * displays task names, states and stack usage.
4238:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 *
4239:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * vTaskList() has a dependency on the sprintf() C library function that
4240:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * might bloat the code size, use a lot of stack, and provide different
4241:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * results on different platforms.  An alternative, tiny, third party,
4242:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * and limited functionality implementation of sprintf() is provided in
4243:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * many of the FreeRTOS/Demo sub-directories in a file called
4244:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * printf-stdarg.c (note printf-stdarg.c does not provide a full
4245:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * snprintf() implementation!).
4246:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 *
4247:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4248:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4249:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskList().
4250:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 */
4251:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4252:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4253:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4254:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4255:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4256:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4257:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		function is executing. */
4258:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4259:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4260:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  if
4261:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4262:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4263:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4264:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4265:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4266:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4267:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4268:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, NULL );
4269:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4270:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Create a human readable table from the binary data. */
4271:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			for( x = 0; x < uxArraySize; x++ )
4272:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4273:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				switch( pxTaskStatusArray[ x ].eCurrentState )
4274:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4275:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					case eRunning:		cStatus = tskRUNNING_CHAR;
4276:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										break;
4277:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4278:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					case eReady:		cStatus = tskREADY_CHAR;
4279:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										break;
4280:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4281:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					case eBlocked:		cStatus = tskBLOCKED_CHAR;
4282:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										break;
4283:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4284:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					case eSuspended:	cStatus = tskSUSPENDED_CHAR;
4285:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										break;
4286:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4287:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					case eDeleted:		cStatus = tskDELETED_CHAR;
4288:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										break;
4289:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4290:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					case eInvalid:		/* Fall through. */
4291:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					default:			/* Should not get here, but it is included
4292:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										to prevent static checking errors. */
4293:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										cStatus = ( char ) 0x00;
4294:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 										break;
4295:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4296:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4297:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Write the task name to the string, padding with spaces so it
4298:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				can be printed in tabular form more easily. */
4299:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4300:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4301:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Write the rest of the string. */
4302:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				sprintf( pcWriteBuffer, "\t%c\t%u\t%u\t%u\r\n", cStatus, ( unsigned int ) pxTaskStatusArray[ x 
4303:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers 
4304:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4305:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4306:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4307:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4308:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4309:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4310:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
4311:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4312:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4313:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4314:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
4315:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4316:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* ( ( configUSE_TRACE_FACILITY == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( 
4317:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*----------------------------------------------------------*/
4318:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4319:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) && ( c
4320:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4321:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskGetRunTimeStats( char *pcWriteBuffer )
4322:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
4323:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskStatus_t *pxTaskStatusArray;
4324:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxArraySize, x;
4325:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uint32_t ulTotalTime, ulStatsAsPercentage;
4326:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4327:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#if( configUSE_TRACE_FACILITY != 1 )
4328:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4329:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			#error configUSE_TRACE_FACILITY must also be set to 1 in FreeRTOSConfig.h to use vTaskGetRunTime
4330:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4331:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		#endif
4332:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4333:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/*
4334:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * PLEASE NOTE:
4335:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 *
4336:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * This function is provided for convenience only, and is used by many
4337:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * of the demo applications.  Do not consider it to be part of the
4338:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * scheduler.
4339:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 *
4340:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() calls uxTaskGetSystemState(), then formats part
4341:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * of the uxTaskGetSystemState() output into a human readable table that
4342:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * displays the amount of time each task has spent in the Running state
4343:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * in both absolute and percentage terms.
4344:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 *
4345:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * vTaskGetRunTimeStats() has a dependency on the sprintf() C library
4346:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * function that might bloat the code size, use a lot of stack, and
4347:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * provide different results on different platforms.  An alternative,
4348:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * tiny, third party, and limited functionality implementation of
4349:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * sprintf() is provided in many of the FreeRTOS/Demo sub-directories in
4350:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * a file called printf-stdarg.c (note printf-stdarg.c does not provide
4351:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * a full snprintf() implementation!).
4352:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 *
4353:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * It is recommended that production systems call uxTaskGetSystemState()
4354:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * directly to get access to raw stats data, rather than indirectly
4355:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 * through a call to vTaskGetRunTimeStats().
4356:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		 */
4357:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4358:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Make sure the write buffer does not contain a string. */
4359:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		*pcWriteBuffer = ( char ) 0x00;
4360:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4361:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Take a snapshot of the number of tasks in case it changes while this
4362:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		function is executing. */
4363:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxArraySize = uxCurrentNumberOfTasks;
4364:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4365:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Allocate an array index for each task.  NOTE!  If
4366:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configSUPPORT_DYNAMIC_ALLOCATION is set to 0 then pvPortMalloc() will
4367:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		equate to NULL. */
4368:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTaskStatusArray = pvPortMalloc( uxCurrentNumberOfTasks * sizeof( TaskStatus_t ) ); /*lint !e907
4369:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4370:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxTaskStatusArray != NULL )
4371:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4372:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Generate the (binary) data. */
4373:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			uxArraySize = uxTaskGetSystemState( pxTaskStatusArray, uxArraySize, &ulTotalTime );
4374:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4375:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* For percentage calculations. */
4376:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			ulTotalTime /= 100UL;
4377:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4378:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Avoid divide by zero errors. */
4379:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( ulTotalTime > 0UL )
4380:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4381:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Create a human readable table from the binary data. */
4382:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				for( x = 0; x < uxArraySize; x++ )
4383:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4384:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* What percentage of the total run time has the task used?
4385:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					This will always be rounded down to the nearest integer.
4386:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					ulTotalRunTimeDiv100 has already been divided by 100. */
4387:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					ulStatsAsPercentage = pxTaskStatusArray[ x ].ulRunTimeCounter / ulTotalTime;
4388:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4389:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Write the task name to the string, padding with
4390:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					spaces so it can be printed in tabular form more
4391:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					easily. */
4392:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer = prvWriteNameToBuffer( pcWriteBuffer, pxTaskStatusArray[ x ].pcTaskName );
4393:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4394:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( ulStatsAsPercentage > 0UL )
4395:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4396:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4397:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
4398:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t%lu%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter, ulSta
4399:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
4400:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#else
4401:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
4402:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4403:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4404:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t%u%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4405:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
4406:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#endif
4407:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4408:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
4409:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4410:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* If the percentage is zero here then the task has
4411:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						consumed less than 1% of the total run time. */
4412:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#ifdef portLU_PRINTF_SPECIFIER_REQUIRED
4413:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
4414:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%lu\t\t<1%%\r\n", pxTaskStatusArray[ x ].ulRunTimeCounter );
4415:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
4416:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#else
4417:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						{
4418:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							/* sizeof( int ) == sizeof( long ) so a smaller
4419:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							printf() library can be used. */
4420:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 							sprintf( pcWriteBuffer, "\t%u\t\t<1%%\r\n", ( unsigned int ) pxTaskStatusArray[ x ].ulRunTim
4421:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						}
4422:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						#endif
4423:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4424:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4425:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pcWriteBuffer += strlen( pcWriteBuffer ); /*lint !e9016 Pointer arithmetic ok on char pointers
4426:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4427:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4428:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4429:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4430:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4431:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4432:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4433:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Free the array again.  NOTE!  If configSUPPORT_DYNAMIC_ALLOCATION
4434:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			is 0 then vPortFree() will be #defined to nothing. */
4435:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vPortFree( pxTaskStatusArray );
4436:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4437:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
4438:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4439:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			mtCOVERAGE_TEST_MARKER();
4440:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4441:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
4442:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4443:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* ( ( configGENERATE_RUN_TIME_STATS == 1 ) && ( configUSE_STATS_FORMATTING_FUNCTIONS > 0 ) 
4444:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4445:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4446:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TickType_t uxTaskResetEventItemValue( void )
4447:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 5695              		.loc 1 4447 0
 5696              		.cfi_startproc
 5697              		@ args = 0, pretend = 0, frame = 8
 5698              		@ frame_needed = 0, uses_anonymous_args = 0
 5699              		@ link register save eliminated.
 5700 0000 82B0     		sub	sp, sp, #8
 5701              	.LCFI126:
 5702              		.cfi_def_cfa_offset 8
4448:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TickType_t uxReturn;
4449:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4450:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uxReturn = listGET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ) );
 5703              		.loc 1 4450 0
 5704 0002 084B     		ldr	r3, .L396
 5705 0004 1B68     		ldr	r3, [r3]
 5706 0006 9B69     		ldr	r3, [r3, #24]
 5707 0008 0193     		str	r3, [sp, #4]
4451:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4452:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Reset the event list item to its normal value - so it can be used with
4453:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	queues and semaphores. */
4454:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xEventListItem ), ( ( TickType_t ) configMAX_PRIORITIES 
 5708              		.loc 1 4454 0
 5709 000a 064B     		ldr	r3, .L396
 5710 000c 1B68     		ldr	r3, [r3]
 5711 000e DA6A     		ldr	r2, [r3, #44]
 5712 0010 044B     		ldr	r3, .L396
 5713 0012 1B68     		ldr	r3, [r3]
 5714 0014 C2F10502 		rsb	r2, r2, #5
 5715 0018 9A61     		str	r2, [r3, #24]
4455:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4456:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	return uxReturn;
 5716              		.loc 1 4456 0
 5717 001a 019B     		ldr	r3, [sp, #4]
4457:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 5718              		.loc 1 4457 0
 5719 001c 1846     		mov	r0, r3
 5720 001e 02B0     		add	sp, sp, #8
 5721              	.LCFI127:
 5722              		.cfi_def_cfa_offset 0
 5723              		@ sp needed
 5724 0020 7047     		bx	lr
 5725              	.L397:
 5726 0022 00BF     		.align	2
 5727              	.L396:
 5728 0024 00000000 		.word	pxCurrentTCB
 5729              		.cfi_endproc
 5730              	.LFE54:
 5732              		.section	.text.pvTaskIncrementMutexHeldCount,"ax",%progbits
 5733              		.align	1
 5734              		.global	pvTaskIncrementMutexHeldCount
 5735              		.syntax unified
 5736              		.thumb
 5737              		.thumb_func
 5738              		.fpu fpv4-sp-d16
 5740              	pvTaskIncrementMutexHeldCount:
 5741              	.LFB55:
4458:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4459:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4460:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if ( configUSE_MUTEXES == 1 )
4461:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4462:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TaskHandle_t pvTaskIncrementMutexHeldCount( void )
4463:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 5742              		.loc 1 4463 0
 5743              		.cfi_startproc
 5744              		@ args = 0, pretend = 0, frame = 0
 5745              		@ frame_needed = 0, uses_anonymous_args = 0
 5746              		@ link register save eliminated.
4464:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If xSemaphoreCreateMutex() is called before any tasks have been created
4465:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		then pxCurrentTCB will be NULL. */
4466:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( pxCurrentTCB != NULL )
 5747              		.loc 1 4466 0
 5748 0000 064B     		ldr	r3, .L401
 5749 0002 1B68     		ldr	r3, [r3]
 5750 0004 002B     		cmp	r3, #0
 5751 0006 04D0     		beq	.L399
4467:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4468:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			( pxCurrentTCB->uxMutexesHeld )++;
 5752              		.loc 1 4468 0
 5753 0008 044B     		ldr	r3, .L401
 5754 000a 1B68     		ldr	r3, [r3]
 5755 000c DA6C     		ldr	r2, [r3, #76]
 5756 000e 0132     		adds	r2, r2, #1
 5757 0010 DA64     		str	r2, [r3, #76]
 5758              	.L399:
4469:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4470:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4471:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return pxCurrentTCB;
 5759              		.loc 1 4471 0
 5760 0012 024B     		ldr	r3, .L401
 5761 0014 1B68     		ldr	r3, [r3]
4472:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 5762              		.loc 1 4472 0
 5763 0016 1846     		mov	r0, r3
 5764 0018 7047     		bx	lr
 5765              	.L402:
 5766 001a 00BF     		.align	2
 5767              	.L401:
 5768 001c 00000000 		.word	pxCurrentTCB
 5769              		.cfi_endproc
 5770              	.LFE55:
 5772              		.section	.text.ulTaskNotifyTake,"ax",%progbits
 5773              		.align	1
 5774              		.global	ulTaskNotifyTake
 5775              		.syntax unified
 5776              		.thumb
 5777              		.thumb_func
 5778              		.fpu fpv4-sp-d16
 5780              	ulTaskNotifyTake:
 5781              	.LFB56:
4473:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4474:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_MUTEXES */
4475:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4476:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4477:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4478:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4479:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uint32_t ulTaskNotifyTake( BaseType_t xClearCountOnExit, TickType_t xTicksToWait )
4480:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 5782              		.loc 1 4480 0
 5783              		.cfi_startproc
 5784              		@ args = 0, pretend = 0, frame = 16
 5785              		@ frame_needed = 0, uses_anonymous_args = 0
 5786 0000 00B5     		push	{lr}
 5787              	.LCFI128:
 5788              		.cfi_def_cfa_offset 4
 5789              		.cfi_offset 14, -4
 5790 0002 85B0     		sub	sp, sp, #20
 5791              	.LCFI129:
 5792              		.cfi_def_cfa_offset 24
 5793 0004 0190     		str	r0, [sp, #4]
 5794 0006 0091     		str	r1, [sp]
4481:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uint32_t ulReturn;
4482:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4483:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 5795              		.loc 1 4483 0
 5796 0008 FFF7FEFF 		bl	vPortEnterCritical
4484:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4485:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Only block if the notification count is not already non-zero. */
4486:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ulNotifiedValue == 0UL )
 5797              		.loc 1 4486 0
 5798 000c 1E4B     		ldr	r3, .L409
 5799 000e 1B68     		ldr	r3, [r3]
 5800 0010 1B6D     		ldr	r3, [r3, #80]
 5801 0012 002B     		cmp	r3, #0
 5802 0014 13D1     		bne	.L404
4487:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4488:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4489:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
 5803              		.loc 1 4489 0
 5804 0016 1C4B     		ldr	r3, .L409
 5805 0018 1B68     		ldr	r3, [r3]
 5806 001a 0122     		movs	r2, #1
 5807 001c 83F85420 		strb	r2, [r3, #84]
4490:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4491:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
 5808              		.loc 1 4491 0
 5809 0020 009B     		ldr	r3, [sp]
 5810 0022 002B     		cmp	r3, #0
 5811 0024 0BD0     		beq	.L404
4492:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4493:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 5812              		.loc 1 4493 0
 5813 0026 0121     		movs	r1, #1
 5814 0028 0098     		ldr	r0, [sp]
 5815 002a FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
4494:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_TAKE_BLOCK();
4495:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4496:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4497:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4498:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4499:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4500:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
 5816              		.loc 1 4500 0
 5817 002e 174B     		ldr	r3, .L409+4
 5818 0030 4FF08052 		mov	r2, #268435456
 5819 0034 1A60     		str	r2, [r3]
 5820              		.syntax unified
 5821              	@ 4500 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 5822 0036 BFF34F8F 		dsb
 5823              	@ 0 "" 2
 5824              	@ 4500 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 5825 003a BFF36F8F 		isb
 5826              	@ 0 "" 2
 5827              		.thumb
 5828              		.syntax unified
 5829              	.L404:
4501:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4502:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4503:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4504:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4505:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4506:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4507:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4508:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4509:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4510:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4511:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4512:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 5830              		.loc 1 4512 0
 5831 003e FFF7FEFF 		bl	vPortExitCritical
4513:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4514:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 5832              		.loc 1 4514 0
 5833 0042 FFF7FEFF 		bl	vPortEnterCritical
4515:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4516:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_TAKE();
4517:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			ulReturn = pxCurrentTCB->ulNotifiedValue;
 5834              		.loc 1 4517 0
 5835 0046 104B     		ldr	r3, .L409
 5836 0048 1B68     		ldr	r3, [r3]
 5837 004a 1B6D     		ldr	r3, [r3, #80]
 5838 004c 0393     		str	r3, [sp, #12]
4518:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4519:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( ulReturn != 0UL )
 5839              		.loc 1 4519 0
 5840 004e 039B     		ldr	r3, [sp, #12]
 5841 0050 002B     		cmp	r3, #0
 5842 0052 0CD0     		beq	.L405
4520:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4521:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( xClearCountOnExit != pdFALSE )
 5843              		.loc 1 4521 0
 5844 0054 019B     		ldr	r3, [sp, #4]
 5845 0056 002B     		cmp	r3, #0
 5846 0058 04D0     		beq	.L406
4522:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4523:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = 0UL;
 5847              		.loc 1 4523 0
 5848 005a 0B4B     		ldr	r3, .L409
 5849 005c 1B68     		ldr	r3, [r3]
 5850 005e 0022     		movs	r2, #0
 5851 0060 1A65     		str	r2, [r3, #80]
 5852 0062 04E0     		b	.L405
 5853              	.L406:
4524:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4525:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4526:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4527:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxCurrentTCB->ulNotifiedValue = ulReturn - ( uint32_t ) 1;
 5854              		.loc 1 4527 0
 5855 0064 084B     		ldr	r3, .L409
 5856 0066 1B68     		ldr	r3, [r3]
 5857 0068 039A     		ldr	r2, [sp, #12]
 5858 006a 013A     		subs	r2, r2, #1
 5859 006c 1A65     		str	r2, [r3, #80]
 5860              	.L405:
4528:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4529:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4530:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4531:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4532:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4533:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4534:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4535:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 5861              		.loc 1 4535 0
 5862 006e 064B     		ldr	r3, .L409
 5863 0070 1B68     		ldr	r3, [r3]
 5864 0072 0022     		movs	r2, #0
 5865 0074 83F85420 		strb	r2, [r3, #84]
4536:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4537:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 5866              		.loc 1 4537 0
 5867 0078 FFF7FEFF 		bl	vPortExitCritical
4538:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4539:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return ulReturn;
 5868              		.loc 1 4539 0
 5869 007c 039B     		ldr	r3, [sp, #12]
4540:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 5870              		.loc 1 4540 0
 5871 007e 1846     		mov	r0, r3
 5872 0080 05B0     		add	sp, sp, #20
 5873              	.LCFI130:
 5874              		.cfi_def_cfa_offset 4
 5875              		@ sp needed
 5876 0082 5DF804FB 		ldr	pc, [sp], #4
 5877              	.L410:
 5878 0086 00BF     		.align	2
 5879              	.L409:
 5880 0088 00000000 		.word	pxCurrentTCB
 5881 008c 04ED00E0 		.word	-536810236
 5882              		.cfi_endproc
 5883              	.LFE56:
 5885              		.section	.text.xTaskNotifyWait,"ax",%progbits
 5886              		.align	1
 5887              		.global	xTaskNotifyWait
 5888              		.syntax unified
 5889              		.thumb
 5890              		.thumb_func
 5891              		.fpu fpv4-sp-d16
 5893              	xTaskNotifyWait:
 5894              	.LFB57:
4541:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4542:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4543:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4544:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4545:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4546:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4547:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyWait( uint32_t ulBitsToClearOnEntry, uint32_t ulBitsToClearOnExit, uint32_t 
4548:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 5895              		.loc 1 4548 0
 5896              		.cfi_startproc
 5897              		@ args = 0, pretend = 0, frame = 24
 5898              		@ frame_needed = 0, uses_anonymous_args = 0
 5899 0000 00B5     		push	{lr}
 5900              	.LCFI131:
 5901              		.cfi_def_cfa_offset 4
 5902              		.cfi_offset 14, -4
 5903 0002 87B0     		sub	sp, sp, #28
 5904              	.LCFI132:
 5905              		.cfi_def_cfa_offset 32
 5906 0004 0390     		str	r0, [sp, #12]
 5907 0006 0291     		str	r1, [sp, #8]
 5908 0008 0192     		str	r2, [sp, #4]
 5909 000a 0093     		str	r3, [sp]
4549:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4550:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4551:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 5910              		.loc 1 4551 0
 5911 000c FFF7FEFF 		bl	vPortEnterCritical
4552:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4553:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Only block if a notification is not already pending. */
4554:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
 5912              		.loc 1 4554 0
 5913 0010 264B     		ldr	r3, .L417
 5914 0012 1B68     		ldr	r3, [r3]
 5915 0014 93F85430 		ldrb	r3, [r3, #84]
 5916 0018 DBB2     		uxtb	r3, r3
 5917 001a 022B     		cmp	r3, #2
 5918 001c 1AD0     		beq	.L412
4555:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4556:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Clear bits in the task's notification value as bits may get
4557:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				set	by the notifying task or interrupt.  This can be used to
4558:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				clear the value to zero. */
4559:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnEntry;
 5919              		.loc 1 4559 0
 5920 001e 234B     		ldr	r3, .L417
 5921 0020 1B68     		ldr	r3, [r3]
 5922 0022 196D     		ldr	r1, [r3, #80]
 5923 0024 039A     		ldr	r2, [sp, #12]
 5924 0026 D243     		mvns	r2, r2
 5925 0028 0A40     		ands	r2, r2, r1
 5926 002a 1A65     		str	r2, [r3, #80]
4560:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4561:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Mark this task as waiting for a notification. */
4562:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ucNotifyState = taskWAITING_NOTIFICATION;
 5927              		.loc 1 4562 0
 5928 002c 1F4B     		ldr	r3, .L417
 5929 002e 1B68     		ldr	r3, [r3]
 5930 0030 0122     		movs	r2, #1
 5931 0032 83F85420 		strb	r2, [r3, #84]
4563:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4564:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( xTicksToWait > ( TickType_t ) 0 )
 5932              		.loc 1 4564 0
 5933 0036 009B     		ldr	r3, [sp]
 5934 0038 002B     		cmp	r3, #0
 5935 003a 0BD0     		beq	.L412
4565:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4566:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddCurrentTaskToDelayedList( xTicksToWait, pdTRUE );
 5936              		.loc 1 4566 0
 5937 003c 0121     		movs	r1, #1
 5938 003e 0098     		ldr	r0, [sp]
 5939 0040 FFF7FEFF 		bl	prvAddCurrentTaskToDelayedList
4567:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					traceTASK_NOTIFY_WAIT_BLOCK();
4568:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4569:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* All ports are written to allow a yield in a critical
4570:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					section (some will yield immediately, others wait until the
4571:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					critical section exits) - but it is not something that
4572:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					application code should ever do. */
4573:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					portYIELD_WITHIN_API();
 5940              		.loc 1 4573 0
 5941 0044 1A4B     		ldr	r3, .L417+4
 5942 0046 4FF08052 		mov	r2, #268435456
 5943 004a 1A60     		str	r2, [r3]
 5944              		.syntax unified
 5945              	@ 4573 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 5946 004c BFF34F8F 		dsb
 5947              	@ 0 "" 2
 5948              	@ 4573 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 5949 0050 BFF36F8F 		isb
 5950              	@ 0 "" 2
 5951              		.thumb
 5952              		.syntax unified
 5953              	.L412:
4574:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4575:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4576:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4577:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4578:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4579:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4580:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4581:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4582:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4583:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4584:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4585:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 5954              		.loc 1 4585 0
 5955 0054 FFF7FEFF 		bl	vPortExitCritical
4586:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4587:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 5956              		.loc 1 4587 0
 5957 0058 FFF7FEFF 		bl	vPortEnterCritical
4588:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4589:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_WAIT();
4590:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4591:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pulNotificationValue != NULL )
 5958              		.loc 1 4591 0
 5959 005c 019B     		ldr	r3, [sp, #4]
 5960 005e 002B     		cmp	r3, #0
 5961 0060 04D0     		beq	.L413
4592:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4593:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Output the current notification value, which may or may not
4594:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				have changed. */
4595:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				*pulNotificationValue = pxCurrentTCB->ulNotifiedValue;
 5962              		.loc 1 4595 0
 5963 0062 124B     		ldr	r3, .L417
 5964 0064 1B68     		ldr	r3, [r3]
 5965 0066 1A6D     		ldr	r2, [r3, #80]
 5966 0068 019B     		ldr	r3, [sp, #4]
 5967 006a 1A60     		str	r2, [r3]
 5968              	.L413:
4596:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4597:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4598:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If ucNotifyValue is set then either the task never entered the
4599:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			blocked state (because a notification was already pending) or the
4600:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			task unblocked because of a notification.  Otherwise the task
4601:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			unblocked because of a timeout. */
4602:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxCurrentTCB->ucNotifyState != taskNOTIFICATION_RECEIVED )
 5969              		.loc 1 4602 0
 5970 006c 0F4B     		ldr	r3, .L417
 5971 006e 1B68     		ldr	r3, [r3]
 5972 0070 93F85430 		ldrb	r3, [r3, #84]
 5973 0074 DBB2     		uxtb	r3, r3
 5974 0076 022B     		cmp	r3, #2
 5975 0078 02D0     		beq	.L414
4603:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4604:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* A notification was not received. */
4605:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdFALSE;
 5976              		.loc 1 4605 0
 5977 007a 0023     		movs	r3, #0
 5978 007c 0593     		str	r3, [sp, #20]
 5979 007e 08E0     		b	.L415
 5980              	.L414:
4606:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4607:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4608:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4609:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* A notification was already pending or a notification was
4610:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				received while the task was waiting. */
4611:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxCurrentTCB->ulNotifiedValue &= ~ulBitsToClearOnExit;
 5981              		.loc 1 4611 0
 5982 0080 0A4B     		ldr	r3, .L417
 5983 0082 1B68     		ldr	r3, [r3]
 5984 0084 196D     		ldr	r1, [r3, #80]
 5985 0086 029A     		ldr	r2, [sp, #8]
 5986 0088 D243     		mvns	r2, r2
 5987 008a 0A40     		ands	r2, r2, r1
 5988 008c 1A65     		str	r2, [r3, #80]
4612:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdTRUE;
 5989              		.loc 1 4612 0
 5990 008e 0123     		movs	r3, #1
 5991 0090 0593     		str	r3, [sp, #20]
 5992              	.L415:
4613:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4614:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4615:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxCurrentTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 5993              		.loc 1 4615 0
 5994 0092 064B     		ldr	r3, .L417
 5995 0094 1B68     		ldr	r3, [r3]
 5996 0096 0022     		movs	r2, #0
 5997 0098 83F85420 		strb	r2, [r3, #84]
4616:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4617:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 5998              		.loc 1 4617 0
 5999 009c FFF7FEFF 		bl	vPortExitCritical
4618:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4619:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6000              		.loc 1 4619 0
 6001 00a0 059B     		ldr	r3, [sp, #20]
4620:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 6002              		.loc 1 4620 0
 6003 00a2 1846     		mov	r0, r3
 6004 00a4 07B0     		add	sp, sp, #28
 6005              	.LCFI133:
 6006              		.cfi_def_cfa_offset 4
 6007              		@ sp needed
 6008 00a6 5DF804FB 		ldr	pc, [sp], #4
 6009              	.L418:
 6010 00aa 00BF     		.align	2
 6011              	.L417:
 6012 00ac 00000000 		.word	pxCurrentTCB
 6013 00b0 04ED00E0 		.word	-536810236
 6014              		.cfi_endproc
 6015              	.LFE57:
 6017              		.section	.text.xTaskGenericNotify,"ax",%progbits
 6018              		.align	1
 6019              		.global	xTaskGenericNotify
 6020              		.syntax unified
 6021              		.thumb
 6022              		.thumb_func
 6023              		.fpu fpv4-sp-d16
 6025              	xTaskGenericNotify:
 6026              	.LFB58:
4621:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4622:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4623:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4624:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4625:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4626:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4627:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotify( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction eAction
4628:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 6027              		.loc 1 4628 0
 6028              		.cfi_startproc
 6029              		@ args = 0, pretend = 0, frame = 40
 6030              		@ frame_needed = 0, uses_anonymous_args = 0
 6031 0000 00B5     		push	{lr}
 6032              	.LCFI134:
 6033              		.cfi_def_cfa_offset 4
 6034              		.cfi_offset 14, -4
 6035 0002 8BB0     		sub	sp, sp, #44
 6036              	.LCFI135:
 6037              		.cfi_def_cfa_offset 48
 6038 0004 0390     		str	r0, [sp, #12]
 6039 0006 0291     		str	r1, [sp, #8]
 6040 0008 0093     		str	r3, [sp]
 6041 000a 1346     		mov	r3, r2
 6042 000c 8DF80730 		strb	r3, [sp, #7]
4629:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4630:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 6043              		.loc 1 4630 0
 6044 0010 0123     		movs	r3, #1
 6045 0012 0993     		str	r3, [sp, #36]
4631:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4632:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4633:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 6046              		.loc 1 4633 0
 6047 0014 039B     		ldr	r3, [sp, #12]
 6048 0016 002B     		cmp	r3, #0
 6049 0018 09D1     		bne	.L420
 6050              	.LBB200:
 6051              	.LBB201:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6052              		.loc 2 195 0 discriminator 1
 6053              		.syntax unified
 6054              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6055 001a 4FF05003 			mov r3, #80												
 6056 001e 83F31188 		msr basepri, r3											
 6057 0022 BFF36F8F 		isb														
 6058 0026 BFF34F8F 		dsb														
 6059              	
 6060              	@ 0 "" 2
 6061              		.thumb
 6062              		.syntax unified
 6063 002a 0693     		str	r3, [sp, #24]
 6064              	.L421:
 6065              	.LBE201:
 6066              	.LBE200:
 6067              		.loc 1 4633 0 discriminator 1
 6068 002c FEE7     		b	.L421
 6069              	.L420:
4634:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 6070              		.loc 1 4634 0
 6071 002e 039B     		ldr	r3, [sp, #12]
 6072 0030 0893     		str	r3, [sp, #32]
4635:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4636:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 6073              		.loc 1 4636 0
 6074 0032 FFF7FEFF 		bl	vPortEnterCritical
4637:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4638:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
 6075              		.loc 1 4638 0
 6076 0036 009B     		ldr	r3, [sp]
 6077 0038 002B     		cmp	r3, #0
 6078 003a 03D0     		beq	.L422
4639:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4640:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 6079              		.loc 1 4640 0
 6080 003c 089B     		ldr	r3, [sp, #32]
 6081 003e 1A6D     		ldr	r2, [r3, #80]
 6082 0040 009B     		ldr	r3, [sp]
 6083 0042 1A60     		str	r2, [r3]
 6084              	.L422:
4641:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4642:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4643:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
 6085              		.loc 1 4643 0
 6086 0044 089B     		ldr	r3, [sp, #32]
 6087 0046 93F85430 		ldrb	r3, [r3, #84]
 6088 004a 8DF81F30 		strb	r3, [sp, #31]
4644:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4645:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6089              		.loc 1 4645 0
 6090 004e 089B     		ldr	r3, [sp, #32]
 6091 0050 0222     		movs	r2, #2
 6092 0052 83F85420 		strb	r2, [r3, #84]
4646:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4647:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			switch( eAction )
 6093              		.loc 1 4647 0
 6094 0056 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 6095 005a 042B     		cmp	r3, #4
 6096 005c 28D8     		bhi	.L423
 6097 005e 01A2     		adr	r2, .L425
 6098 0060 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6099              		.p2align 2
 6100              	.L425:
 6101 0064 CF000000 		.word	.L439+1
 6102 0068 79000000 		.word	.L426+1
 6103 006c 87000000 		.word	.L427+1
 6104 0070 93000000 		.word	.L428+1
 6105 0074 9B000000 		.word	.L429+1
 6106              		.p2align 1
 6107              	.L426:
4648:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4649:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4650:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
 6108              		.loc 1 4650 0
 6109 0078 089B     		ldr	r3, [sp, #32]
 6110 007a 1A6D     		ldr	r2, [r3, #80]
 6111 007c 029B     		ldr	r3, [sp, #8]
 6112 007e 1A43     		orrs	r2, r2, r3
 6113 0080 089B     		ldr	r3, [sp, #32]
 6114 0082 1A65     		str	r2, [r3, #80]
4651:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6115              		.loc 1 4651 0
 6116 0084 26E0     		b	.L430
 6117              	.L427:
4652:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4653:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4654:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
 6118              		.loc 1 4654 0
 6119 0086 089B     		ldr	r3, [sp, #32]
 6120 0088 1B6D     		ldr	r3, [r3, #80]
 6121 008a 5A1C     		adds	r2, r3, #1
 6122 008c 089B     		ldr	r3, [sp, #32]
 6123 008e 1A65     		str	r2, [r3, #80]
4655:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6124              		.loc 1 4655 0
 6125 0090 20E0     		b	.L430
 6126              	.L428:
4656:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4657:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4658:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
 6127              		.loc 1 4658 0
 6128 0092 089B     		ldr	r3, [sp, #32]
 6129 0094 029A     		ldr	r2, [sp, #8]
 6130 0096 1A65     		str	r2, [r3, #80]
4659:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6131              		.loc 1 4659 0
 6132 0098 1CE0     		b	.L430
 6133              	.L429:
4660:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4661:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4662:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 6134              		.loc 1 4662 0
 6135 009a 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 6136 009e 022B     		cmp	r3, #2
 6137 00a0 03D0     		beq	.L431
4663:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4664:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
 6138              		.loc 1 4664 0
 6139 00a2 089B     		ldr	r3, [sp, #32]
 6140 00a4 029A     		ldr	r2, [sp, #8]
 6141 00a6 1A65     		str	r2, [r3, #80]
4665:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4666:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
4667:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4668:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4669:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4670:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4671:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6142              		.loc 1 4671 0
 6143 00a8 14E0     		b	.L430
 6144              	.L431:
4669:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
 6145              		.loc 1 4669 0
 6146 00aa 0023     		movs	r3, #0
 6147 00ac 0993     		str	r3, [sp, #36]
 6148              		.loc 1 4671 0
 6149 00ae 11E0     		b	.L430
 6150              	.L423:
4672:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4673:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eNoAction:
4674:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4675:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					updated. */
4676:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
4677:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4678:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				default:
4679:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4680:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4681:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4682:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 6151              		.loc 1 4682 0
 6152 00b0 089B     		ldr	r3, [sp, #32]
 6153 00b2 1B6D     		ldr	r3, [r3, #80]
 6154 00b4 B3F1FF3F 		cmp	r3, #-1
 6155 00b8 0BD0     		beq	.L440
 6156              	.LBB202:
 6157              	.LBB203:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6158              		.loc 2 195 0 discriminator 1
 6159              		.syntax unified
 6160              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6161 00ba 4FF05003 			mov r3, #80												
 6162 00be 83F31188 		msr basepri, r3											
 6163 00c2 BFF36F8F 		isb														
 6164 00c6 BFF34F8F 		dsb														
 6165              	
 6166              	@ 0 "" 2
 6167              		.thumb
 6168              		.syntax unified
 6169 00ca 0593     		str	r3, [sp, #20]
 6170              	.L434:
 6171              	.LBE203:
 6172              	.LBE202:
 6173              		.loc 1 4682 0 discriminator 2
 6174 00cc FEE7     		b	.L434
 6175              	.L439:
4676:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 6176              		.loc 1 4676 0
 6177 00ce 00BF     		nop
 6178 00d0 00E0     		b	.L430
 6179              	.L440:
4683:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4684:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6180              		.loc 1 4684 0
 6181 00d2 00BF     		nop
 6182              	.L430:
4685:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4686:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4687:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY();
4688:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4689:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4690:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4691:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 6183              		.loc 1 4691 0
 6184 00d4 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 6185 00d8 012B     		cmp	r3, #1
 6186 00da 38D1     		bne	.L435
4692:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4693:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 6187              		.loc 1 4693 0
 6188 00dc 089B     		ldr	r3, [sp, #32]
 6189 00de 0433     		adds	r3, r3, #4
 6190 00e0 1846     		mov	r0, r3
 6191 00e2 FFF7FEFF 		bl	uxListRemove
4694:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				prvAddTaskToReadyList( pxTCB );
 6192              		.loc 1 4694 0
 6193 00e6 089B     		ldr	r3, [sp, #32]
 6194 00e8 DB6A     		ldr	r3, [r3, #44]
 6195 00ea 0122     		movs	r2, #1
 6196 00ec 9A40     		lsls	r2, r2, r3
 6197 00ee 1B4B     		ldr	r3, .L441
 6198 00f0 1B68     		ldr	r3, [r3]
 6199 00f2 1343     		orrs	r3, r3, r2
 6200 00f4 194A     		ldr	r2, .L441
 6201 00f6 1360     		str	r3, [r2]
 6202 00f8 089B     		ldr	r3, [sp, #32]
 6203 00fa DA6A     		ldr	r2, [r3, #44]
 6204 00fc 1346     		mov	r3, r2
 6205 00fe 9B00     		lsls	r3, r3, #2
 6206 0100 1344     		add	r3, r3, r2
 6207 0102 9B00     		lsls	r3, r3, #2
 6208 0104 164A     		ldr	r2, .L441+4
 6209 0106 1A44     		add	r2, r2, r3
 6210 0108 089B     		ldr	r3, [sp, #32]
 6211 010a 0433     		adds	r3, r3, #4
 6212 010c 1946     		mov	r1, r3
 6213 010e 1046     		mov	r0, r2
 6214 0110 FFF7FEFF 		bl	vListInsertEnd
4695:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4696:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4697:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 6215              		.loc 1 4697 0
 6216 0114 089B     		ldr	r3, [sp, #32]
 6217 0116 9B6A     		ldr	r3, [r3, #40]
 6218 0118 002B     		cmp	r3, #0
 6219 011a 09D0     		beq	.L436
 6220              	.LBB204:
 6221              	.LBB205:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6222              		.loc 2 195 0 discriminator 1
 6223              		.syntax unified
 6224              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6225 011c 4FF05003 			mov r3, #80												
 6226 0120 83F31188 		msr basepri, r3											
 6227 0124 BFF36F8F 		isb														
 6228 0128 BFF34F8F 		dsb														
 6229              	
 6230              	@ 0 "" 2
 6231              		.thumb
 6232              		.syntax unified
 6233 012c 0493     		str	r3, [sp, #16]
 6234              	.L437:
 6235              	.LBE205:
 6236              	.LBE204:
 6237              		.loc 1 4697 0 discriminator 3
 6238 012e FEE7     		b	.L437
 6239              	.L436:
4698:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4699:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#if( configUSE_TICKLESS_IDLE != 0 )
4700:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4701:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* If a task is blocked waiting for a notification then
4702:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime might be set to the blocked task's time
4703:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					out time.  If the task is unblocked for a reason other than
4704:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					a timeout xNextTaskUnblockTime is normally left unchanged,
4705:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					because it will automatically get reset to a new value when
4706:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					the tick count equals xNextTaskUnblockTime.  However if
4707:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					tickless idling is used it might be more important to enter
4708:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					sleep mode at the earliest possible time - so reset
4709:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime here to ensure it is updated at the
4710:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					earliest possible time. */
4711:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvResetNextTaskUnblockTime();
4712:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4713:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				#endif
4714:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4715:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 6240              		.loc 1 4715 0
 6241 0130 089B     		ldr	r3, [sp, #32]
 6242 0132 DA6A     		ldr	r2, [r3, #44]
 6243 0134 0B4B     		ldr	r3, .L441+8
 6244 0136 1B68     		ldr	r3, [r3]
 6245 0138 DB6A     		ldr	r3, [r3, #44]
 6246 013a 9A42     		cmp	r2, r3
 6247 013c 07D9     		bls	.L435
4716:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4717:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4718:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4719:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					taskYIELD_IF_USING_PREEMPTION();
 6248              		.loc 1 4719 0
 6249 013e 0A4B     		ldr	r3, .L441+12
 6250 0140 4FF08052 		mov	r2, #268435456
 6251 0144 1A60     		str	r2, [r3]
 6252              		.syntax unified
 6253              	@ 4719 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 6254 0146 BFF34F8F 		dsb
 6255              	@ 0 "" 2
 6256              	@ 4719 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c" 1
 6257 014a BFF36F8F 		isb
 6258              	@ 0 "" 2
 6259              		.thumb
 6260              		.syntax unified
 6261              	.L435:
4720:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4721:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4722:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4723:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4724:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4725:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4726:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4727:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4728:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
4729:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4730:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4731:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 6262              		.loc 1 4731 0
 6263 014e FFF7FEFF 		bl	vPortExitCritical
4732:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4733:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6264              		.loc 1 4733 0
 6265 0152 099B     		ldr	r3, [sp, #36]
4734:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 6266              		.loc 1 4734 0
 6267 0154 1846     		mov	r0, r3
 6268 0156 0BB0     		add	sp, sp, #44
 6269              	.LCFI136:
 6270              		.cfi_def_cfa_offset 4
 6271              		@ sp needed
 6272 0158 5DF804FB 		ldr	pc, [sp], #4
 6273              	.L442:
 6274              		.align	2
 6275              	.L441:
 6276 015c 00000000 		.word	uxTopReadyPriority
 6277 0160 00000000 		.word	pxReadyTasksLists
 6278 0164 00000000 		.word	pxCurrentTCB
 6279 0168 04ED00E0 		.word	-536810236
 6280              		.cfi_endproc
 6281              	.LFE58:
 6283              		.section	.text.xTaskGenericNotifyFromISR,"ax",%progbits
 6284              		.align	1
 6285              		.global	xTaskGenericNotifyFromISR
 6286              		.syntax unified
 6287              		.thumb
 6288              		.thumb_func
 6289              		.fpu fpv4-sp-d16
 6291              	xTaskGenericNotifyFromISR:
 6292              	.LFB59:
4735:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4736:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4737:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4738:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4739:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4740:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4741:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskGenericNotifyFromISR( TaskHandle_t xTaskToNotify, uint32_t ulValue, eNotifyAction 
4742:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 6293              		.loc 1 4742 0
 6294              		.cfi_startproc
 6295              		@ args = 4, pretend = 0, frame = 56
 6296              		@ frame_needed = 0, uses_anonymous_args = 0
 6297 0000 00B5     		push	{lr}
 6298              	.LCFI137:
 6299              		.cfi_def_cfa_offset 4
 6300              		.cfi_offset 14, -4
 6301 0002 8FB0     		sub	sp, sp, #60
 6302              	.LCFI138:
 6303              		.cfi_def_cfa_offset 64
 6304 0004 0390     		str	r0, [sp, #12]
 6305 0006 0291     		str	r1, [sp, #8]
 6306 0008 0093     		str	r3, [sp]
 6307 000a 1346     		mov	r3, r2
 6308 000c 8DF80730 		strb	r3, [sp, #7]
4743:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4744:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4745:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn = pdPASS;
 6309              		.loc 1 4745 0
 6310 0010 0123     		movs	r3, #1
 6311 0012 0D93     		str	r3, [sp, #52]
4746:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4747:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4748:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 6312              		.loc 1 4748 0
 6313 0014 039B     		ldr	r3, [sp, #12]
 6314 0016 002B     		cmp	r3, #0
 6315 0018 09D1     		bne	.L444
 6316              	.LBB206:
 6317              	.LBB207:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6318              		.loc 2 195 0 discriminator 1
 6319              		.syntax unified
 6320              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6321 001a 4FF05003 			mov r3, #80												
 6322 001e 83F31188 		msr basepri, r3											
 6323 0022 BFF36F8F 		isb														
 6324 0026 BFF34F8F 		dsb														
 6325              	
 6326              	@ 0 "" 2
 6327              		.thumb
 6328              		.syntax unified
 6329 002a 0993     		str	r3, [sp, #36]
 6330              	.L445:
 6331              	.LBE207:
 6332              	.LBE206:
 6333              		.loc 1 4748 0 discriminator 1
 6334 002c FEE7     		b	.L445
 6335              	.L444:
4749:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4750:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4751:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4752:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4753:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4754:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4755:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4756:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4757:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4758:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4759:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4760:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4761:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4762:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4763:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4764:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4765:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4766:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 6336              		.loc 1 4766 0
 6337 002e FFF7FEFF 		bl	vPortValidateInterruptPriority
4767:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4768:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 6338              		.loc 1 4768 0
 6339 0032 039B     		ldr	r3, [sp, #12]
 6340 0034 0C93     		str	r3, [sp, #48]
 6341              	.LBB208:
 6342              	.LBB209:
 211:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6343              		.loc 2 211 0
 6344              		.syntax unified
 6345              	@ 211 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6346 0036 EFF31182 			mrs r2, basepri											
 6347 003a 4FF05003 		mov r3, #80												
 6348 003e 83F31188 		msr basepri, r3											
 6349 0042 BFF36F8F 		isb														
 6350 0046 BFF34F8F 		dsb														
 6351              	
 6352              	@ 0 "" 2
 6353              		.thumb
 6354              		.syntax unified
 6355 004a 0892     		str	r2, [sp, #32]
 6356 004c 0793     		str	r3, [sp, #28]
 223:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6357              		.loc 2 223 0
 6358 004e 089B     		ldr	r3, [sp, #32]
 6359              	.LBE209:
 6360              	.LBE208:
4769:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4770:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 6361              		.loc 1 4770 0
 6362 0050 0B93     		str	r3, [sp, #44]
4771:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4772:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pulPreviousNotificationValue != NULL )
 6363              		.loc 1 4772 0
 6364 0052 009B     		ldr	r3, [sp]
 6365 0054 002B     		cmp	r3, #0
 6366 0056 03D0     		beq	.L447
4773:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4774:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				*pulPreviousNotificationValue = pxTCB->ulNotifiedValue;
 6367              		.loc 1 4774 0
 6368 0058 0C9B     		ldr	r3, [sp, #48]
 6369 005a 1A6D     		ldr	r2, [r3, #80]
 6370 005c 009B     		ldr	r3, [sp]
 6371 005e 1A60     		str	r2, [r3]
 6372              	.L447:
4775:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4776:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4777:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
 6373              		.loc 1 4777 0
 6374 0060 0C9B     		ldr	r3, [sp, #48]
 6375 0062 93F85430 		ldrb	r3, [r3, #84]
 6376 0066 8DF82B30 		strb	r3, [sp, #43]
4778:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6377              		.loc 1 4778 0
 6378 006a 0C9B     		ldr	r3, [sp, #48]
 6379 006c 0222     		movs	r2, #2
 6380 006e 83F85420 		strb	r2, [r3, #84]
4779:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4780:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			switch( eAction )
 6381              		.loc 1 4780 0
 6382 0072 9DF80730 		ldrb	r3, [sp, #7]	@ zero_extendqisi2
 6383 0076 042B     		cmp	r3, #4
 6384 0078 28D8     		bhi	.L448
 6385 007a 01A2     		adr	r2, .L450
 6386 007c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 6387              		.p2align 2
 6388              	.L450:
 6389 0080 EB000000 		.word	.L467+1
 6390 0084 95000000 		.word	.L451+1
 6391 0088 A3000000 		.word	.L452+1
 6392 008c AF000000 		.word	.L453+1
 6393 0090 B7000000 		.word	.L454+1
 6394              		.p2align 1
 6395              	.L451:
4781:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4782:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eSetBits	:
4783:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue |= ulValue;
 6396              		.loc 1 4783 0
 6397 0094 0C9B     		ldr	r3, [sp, #48]
 6398 0096 1A6D     		ldr	r2, [r3, #80]
 6399 0098 029B     		ldr	r3, [sp, #8]
 6400 009a 1A43     		orrs	r2, r2, r3
 6401 009c 0C9B     		ldr	r3, [sp, #48]
 6402 009e 1A65     		str	r2, [r3, #80]
4784:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6403              		.loc 1 4784 0
 6404 00a0 26E0     		b	.L455
 6405              	.L452:
4785:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4786:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eIncrement	:
4787:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					( pxTCB->ulNotifiedValue )++;
 6406              		.loc 1 4787 0
 6407 00a2 0C9B     		ldr	r3, [sp, #48]
 6408 00a4 1B6D     		ldr	r3, [r3, #80]
 6409 00a6 5A1C     		adds	r2, r3, #1
 6410 00a8 0C9B     		ldr	r3, [sp, #48]
 6411 00aa 1A65     		str	r2, [r3, #80]
4788:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6412              		.loc 1 4788 0
 6413 00ac 20E0     		b	.L455
 6414              	.L453:
4789:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4790:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eSetValueWithOverwrite	:
4791:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					pxTCB->ulNotifiedValue = ulValue;
 6415              		.loc 1 4791 0
 6416 00ae 0C9B     		ldr	r3, [sp, #48]
 6417 00b0 029A     		ldr	r2, [sp, #8]
 6418 00b2 1A65     		str	r2, [r3, #80]
4792:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6419              		.loc 1 4792 0
 6420 00b4 1CE0     		b	.L455
 6421              	.L454:
4793:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4794:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eSetValueWithoutOverwrite :
4795:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( ucOriginalNotifyState != taskNOTIFICATION_RECEIVED )
 6422              		.loc 1 4795 0
 6423 00b6 9DF82B30 		ldrb	r3, [sp, #43]	@ zero_extendqisi2
 6424 00ba 022B     		cmp	r3, #2
 6425 00bc 03D0     		beq	.L456
4796:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4797:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						pxTCB->ulNotifiedValue = ulValue;
 6426              		.loc 1 4797 0
 6427 00be 0C9B     		ldr	r3, [sp, #48]
 6428 00c0 029A     		ldr	r2, [sp, #8]
 6429 00c2 1A65     		str	r2, [r3, #80]
4798:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4799:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					else
4800:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4801:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						/* The value could not be written to the task. */
4802:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						xReturn = pdFAIL;
4803:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4804:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6430              		.loc 1 4804 0
 6431 00c4 14E0     		b	.L455
 6432              	.L456:
4802:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
 6433              		.loc 1 4802 0
 6434 00c6 0023     		movs	r3, #0
 6435 00c8 0D93     		str	r3, [sp, #52]
 6436              		.loc 1 4804 0
 6437 00ca 11E0     		b	.L455
 6438              	.L448:
4805:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4806:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				case eNoAction :
4807:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The task is being notified without its notify value being
4808:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					updated. */
4809:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
4810:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4811:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				default:
4812:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Should not get here if all enums are handled.
4813:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					Artificially force an assert by testing a value the
4814:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					compiler can't assume is const. */
4815:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					configASSERT( pxTCB->ulNotifiedValue == ~0UL );
 6439              		.loc 1 4815 0
 6440 00cc 0C9B     		ldr	r3, [sp, #48]
 6441 00ce 1B6D     		ldr	r3, [r3, #80]
 6442 00d0 B3F1FF3F 		cmp	r3, #-1
 6443 00d4 0BD0     		beq	.L468
 6444              	.LBB210:
 6445              	.LBB211:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6446              		.loc 2 195 0 discriminator 1
 6447              		.syntax unified
 6448              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6449 00d6 4FF05003 			mov r3, #80												
 6450 00da 83F31188 		msr basepri, r3											
 6451 00de BFF36F8F 		isb														
 6452 00e2 BFF34F8F 		dsb														
 6453              	
 6454              	@ 0 "" 2
 6455              		.thumb
 6456              		.syntax unified
 6457 00e6 0693     		str	r3, [sp, #24]
 6458              	.L459:
 6459              	.LBE211:
 6460              	.LBE210:
 6461              		.loc 1 4815 0 discriminator 2
 6462 00e8 FEE7     		b	.L459
 6463              	.L467:
4809:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 6464              		.loc 1 4809 0
 6465 00ea 00BF     		nop
 6466 00ec 00E0     		b	.L455
 6467              	.L468:
4816:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					break;
 6468              		.loc 1 4816 0
 6469 00ee 00BF     		nop
 6470              	.L455:
4817:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4818:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4819:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_FROM_ISR();
4820:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4821:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4822:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4823:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 6471              		.loc 1 4823 0
 6472 00f0 9DF82B30 		ldrb	r3, [sp, #43]	@ zero_extendqisi2
 6473 00f4 012B     		cmp	r3, #1
 6474 00f6 44D1     		bne	.L460
4824:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4825:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4826:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 6475              		.loc 1 4826 0
 6476 00f8 0C9B     		ldr	r3, [sp, #48]
 6477 00fa 9B6A     		ldr	r3, [r3, #40]
 6478 00fc 002B     		cmp	r3, #0
 6479 00fe 09D0     		beq	.L461
 6480              	.LBB212:
 6481              	.LBB213:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6482              		.loc 2 195 0 discriminator 1
 6483              		.syntax unified
 6484              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6485 0100 4FF05003 			mov r3, #80												
 6486 0104 83F31188 		msr basepri, r3											
 6487 0108 BFF36F8F 		isb														
 6488 010c BFF34F8F 		dsb														
 6489              	
 6490              	@ 0 "" 2
 6491              		.thumb
 6492              		.syntax unified
 6493 0110 0593     		str	r3, [sp, #20]
 6494              	.L462:
 6495              	.LBE213:
 6496              	.LBE212:
 6497              		.loc 1 4826 0 discriminator 3
 6498 0112 FEE7     		b	.L462
 6499              	.L461:
4827:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4828:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 6500              		.loc 1 4828 0
 6501 0114 204B     		ldr	r3, .L469
 6502 0116 1B68     		ldr	r3, [r3]
 6503 0118 002B     		cmp	r3, #0
 6504 011a 1CD1     		bne	.L463
4829:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4830:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 6505              		.loc 1 4830 0
 6506 011c 0C9B     		ldr	r3, [sp, #48]
 6507 011e 0433     		adds	r3, r3, #4
 6508 0120 1846     		mov	r0, r3
 6509 0122 FFF7FEFF 		bl	uxListRemove
4831:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6510              		.loc 1 4831 0
 6511 0126 0C9B     		ldr	r3, [sp, #48]
 6512 0128 DB6A     		ldr	r3, [r3, #44]
 6513 012a 0122     		movs	r2, #1
 6514 012c 9A40     		lsls	r2, r2, r3
 6515 012e 1B4B     		ldr	r3, .L469+4
 6516 0130 1B68     		ldr	r3, [r3]
 6517 0132 1343     		orrs	r3, r3, r2
 6518 0134 194A     		ldr	r2, .L469+4
 6519 0136 1360     		str	r3, [r2]
 6520 0138 0C9B     		ldr	r3, [sp, #48]
 6521 013a DA6A     		ldr	r2, [r3, #44]
 6522 013c 1346     		mov	r3, r2
 6523 013e 9B00     		lsls	r3, r3, #2
 6524 0140 1344     		add	r3, r3, r2
 6525 0142 9B00     		lsls	r3, r3, #2
 6526 0144 164A     		ldr	r2, .L469+8
 6527 0146 1A44     		add	r2, r2, r3
 6528 0148 0C9B     		ldr	r3, [sp, #48]
 6529 014a 0433     		adds	r3, r3, #4
 6530 014c 1946     		mov	r1, r3
 6531 014e 1046     		mov	r0, r2
 6532 0150 FFF7FEFF 		bl	vListInsertEnd
 6533 0154 05E0     		b	.L464
 6534              	.L463:
4832:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4833:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4834:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4835:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4836:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4837:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 6535              		.loc 1 4837 0
 6536 0156 0C9B     		ldr	r3, [sp, #48]
 6537 0158 1833     		adds	r3, r3, #24
 6538 015a 1946     		mov	r1, r3
 6539 015c 1148     		ldr	r0, .L469+12
 6540 015e FFF7FEFF 		bl	vListInsertEnd
 6541              	.L464:
4838:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4839:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4840:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 6542              		.loc 1 4840 0
 6543 0162 0C9B     		ldr	r3, [sp, #48]
 6544 0164 DA6A     		ldr	r2, [r3, #44]
 6545 0166 104B     		ldr	r3, .L469+16
 6546 0168 1B68     		ldr	r3, [r3]
 6547 016a DB6A     		ldr	r3, [r3, #44]
 6548 016c 9A42     		cmp	r2, r3
 6549 016e 08D9     		bls	.L460
4841:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4842:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4843:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4844:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
 6550              		.loc 1 4844 0
 6551 0170 109B     		ldr	r3, [sp, #64]
 6552 0172 002B     		cmp	r3, #0
 6553 0174 02D0     		beq	.L465
4845:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4846:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 6554              		.loc 1 4846 0
 6555 0176 109B     		ldr	r3, [sp, #64]
 6556 0178 0122     		movs	r2, #1
 6557 017a 1A60     		str	r2, [r3]
 6558              	.L465:
4847:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4848:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4849:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
4850:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter to an ISR
4851:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
4852:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
 6559              		.loc 1 4852 0
 6560 017c 0B4B     		ldr	r3, .L469+20
 6561 017e 0122     		movs	r2, #1
 6562 0180 1A60     		str	r2, [r3]
 6563              	.L460:
 6564 0182 0B9B     		ldr	r3, [sp, #44]
 6565 0184 0493     		str	r3, [sp, #16]
 6566              	.LBB214:
 6567              	.LBB215:
 6568              		.loc 2 229 0
 6569 0186 049B     		ldr	r3, [sp, #16]
 6570              		.syntax unified
 6571              	@ 229 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6572 0188 83F31188 			msr basepri, r3	
 6573              	@ 0 "" 2
 6574              		.thumb
 6575              		.syntax unified
 6576              	.LBE215:
 6577              	.LBE214:
4853:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4854:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4855:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4856:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4857:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4858:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4859:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4860:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4861:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4862:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6578              		.loc 1 4862 0
 6579 018c 0D9B     		ldr	r3, [sp, #52]
4863:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 6580              		.loc 1 4863 0
 6581 018e 1846     		mov	r0, r3
 6582 0190 0FB0     		add	sp, sp, #60
 6583              	.LCFI139:
 6584              		.cfi_def_cfa_offset 4
 6585              		@ sp needed
 6586 0192 5DF804FB 		ldr	pc, [sp], #4
 6587              	.L470:
 6588 0196 00BF     		.align	2
 6589              	.L469:
 6590 0198 00000000 		.word	uxSchedulerSuspended
 6591 019c 00000000 		.word	uxTopReadyPriority
 6592 01a0 00000000 		.word	pxReadyTasksLists
 6593 01a4 00000000 		.word	xPendingReadyList
 6594 01a8 00000000 		.word	pxCurrentTCB
 6595 01ac 00000000 		.word	xYieldPending
 6596              		.cfi_endproc
 6597              	.LFE59:
 6599              		.section	.text.vTaskNotifyGiveFromISR,"ax",%progbits
 6600              		.align	1
 6601              		.global	vTaskNotifyGiveFromISR
 6602              		.syntax unified
 6603              		.thumb
 6604              		.thumb_func
 6605              		.fpu fpv4-sp-d16
 6607              	vTaskNotifyGiveFromISR:
 6608              	.LFB60:
4864:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4865:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4866:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4867:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4868:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4869:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4870:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	void vTaskNotifyGiveFromISR( TaskHandle_t xTaskToNotify, BaseType_t *pxHigherPriorityTaskWoken )
4871:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 6609              		.loc 1 4871 0
 6610              		.cfi_startproc
 6611              		@ args = 0, pretend = 0, frame = 40
 6612              		@ frame_needed = 0, uses_anonymous_args = 0
 6613 0000 00B5     		push	{lr}
 6614              	.LCFI140:
 6615              		.cfi_def_cfa_offset 4
 6616              		.cfi_offset 14, -4
 6617 0002 8BB0     		sub	sp, sp, #44
 6618              	.LCFI141:
 6619              		.cfi_def_cfa_offset 48
 6620 0004 0190     		str	r0, [sp, #4]
 6621 0006 0091     		str	r1, [sp]
4872:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t * pxTCB;
4873:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	uint8_t ucOriginalNotifyState;
4874:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	UBaseType_t uxSavedInterruptStatus;
4875:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4876:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		configASSERT( xTaskToNotify );
 6622              		.loc 1 4876 0
 6623 0008 019B     		ldr	r3, [sp, #4]
 6624 000a 002B     		cmp	r3, #0
 6625 000c 09D1     		bne	.L472
 6626              	.LBB216:
 6627              	.LBB217:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6628              		.loc 2 195 0 discriminator 1
 6629              		.syntax unified
 6630              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6631 000e 4FF05003 			mov r3, #80												
 6632 0012 83F31188 		msr basepri, r3											
 6633 0016 BFF36F8F 		isb														
 6634 001a BFF34F8F 		dsb														
 6635              	
 6636              	@ 0 "" 2
 6637              		.thumb
 6638              		.syntax unified
 6639 001e 0693     		str	r3, [sp, #24]
 6640              	.L473:
 6641              	.LBE217:
 6642              	.LBE216:
 6643              		.loc 1 4876 0 discriminator 1
 6644 0020 FEE7     		b	.L473
 6645              	.L472:
4877:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4878:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* RTOS ports that support interrupt nesting have the concept of a
4879:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		maximum	system call (or maximum API call) interrupt priority.
4880:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		Interrupts that are	above the maximum system call priority are keep
4881:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		permanently enabled, even when the RTOS kernel is in a critical section,
4882:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		but cannot make any calls to FreeRTOS API functions.  If configASSERT()
4883:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		is defined in FreeRTOSConfig.h then
4884:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID() will result in an assertion
4885:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		failure if a FreeRTOS API function is called from an interrupt that has
4886:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		been assigned a priority above the configured maximum system call
4887:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		priority.  Only FreeRTOS functions that end in FromISR can be called
4888:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		from interrupts	that have been assigned a priority at or (logically)
4889:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		below the maximum system call interrupt priority.  FreeRTOS maintains a
4890:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		separate interrupt safe API to ensure interrupt entry is as fast and as
4891:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		simple as possible.  More information (albeit Cortex-M specific) is
4892:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		provided on the following link:
4893:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		http://www.freertos.org/RTOS-Cortex-M3-M4.html */
4894:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portASSERT_IF_INTERRUPT_PRIORITY_INVALID();
 6646              		.loc 1 4894 0
 6647 0022 FFF7FEFF 		bl	vPortValidateInterruptPriority
4895:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4896:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTCB = xTaskToNotify;
 6648              		.loc 1 4896 0
 6649 0026 019B     		ldr	r3, [sp, #4]
 6650 0028 0993     		str	r3, [sp, #36]
 6651              	.LBB218:
 6652              	.LBB219:
 211:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6653              		.loc 2 211 0
 6654              		.syntax unified
 6655              	@ 211 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6656 002a EFF31182 			mrs r2, basepri											
 6657 002e 4FF05003 		mov r3, #80												
 6658 0032 83F31188 		msr basepri, r3											
 6659 0036 BFF36F8F 		isb														
 6660 003a BFF34F8F 		dsb														
 6661              	
 6662              	@ 0 "" 2
 6663              		.thumb
 6664              		.syntax unified
 6665 003e 0592     		str	r2, [sp, #20]
 6666 0040 0493     		str	r3, [sp, #16]
 223:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** }
 6667              		.loc 2 223 0
 6668 0042 059B     		ldr	r3, [sp, #20]
 6669              	.LBE219:
 6670              	.LBE218:
4897:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4898:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		uxSavedInterruptStatus = portSET_INTERRUPT_MASK_FROM_ISR();
 6671              		.loc 1 4898 0
 6672 0044 0893     		str	r3, [sp, #32]
4899:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4900:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			ucOriginalNotifyState = pxTCB->ucNotifyState;
 6673              		.loc 1 4900 0
 6674 0046 099B     		ldr	r3, [sp, #36]
 6675 0048 93F85430 		ldrb	r3, [r3, #84]
 6676 004c 8DF81F30 		strb	r3, [sp, #31]
4901:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			pxTCB->ucNotifyState = taskNOTIFICATION_RECEIVED;
 6677              		.loc 1 4901 0
 6678 0050 099B     		ldr	r3, [sp, #36]
 6679 0052 0222     		movs	r2, #2
 6680 0054 83F85420 		strb	r2, [r3, #84]
4902:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4903:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* 'Giving' is equivalent to incrementing a count in a counting
4904:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			semaphore. */
4905:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			( pxTCB->ulNotifiedValue )++;
 6681              		.loc 1 4905 0
 6682 0058 099B     		ldr	r3, [sp, #36]
 6683 005a 1B6D     		ldr	r3, [r3, #80]
 6684 005c 5A1C     		adds	r2, r3, #1
 6685 005e 099B     		ldr	r3, [sp, #36]
 6686 0060 1A65     		str	r2, [r3, #80]
4906:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4907:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			traceTASK_NOTIFY_GIVE_FROM_ISR();
4908:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4909:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If the task is in the blocked state specifically to wait for a
4910:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			notification then unblock it now. */
4911:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( ucOriginalNotifyState == taskWAITING_NOTIFICATION )
 6687              		.loc 1 4911 0
 6688 0062 9DF81F30 		ldrb	r3, [sp, #31]	@ zero_extendqisi2
 6689 0066 012B     		cmp	r3, #1
 6690 0068 44D1     		bne	.L475
4912:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4913:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The task should not have been on an event list. */
4914:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				configASSERT( listLIST_ITEM_CONTAINER( &( pxTCB->xEventListItem ) ) == NULL );
 6691              		.loc 1 4914 0
 6692 006a 099B     		ldr	r3, [sp, #36]
 6693 006c 9B6A     		ldr	r3, [r3, #40]
 6694 006e 002B     		cmp	r3, #0
 6695 0070 09D0     		beq	.L476
 6696              	.LBB220:
 6697              	.LBB221:
 195:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GCC/ARM_CM4F/portmacro.h **** 	(
 6698              		.loc 2 195 0 discriminator 1
 6699              		.syntax unified
 6700              	@ 195 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6701 0072 4FF05003 			mov r3, #80												
 6702 0076 83F31188 		msr basepri, r3											
 6703 007a BFF36F8F 		isb														
 6704 007e BFF34F8F 		dsb														
 6705              	
 6706              	@ 0 "" 2
 6707              		.thumb
 6708              		.syntax unified
 6709 0082 0393     		str	r3, [sp, #12]
 6710              	.L477:
 6711              	.LBE221:
 6712              	.LBE220:
 6713              		.loc 1 4914 0 discriminator 2
 6714 0084 FEE7     		b	.L477
 6715              	.L476:
4915:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4916:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( uxSchedulerSuspended == ( UBaseType_t ) pdFALSE )
 6716              		.loc 1 4916 0
 6717 0086 204B     		ldr	r3, .L481
 6718 0088 1B68     		ldr	r3, [r3]
 6719 008a 002B     		cmp	r3, #0
 6720 008c 1CD1     		bne	.L478
4917:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4918:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					( void ) uxListRemove( &( pxTCB->xStateListItem ) );
 6721              		.loc 1 4918 0
 6722 008e 099B     		ldr	r3, [sp, #36]
 6723 0090 0433     		adds	r3, r3, #4
 6724 0092 1846     		mov	r0, r3
 6725 0094 FFF7FEFF 		bl	uxListRemove
4919:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					prvAddTaskToReadyList( pxTCB );
 6726              		.loc 1 4919 0
 6727 0098 099B     		ldr	r3, [sp, #36]
 6728 009a DB6A     		ldr	r3, [r3, #44]
 6729 009c 0122     		movs	r2, #1
 6730 009e 9A40     		lsls	r2, r2, r3
 6731 00a0 1A4B     		ldr	r3, .L481+4
 6732 00a2 1B68     		ldr	r3, [r3]
 6733 00a4 1343     		orrs	r3, r3, r2
 6734 00a6 194A     		ldr	r2, .L481+4
 6735 00a8 1360     		str	r3, [r2]
 6736 00aa 099B     		ldr	r3, [sp, #36]
 6737 00ac DA6A     		ldr	r2, [r3, #44]
 6738 00ae 1346     		mov	r3, r2
 6739 00b0 9B00     		lsls	r3, r3, #2
 6740 00b2 1344     		add	r3, r3, r2
 6741 00b4 9B00     		lsls	r3, r3, #2
 6742 00b6 164A     		ldr	r2, .L481+8
 6743 00b8 1A44     		add	r2, r2, r3
 6744 00ba 099B     		ldr	r3, [sp, #36]
 6745 00bc 0433     		adds	r3, r3, #4
 6746 00be 1946     		mov	r1, r3
 6747 00c0 1046     		mov	r0, r2
 6748 00c2 FFF7FEFF 		bl	vListInsertEnd
 6749 00c6 05E0     		b	.L479
 6750              	.L478:
4920:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4921:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4922:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4923:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The delayed and ready lists cannot be accessed, so hold
4924:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					this task pending until the scheduler is resumed. */
4925:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					vListInsertEnd( &( xPendingReadyList ), &( pxTCB->xEventListItem ) );
 6751              		.loc 1 4925 0
 6752 00c8 099B     		ldr	r3, [sp, #36]
 6753 00ca 1833     		adds	r3, r3, #24
 6754 00cc 1946     		mov	r1, r3
 6755 00ce 1148     		ldr	r0, .L481+12
 6756 00d0 FFF7FEFF 		bl	vListInsertEnd
 6757              	.L479:
4926:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4927:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4928:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( pxTCB->uxPriority > pxCurrentTCB->uxPriority )
 6758              		.loc 1 4928 0
 6759 00d4 099B     		ldr	r3, [sp, #36]
 6760 00d6 DA6A     		ldr	r2, [r3, #44]
 6761 00d8 0F4B     		ldr	r3, .L481+16
 6762 00da 1B68     		ldr	r3, [r3]
 6763 00dc DB6A     		ldr	r3, [r3, #44]
 6764 00de 9A42     		cmp	r2, r3
 6765 00e0 08D9     		bls	.L475
4929:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4930:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* The notified task has a priority above the currently
4931:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					executing task so a yield is required. */
4932:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					if( pxHigherPriorityTaskWoken != NULL )
 6766              		.loc 1 4932 0
 6767 00e2 009B     		ldr	r3, [sp]
 6768 00e4 002B     		cmp	r3, #0
 6769 00e6 02D0     		beq	.L480
4933:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					{
4934:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 						*pxHigherPriorityTaskWoken = pdTRUE;
 6770              		.loc 1 4934 0
 6771 00e8 009B     		ldr	r3, [sp]
 6772 00ea 0122     		movs	r2, #1
 6773 00ec 1A60     		str	r2, [r3]
 6774              	.L480:
4935:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					}
4936:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4937:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					/* Mark that a yield is pending in case the user is not
4938:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					using the "xHigherPriorityTaskWoken" parameter in an ISR
4939:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					safe FreeRTOS function. */
4940:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xYieldPending = pdTRUE;
 6775              		.loc 1 4940 0
 6776 00ee 0B4B     		ldr	r3, .L481+20
 6777 00f0 0122     		movs	r2, #1
 6778 00f2 1A60     		str	r2, [r3]
 6779              	.L475:
 6780 00f4 089B     		ldr	r3, [sp, #32]
 6781 00f6 0293     		str	r3, [sp, #8]
 6782              	.LBB222:
 6783              	.LBB223:
 6784              		.loc 2 229 0
 6785 00f8 029B     		ldr	r3, [sp, #8]
 6786              		.syntax unified
 6787              	@ 229 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/portable/GC
 6788 00fa 83F31188 			msr basepri, r3	
 6789              	@ 0 "" 2
 6790              		.thumb
 6791              		.syntax unified
 6792              	.LBE223:
 6793              	.LBE222:
4941:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4942:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
4943:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
4944:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
4945:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
4946:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4947:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4948:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portCLEAR_INTERRUPT_MASK_FROM_ISR( uxSavedInterruptStatus );
4949:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 6794              		.loc 1 4949 0
 6795 00fe 00BF     		nop
 6796 0100 0BB0     		add	sp, sp, #44
 6797              	.LCFI142:
 6798              		.cfi_def_cfa_offset 4
 6799              		@ sp needed
 6800 0102 5DF804FB 		ldr	pc, [sp], #4
 6801              	.L482:
 6802 0106 00BF     		.align	2
 6803              	.L481:
 6804 0108 00000000 		.word	uxSchedulerSuspended
 6805 010c 00000000 		.word	uxTopReadyPriority
 6806 0110 00000000 		.word	pxReadyTasksLists
 6807 0114 00000000 		.word	xPendingReadyList
 6808 0118 00000000 		.word	pxCurrentTCB
 6809 011c 00000000 		.word	xYieldPending
 6810              		.cfi_endproc
 6811              	.LFE60:
 6813              		.section	.text.xTaskNotifyStateClear,"ax",%progbits
 6814              		.align	1
 6815              		.global	xTaskNotifyStateClear
 6816              		.syntax unified
 6817              		.thumb
 6818              		.thumb_func
 6819              		.fpu fpv4-sp-d16
 6821              	xTaskNotifyStateClear:
 6822              	.LFB61:
4950:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4951:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4952:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4953:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4954:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4955:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #if( configUSE_TASK_NOTIFICATIONS == 1 )
4956:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4957:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xTaskNotifyStateClear( TaskHandle_t xTask )
4958:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
 6823              		.loc 1 4958 0
 6824              		.cfi_startproc
 6825              		@ args = 0, pretend = 0, frame = 16
 6826              		@ frame_needed = 0, uses_anonymous_args = 0
 6827 0000 00B5     		push	{lr}
 6828              	.LCFI143:
 6829              		.cfi_def_cfa_offset 4
 6830              		.cfi_offset 14, -4
 6831 0002 85B0     		sub	sp, sp, #20
 6832              	.LCFI144:
 6833              		.cfi_def_cfa_offset 24
 6834 0004 0190     		str	r0, [sp, #4]
4959:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	TCB_t *pxTCB;
4960:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	BaseType_t xReturn;
4961:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4962:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* If null is passed in here then it is the calling task that is having
4963:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		its notification state cleared. */
4964:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxTCB = prvGetTCBFromHandle( xTask );
 6835              		.loc 1 4964 0
 6836 0006 019B     		ldr	r3, [sp, #4]
 6837 0008 002B     		cmp	r3, #0
 6838 000a 02D1     		bne	.L484
 6839              		.loc 1 4964 0 is_stmt 0 discriminator 1
 6840 000c 0E4B     		ldr	r3, .L489
 6841 000e 1B68     		ldr	r3, [r3]
 6842 0010 00E0     		b	.L485
 6843              	.L484:
 6844              		.loc 1 4964 0 discriminator 2
 6845 0012 019B     		ldr	r3, [sp, #4]
 6846              	.L485:
 6847              		.loc 1 4964 0 discriminator 4
 6848 0014 0293     		str	r3, [sp, #8]
4965:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4966:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskENTER_CRITICAL();
 6849              		.loc 1 4966 0 is_stmt 1 discriminator 4
 6850 0016 FFF7FEFF 		bl	vPortEnterCritical
4967:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
4968:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( pxTCB->ucNotifyState == taskNOTIFICATION_RECEIVED )
 6851              		.loc 1 4968 0 discriminator 4
 6852 001a 029B     		ldr	r3, [sp, #8]
 6853 001c 93F85430 		ldrb	r3, [r3, #84]
 6854 0020 DBB2     		uxtb	r3, r3
 6855 0022 022B     		cmp	r3, #2
 6856 0024 06D1     		bne	.L486
4969:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4970:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				pxTCB->ucNotifyState = taskNOT_WAITING_NOTIFICATION;
 6857              		.loc 1 4970 0
 6858 0026 029B     		ldr	r3, [sp, #8]
 6859 0028 0022     		movs	r2, #0
 6860 002a 83F85420 		strb	r2, [r3, #84]
4971:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdPASS;
 6861              		.loc 1 4971 0
 6862 002e 0123     		movs	r3, #1
 6863 0030 0393     		str	r3, [sp, #12]
 6864 0032 01E0     		b	.L487
 6865              	.L486:
4972:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4973:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
4974:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
4975:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xReturn = pdFAIL;
 6866              		.loc 1 4975 0
 6867 0034 0023     		movs	r3, #0
 6868 0036 0393     		str	r3, [sp, #12]
 6869              	.L487:
4976:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
4977:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
4978:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		taskEXIT_CRITICAL();
 6870              		.loc 1 4978 0
 6871 0038 FFF7FEFF 		bl	vPortExitCritical
4979:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4980:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		return xReturn;
 6872              		.loc 1 4980 0
 6873 003c 039B     		ldr	r3, [sp, #12]
4981:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
 6874              		.loc 1 4981 0
 6875 003e 1846     		mov	r0, r3
 6876 0040 05B0     		add	sp, sp, #20
 6877              	.LCFI145:
 6878              		.cfi_def_cfa_offset 4
 6879              		@ sp needed
 6880 0042 5DF804FB 		ldr	pc, [sp], #4
 6881              	.L490:
 6882 0046 00BF     		.align	2
 6883              	.L489:
 6884 0048 00000000 		.word	pxCurrentTCB
 6885              		.cfi_endproc
 6886              	.LFE61:
 6888              		.section	.text.prvAddCurrentTaskToDelayedList,"ax",%progbits
 6889              		.align	1
 6890              		.syntax unified
 6891              		.thumb
 6892              		.thumb_func
 6893              		.fpu fpv4-sp-d16
 6895              	prvAddCurrentTaskToDelayedList:
 6896              	.LFB62:
4982:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4983:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** #endif /* configUSE_TASK_NOTIFICATIONS */
4984:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** /*-----------------------------------------------------------*/
4985:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4986:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4987:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** static void prvAddCurrentTaskToDelayedList( TickType_t xTicksToWait, const BaseType_t xCanBlockInde
4988:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** {
 6897              		.loc 1 4988 0
 6898              		.cfi_startproc
 6899              		@ args = 0, pretend = 0, frame = 16
 6900              		@ frame_needed = 0, uses_anonymous_args = 0
 6901 0000 00B5     		push	{lr}
 6902              	.LCFI146:
 6903              		.cfi_def_cfa_offset 4
 6904              		.cfi_offset 14, -4
 6905 0002 85B0     		sub	sp, sp, #20
 6906              	.LCFI147:
 6907              		.cfi_def_cfa_offset 24
 6908 0004 0190     		str	r0, [sp, #4]
 6909 0006 0091     		str	r1, [sp]
4989:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** TickType_t xTimeToWake;
4990:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** const TickType_t xConstTickCount = xTickCount;
 6910              		.loc 1 4990 0
 6911 0008 284B     		ldr	r3, .L497
 6912 000a 1B68     		ldr	r3, [r3]
 6913 000c 0393     		str	r3, [sp, #12]
4991:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
4992:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if( INCLUDE_xTaskAbortDelay == 1 )
4993:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
4994:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* About to enter a delayed list, so ensure the ucDelayAborted flag is
4995:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		reset to pdFALSE so it can be detected as having been set to pdTRUE
4996:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		when the task leaves the Blocked state. */
4997:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		pxCurrentTCB->ucDelayAborted = pdFALSE;
4998:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
4999:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif
5000:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
5001:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	/* Remove the task from the ready list before adding it to the blocked list
5002:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	as the same list item is used for both lists. */
5003:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	if( uxListRemove( &( pxCurrentTCB->xStateListItem ) ) == ( UBaseType_t ) 0 )
 6914              		.loc 1 5003 0
 6915 000e 284B     		ldr	r3, .L497+4
 6916 0010 1B68     		ldr	r3, [r3]
 6917 0012 0433     		adds	r3, r3, #4
 6918 0014 1846     		mov	r0, r3
 6919 0016 FFF7FEFF 		bl	uxListRemove
 6920 001a 0346     		mov	r3, r0
 6921 001c 002B     		cmp	r3, #0
 6922 001e 0BD1     		bne	.L492
5004:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
5005:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The current task must be in a ready list, so there is no need to
5006:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		check, and the port reset macro can be called directly. */
5007:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		portRESET_READY_PRIORITY( pxCurrentTCB->uxPriority, uxTopReadyPriority ); /*lint !e931 pxCurrentT
 6923              		.loc 1 5007 0
 6924 0020 234B     		ldr	r3, .L497+4
 6925 0022 1B68     		ldr	r3, [r3]
 6926 0024 DB6A     		ldr	r3, [r3, #44]
 6927 0026 0122     		movs	r2, #1
 6928 0028 02FA03F3 		lsl	r3, r2, r3
 6929 002c DA43     		mvns	r2, r3
 6930 002e 214B     		ldr	r3, .L497+8
 6931 0030 1B68     		ldr	r3, [r3]
 6932 0032 1340     		ands	r3, r3, r2
 6933 0034 1F4A     		ldr	r2, .L497+8
 6934 0036 1360     		str	r3, [r2]
 6935              	.L492:
5008:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
5009:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	else
5010:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
5011:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		mtCOVERAGE_TEST_MARKER();
5012:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
5013:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
5014:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#if ( INCLUDE_vTaskSuspend == 1 )
5015:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
5016:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( ( xTicksToWait == portMAX_DELAY ) && ( xCanBlockIndefinitely != pdFALSE ) )
 6936              		.loc 1 5016 0
 6937 0038 019B     		ldr	r3, [sp, #4]
 6938 003a B3F1FF3F 		cmp	r3, #-1
 6939 003e 0AD1     		bne	.L493
 6940              		.loc 1 5016 0 is_stmt 0 discriminator 1
 6941 0040 009B     		ldr	r3, [sp]
 6942 0042 002B     		cmp	r3, #0
 6943 0044 07D0     		beq	.L493
5017:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
5018:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Add the task to the suspended task list instead of a delayed task
5019:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			list to ensure it is not woken by a timing event.  It will block
5020:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			indefinitely. */
5021:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vListInsertEnd( &xSuspendedTaskList, &( pxCurrentTCB->xStateListItem ) );
 6944              		.loc 1 5021 0 is_stmt 1
 6945 0046 1A4B     		ldr	r3, .L497+4
 6946 0048 1B68     		ldr	r3, [r3]
 6947 004a 0433     		adds	r3, r3, #4
 6948 004c 1946     		mov	r1, r3
 6949 004e 1A48     		ldr	r0, .L497+12
 6950 0050 FFF7FEFF 		bl	vListInsertEnd
5022:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
5023:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
5024:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
5025:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Calculate the time at which the task should be woken if the event
5026:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			does not occur.  This may overflow but this doesn't matter, the
5027:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			kernel will manage it correctly. */
5028:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			xTimeToWake = xConstTickCount + xTicksToWait;
5029:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
5030:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* The list item will be inserted in wake time order. */
5031:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5032:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
5033:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xConstTickCount )
5034:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
5035:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* Wake time has overflowed.  Place this item in the overflow
5036:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				list. */
5037:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5038:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
5039:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
5040:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
5041:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* The wake time has not overflowed, so the current block list
5042:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				is used. */
5043:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5044:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
5045:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				/* If the task entering the blocked state was placed at the
5046:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				head of the list of blocked tasks then xNextTaskUnblockTime
5047:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				needs to be updated too. */
5048:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				if( xTimeToWake < xNextTaskUnblockTime )
5049:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
5050:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					xNextTaskUnblockTime = xTimeToWake;
5051:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
5052:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				else
5053:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
5054:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 					mtCOVERAGE_TEST_MARKER();
5055:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
5056:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
5057:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
5058:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
5059:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#else /* INCLUDE_vTaskSuspend */
5060:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	{
5061:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Calculate the time at which the task should be woken if the event
5062:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		does not occur.  This may overflow but this doesn't matter, the kernel
5063:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		will manage it correctly. */
5064:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		xTimeToWake = xConstTickCount + xTicksToWait;
5065:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
5066:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* The list item will be inserted in wake time order. */
5067:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		listSET_LIST_ITEM_VALUE( &( pxCurrentTCB->xStateListItem ), xTimeToWake );
5068:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
5069:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		if( xTimeToWake < xConstTickCount )
5070:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
5071:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* Wake time has overflowed.  Place this item in the overflow list. */
5072:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vListInsert( pxOverflowDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5073:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
5074:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		else
5075:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		{
5076:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* The wake time has not overflowed, so the current block list is used. */
5077:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			vListInsert( pxDelayedTaskList, &( pxCurrentTCB->xStateListItem ) );
5078:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
5079:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			/* If the task entering the blocked state was placed at the head of the
5080:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			list of blocked tasks then xNextTaskUnblockTime needs to be updated
5081:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			too. */
5082:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			if( xTimeToWake < xNextTaskUnblockTime )
5083:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
5084:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				xNextTaskUnblockTime = xTimeToWake;
5085:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
5086:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			else
5087:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
5088:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				mtCOVERAGE_TEST_MARKER();
5089:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
5090:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		}
5091:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
5092:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		/* Avoid compiler warning when INCLUDE_vTaskSuspend is not 1. */
5093:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 		( void ) xCanBlockIndefinitely;
5094:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	}
5095:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 	#endif /* INCLUDE_vTaskSuspend */
5096:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** }
 6951              		.loc 1 5096 0
 6952 0054 26E0     		b	.L496
 6953              	.L493:
5028:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 6954              		.loc 1 5028 0
 6955 0056 039A     		ldr	r2, [sp, #12]
 6956 0058 019B     		ldr	r3, [sp, #4]
 6957 005a 1344     		add	r3, r3, r2
 6958 005c 0293     		str	r3, [sp, #8]
5031:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 6959              		.loc 1 5031 0
 6960 005e 144B     		ldr	r3, .L497+4
 6961 0060 1B68     		ldr	r3, [r3]
 6962 0062 029A     		ldr	r2, [sp, #8]
 6963 0064 5A60     		str	r2, [r3, #4]
5033:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			{
 6964              		.loc 1 5033 0
 6965 0066 029A     		ldr	r2, [sp, #8]
 6966 0068 039B     		ldr	r3, [sp, #12]
 6967 006a 9A42     		cmp	r2, r3
 6968 006c 09D2     		bcs	.L495
5037:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 			}
 6969              		.loc 1 5037 0
 6970 006e 134B     		ldr	r3, .L497+16
 6971 0070 1A68     		ldr	r2, [r3]
 6972 0072 0F4B     		ldr	r3, .L497+4
 6973 0074 1B68     		ldr	r3, [r3]
 6974 0076 0433     		adds	r3, r3, #4
 6975 0078 1946     		mov	r1, r3
 6976 007a 1046     		mov	r0, r2
 6977 007c FFF7FEFF 		bl	vListInsert
 6978              		.loc 1 5096 0
 6979 0080 10E0     		b	.L496
 6980              	.L495:
5043:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 
 6981              		.loc 1 5043 0
 6982 0082 0F4B     		ldr	r3, .L497+20
 6983 0084 1A68     		ldr	r2, [r3]
 6984 0086 0A4B     		ldr	r3, .L497+4
 6985 0088 1B68     		ldr	r3, [r3]
 6986 008a 0433     		adds	r3, r3, #4
 6987 008c 1946     		mov	r1, r3
 6988 008e 1046     		mov	r0, r2
 6989 0090 FFF7FEFF 		bl	vListInsert
5048:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				{
 6990              		.loc 1 5048 0
 6991 0094 0B4B     		ldr	r3, .L497+24
 6992 0096 1B68     		ldr	r3, [r3]
 6993 0098 029A     		ldr	r2, [sp, #8]
 6994 009a 9A42     		cmp	r2, r3
 6995 009c 02D2     		bcs	.L496
5050:/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/tasks.c **** 				}
 6996              		.loc 1 5050 0
 6997 009e 094A     		ldr	r2, .L497+24
 6998 00a0 029B     		ldr	r3, [sp, #8]
 6999 00a2 1360     		str	r3, [r2]
 7000              	.L496:
 7001              		.loc 1 5096 0
 7002 00a4 00BF     		nop
 7003 00a6 05B0     		add	sp, sp, #20
 7004              	.LCFI148:
 7005              		.cfi_def_cfa_offset 4
 7006              		@ sp needed
 7007 00a8 5DF804FB 		ldr	pc, [sp], #4
 7008              	.L498:
 7009              		.align	2
 7010              	.L497:
 7011 00ac 00000000 		.word	xTickCount
 7012 00b0 00000000 		.word	pxCurrentTCB
 7013 00b4 00000000 		.word	uxTopReadyPriority
 7014 00b8 00000000 		.word	xSuspendedTaskList
 7015 00bc 00000000 		.word	pxOverflowDelayedTaskList
 7016 00c0 00000000 		.word	pxDelayedTaskList
 7017 00c4 00000000 		.word	xNextTaskUnblockTime
 7018              		.cfi_endproc
 7019              	.LFE62:
 7021              		.text
 7022              	.Letext0:
 7023              		.file 3 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/lib/gcc/arm-none-eabi/7.2.1/include/
 7024              		.file 4 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/machine/_defau
 7025              		.file 5 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/lock.h"
 7026              		.file 6 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_types.h"
 7027              		.file 7 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/reent.h"
 7028              		.file 8 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/stdlib.h"
 7029              		.file 9 "/home/rdu/Software/gcc-arm-none-eabi-7-2017-q4-major/arm-none-eabi/include/sys/_stdint.h"
 7030              		.file 10 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/targets/racer_core/firmware/confi
 7031              		.file 11 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/include
 7032              		.file 12 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/include
 7033              		.file 13 "/home/rdu/Workspace/project_templates/mcu/stm32_ws/src/libraries/FreeRTOS/Source/include
DEFINED SYMBOLS
                            *ABS*:0000000000000000 tasks.c
     /tmp/ccjq8CMK.s:20     .bss.pxCurrentTCB:0000000000000000 pxCurrentTCB
     /tmp/ccjq8CMK.s:17     .bss.pxCurrentTCB:0000000000000000 $d
     /tmp/ccjq8CMK.s:23     .bss.pxReadyTasksLists:0000000000000000 $d
     /tmp/ccjq8CMK.s:26     .bss.pxReadyTasksLists:0000000000000000 pxReadyTasksLists
     /tmp/ccjq8CMK.s:29     .bss.xDelayedTaskList1:0000000000000000 $d
     /tmp/ccjq8CMK.s:32     .bss.xDelayedTaskList1:0000000000000000 xDelayedTaskList1
     /tmp/ccjq8CMK.s:35     .bss.xDelayedTaskList2:0000000000000000 $d
     /tmp/ccjq8CMK.s:38     .bss.xDelayedTaskList2:0000000000000000 xDelayedTaskList2
     /tmp/ccjq8CMK.s:41     .bss.pxDelayedTaskList:0000000000000000 $d
     /tmp/ccjq8CMK.s:44     .bss.pxDelayedTaskList:0000000000000000 pxDelayedTaskList
     /tmp/ccjq8CMK.s:47     .bss.pxOverflowDelayedTaskList:0000000000000000 $d
     /tmp/ccjq8CMK.s:50     .bss.pxOverflowDelayedTaskList:0000000000000000 pxOverflowDelayedTaskList
     /tmp/ccjq8CMK.s:53     .bss.xPendingReadyList:0000000000000000 $d
     /tmp/ccjq8CMK.s:56     .bss.xPendingReadyList:0000000000000000 xPendingReadyList
     /tmp/ccjq8CMK.s:59     .bss.xTasksWaitingTermination:0000000000000000 $d
     /tmp/ccjq8CMK.s:62     .bss.xTasksWaitingTermination:0000000000000000 xTasksWaitingTermination
     /tmp/ccjq8CMK.s:65     .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 $d
     /tmp/ccjq8CMK.s:68     .bss.uxDeletedTasksWaitingCleanUp:0000000000000000 uxDeletedTasksWaitingCleanUp
     /tmp/ccjq8CMK.s:71     .bss.xSuspendedTaskList:0000000000000000 $d
     /tmp/ccjq8CMK.s:74     .bss.xSuspendedTaskList:0000000000000000 xSuspendedTaskList
     /tmp/ccjq8CMK.s:77     .bss.uxCurrentNumberOfTasks:0000000000000000 $d
     /tmp/ccjq8CMK.s:80     .bss.uxCurrentNumberOfTasks:0000000000000000 uxCurrentNumberOfTasks
     /tmp/ccjq8CMK.s:83     .bss.xTickCount:0000000000000000 $d
     /tmp/ccjq8CMK.s:86     .bss.xTickCount:0000000000000000 xTickCount
     /tmp/ccjq8CMK.s:89     .bss.uxTopReadyPriority:0000000000000000 $d
     /tmp/ccjq8CMK.s:92     .bss.uxTopReadyPriority:0000000000000000 uxTopReadyPriority
     /tmp/ccjq8CMK.s:95     .bss.xSchedulerRunning:0000000000000000 $d
     /tmp/ccjq8CMK.s:98     .bss.xSchedulerRunning:0000000000000000 xSchedulerRunning
     /tmp/ccjq8CMK.s:101    .bss.uxPendedTicks:0000000000000000 $d
     /tmp/ccjq8CMK.s:104    .bss.uxPendedTicks:0000000000000000 uxPendedTicks
     /tmp/ccjq8CMK.s:107    .bss.xYieldPending:0000000000000000 $d
     /tmp/ccjq8CMK.s:110    .bss.xYieldPending:0000000000000000 xYieldPending
     /tmp/ccjq8CMK.s:113    .bss.xNumOfOverflows:0000000000000000 $d
     /tmp/ccjq8CMK.s:116    .bss.xNumOfOverflows:0000000000000000 xNumOfOverflows
     /tmp/ccjq8CMK.s:119    .bss.uxTaskNumber:0000000000000000 $d
     /tmp/ccjq8CMK.s:122    .bss.uxTaskNumber:0000000000000000 uxTaskNumber
     /tmp/ccjq8CMK.s:125    .bss.xNextTaskUnblockTime:0000000000000000 $d
     /tmp/ccjq8CMK.s:128    .bss.xNextTaskUnblockTime:0000000000000000 xNextTaskUnblockTime
     /tmp/ccjq8CMK.s:131    .bss.xIdleTaskHandle:0000000000000000 $d
     /tmp/ccjq8CMK.s:134    .bss.xIdleTaskHandle:0000000000000000 xIdleTaskHandle
     /tmp/ccjq8CMK.s:137    .bss.uxSchedulerSuspended:0000000000000000 $d
     /tmp/ccjq8CMK.s:140    .bss.uxSchedulerSuspended:0000000000000000 uxSchedulerSuspended
     /tmp/ccjq8CMK.s:143    .text.xTaskCreate:0000000000000000 $t
     /tmp/ccjq8CMK.s:150    .text.xTaskCreate:0000000000000000 xTaskCreate
     /tmp/ccjq8CMK.s:253    .text.prvInitialiseNewTask:0000000000000000 prvInitialiseNewTask
     /tmp/ccjq8CMK.s:467    .text.prvAddNewTaskToReadyList:0000000000000000 prvAddNewTaskToReadyList
     /tmp/ccjq8CMK.s:247    .text.prvInitialiseNewTask:0000000000000000 $t
     /tmp/ccjq8CMK.s:461    .text.prvAddNewTaskToReadyList:0000000000000000 $t
     /tmp/ccjq8CMK.s:4426   .text.prvInitialiseTaskLists:0000000000000000 prvInitialiseTaskLists
     /tmp/ccjq8CMK.s:598    .text.prvAddNewTaskToReadyList:00000000000000c0 $d
     /tmp/ccjq8CMK.s:609    .text.vTaskDelete:0000000000000000 $t
     /tmp/ccjq8CMK.s:616    .text.vTaskDelete:0000000000000000 vTaskDelete
     /tmp/ccjq8CMK.s:4924   .text.prvDeleteTCB:0000000000000000 prvDeleteTCB
     /tmp/ccjq8CMK.s:4963   .text.prvResetNextTaskUnblockTime:0000000000000000 prvResetNextTaskUnblockTime
     /tmp/ccjq8CMK.s:789    .text.vTaskDelete:00000000000000f4 $d
     /tmp/ccjq8CMK.s:803    .text.vTaskDelayUntil:0000000000000000 $t
     /tmp/ccjq8CMK.s:810    .text.vTaskDelayUntil:0000000000000000 vTaskDelayUntil
     /tmp/ccjq8CMK.s:2442   .text.vTaskSuspendAll:0000000000000000 vTaskSuspendAll
     /tmp/ccjq8CMK.s:6895   .text.prvAddCurrentTaskToDelayedList:0000000000000000 prvAddCurrentTaskToDelayedList
     /tmp/ccjq8CMK.s:2473   .text.xTaskResumeAll:0000000000000000 xTaskResumeAll
     /tmp/ccjq8CMK.s:1000   .text.vTaskDelayUntil:00000000000000e8 $d
     /tmp/ccjq8CMK.s:1007   .text.vTaskDelay:0000000000000000 $t
     /tmp/ccjq8CMK.s:1014   .text.vTaskDelay:0000000000000000 vTaskDelay
     /tmp/ccjq8CMK.s:1098   .text.vTaskDelay:000000000000005c $d
     /tmp/ccjq8CMK.s:1104   .text.eTaskGetState:0000000000000000 $t
     /tmp/ccjq8CMK.s:1111   .text.eTaskGetState:0000000000000000 eTaskGetState
     /tmp/ccjq8CMK.s:1257   .text.eTaskGetState:00000000000000c4 $d
     /tmp/ccjq8CMK.s:1266   .text.uxTaskPriorityGet:0000000000000000 $t
     /tmp/ccjq8CMK.s:1273   .text.uxTaskPriorityGet:0000000000000000 uxTaskPriorityGet
     /tmp/ccjq8CMK.s:1321   .text.uxTaskPriorityGet:0000000000000030 $d
     /tmp/ccjq8CMK.s:1326   .text.uxTaskPriorityGetFromISR:0000000000000000 $t
     /tmp/ccjq8CMK.s:1333   .text.uxTaskPriorityGetFromISR:0000000000000000 uxTaskPriorityGetFromISR
     /tmp/ccjq8CMK.s:1415   .text.uxTaskPriorityGetFromISR:0000000000000050 $d
     /tmp/ccjq8CMK.s:1420   .text.vTaskPrioritySet:0000000000000000 $t
     /tmp/ccjq8CMK.s:1427   .text.vTaskPrioritySet:0000000000000000 vTaskPrioritySet
     /tmp/ccjq8CMK.s:1651   .text.vTaskPrioritySet:0000000000000140 $d
     /tmp/ccjq8CMK.s:1659   .text.vTaskSuspend:0000000000000000 $t
     /tmp/ccjq8CMK.s:1666   .text.vTaskSuspend:0000000000000000 vTaskSuspend
     /tmp/ccjq8CMK.s:3293   .text.vTaskSwitchContext:0000000000000000 vTaskSwitchContext
     /tmp/ccjq8CMK.s:1849   .text.vTaskSuspend:0000000000000100 $d
     /tmp/ccjq8CMK.s:1861   .text.prvTaskIsTaskSuspended:0000000000000000 $t
     /tmp/ccjq8CMK.s:1867   .text.prvTaskIsTaskSuspended:0000000000000000 prvTaskIsTaskSuspended
     /tmp/ccjq8CMK.s:1941   .text.prvTaskIsTaskSuspended:0000000000000050 $d
     /tmp/ccjq8CMK.s:1947   .text.vTaskResume:0000000000000000 $t
     /tmp/ccjq8CMK.s:1954   .text.vTaskResume:0000000000000000 vTaskResume
     /tmp/ccjq8CMK.s:2076   .text.vTaskResume:00000000000000a8 $d
     /tmp/ccjq8CMK.s:2084   .text.xTaskResumeFromISR:0000000000000000 $t
     /tmp/ccjq8CMK.s:2091   .text.xTaskResumeFromISR:0000000000000000 xTaskResumeFromISR
     /tmp/ccjq8CMK.s:2245   .text.xTaskResumeFromISR:00000000000000c8 $d
     /tmp/ccjq8CMK.s:2254   .rodata:0000000000000000 $d
     /tmp/ccjq8CMK.s:2258   .text.vTaskStartScheduler:0000000000000000 $t
     /tmp/ccjq8CMK.s:2265   .text.vTaskStartScheduler:0000000000000000 vTaskStartScheduler
     /tmp/ccjq8CMK.s:2368   .text.vTaskStartScheduler:000000000000007c $d
     /tmp/ccjq8CMK.s:4374   .text.prvIdleTask:0000000000000000 prvIdleTask
     /tmp/ccjq8CMK.s:2378   .text.vTaskEndScheduler:0000000000000000 $t
     /tmp/ccjq8CMK.s:2385   .text.vTaskEndScheduler:0000000000000000 vTaskEndScheduler
     /tmp/ccjq8CMK.s:2430   .text.vTaskEndScheduler:0000000000000028 $d
     /tmp/ccjq8CMK.s:2435   .text.vTaskSuspendAll:0000000000000000 $t
     /tmp/ccjq8CMK.s:2461   .text.vTaskSuspendAll:0000000000000010 $d
     /tmp/ccjq8CMK.s:2466   .text.xTaskResumeAll:0000000000000000 $t
     /tmp/ccjq8CMK.s:3048   .text.xTaskIncrementTick:0000000000000000 xTaskIncrementTick
     /tmp/ccjq8CMK.s:2671   .text.xTaskResumeAll:0000000000000110 $d
     /tmp/ccjq8CMK.s:2684   .text.xTaskGetTickCount:0000000000000000 $t
     /tmp/ccjq8CMK.s:2691   .text.xTaskGetTickCount:0000000000000000 xTaskGetTickCount
     /tmp/ccjq8CMK.s:2717   .text.xTaskGetTickCount:0000000000000010 $d
     /tmp/ccjq8CMK.s:2722   .text.xTaskGetTickCountFromISR:0000000000000000 $t
     /tmp/ccjq8CMK.s:2729   .text.xTaskGetTickCountFromISR:0000000000000000 xTaskGetTickCountFromISR
     /tmp/ccjq8CMK.s:2763   .text.xTaskGetTickCountFromISR:000000000000001c $d
     /tmp/ccjq8CMK.s:2768   .text.uxTaskGetNumberOfTasks:0000000000000000 $t
     /tmp/ccjq8CMK.s:2775   .text.uxTaskGetNumberOfTasks:0000000000000000 uxTaskGetNumberOfTasks
     /tmp/ccjq8CMK.s:2791   .text.uxTaskGetNumberOfTasks:0000000000000008 $d
     /tmp/ccjq8CMK.s:2796   .text.pcTaskGetName:0000000000000000 $t
     /tmp/ccjq8CMK.s:2803   .text.pcTaskGetName:0000000000000000 pcTaskGetName
     /tmp/ccjq8CMK.s:2865   .text.pcTaskGetName:0000000000000038 $d
     /tmp/ccjq8CMK.s:2870   .text.uxTaskGetSystemState:0000000000000000 $t
     /tmp/ccjq8CMK.s:2877   .text.uxTaskGetSystemState:0000000000000000 uxTaskGetSystemState
     /tmp/ccjq8CMK.s:4745   .text.prvListTasksWithinSingleList:0000000000000000 prvListTasksWithinSingleList
     /tmp/ccjq8CMK.s:3031   .text.uxTaskGetSystemState:0000000000000100 $d
     /tmp/ccjq8CMK.s:3041   .text.xTaskIncrementTick:0000000000000000 $t
     /tmp/ccjq8CMK.s:3271   .text.xTaskIncrementTick:0000000000000140 $d
     /tmp/ccjq8CMK.s:3286   .text.vTaskSwitchContext:0000000000000000 $t
     /tmp/ccjq8CMK.s:3419   .text.vTaskSwitchContext:000000000000009c $d
     /tmp/ccjq8CMK.s:3428   .text.vTaskPlaceOnEventList:0000000000000000 $t
     /tmp/ccjq8CMK.s:3435   .text.vTaskPlaceOnEventList:0000000000000000 vTaskPlaceOnEventList
     /tmp/ccjq8CMK.s:3495   .text.vTaskPlaceOnEventList:0000000000000040 $d
     /tmp/ccjq8CMK.s:3500   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 $t
     /tmp/ccjq8CMK.s:3507   .text.vTaskPlaceOnUnorderedEventList:0000000000000000 vTaskPlaceOnUnorderedEventList
     /tmp/ccjq8CMK.s:3599   .text.vTaskPlaceOnUnorderedEventList:000000000000006c $d
     /tmp/ccjq8CMK.s:3605   .text.vTaskPlaceOnEventListRestricted:0000000000000000 $t
     /tmp/ccjq8CMK.s:3612   .text.vTaskPlaceOnEventListRestricted:0000000000000000 vTaskPlaceOnEventListRestricted
     /tmp/ccjq8CMK.s:3681   .text.vTaskPlaceOnEventListRestricted:0000000000000050 $d
     /tmp/ccjq8CMK.s:3686   .text.xTaskRemoveFromEventList:0000000000000000 $t
     /tmp/ccjq8CMK.s:3693   .text.xTaskRemoveFromEventList:0000000000000000 xTaskRemoveFromEventList
     /tmp/ccjq8CMK.s:3816   .text.xTaskRemoveFromEventList:00000000000000a8 $d
     /tmp/ccjq8CMK.s:3826   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 $t
     /tmp/ccjq8CMK.s:3833   .text.vTaskRemoveFromUnorderedEventList:0000000000000000 vTaskRemoveFromUnorderedEventList
     /tmp/ccjq8CMK.s:3960   .text.vTaskRemoveFromUnorderedEventList:00000000000000a8 $d
     /tmp/ccjq8CMK.s:3969   .text.vTaskSetTimeOutState:0000000000000000 $t
     /tmp/ccjq8CMK.s:3976   .text.vTaskSetTimeOutState:0000000000000000 vTaskSetTimeOutState
     /tmp/ccjq8CMK.s:4038   .text.vTaskSetTimeOutState:0000000000000040 $d
     /tmp/ccjq8CMK.s:4044   .text.vTaskInternalSetTimeOutState:0000000000000000 $t
     /tmp/ccjq8CMK.s:4051   .text.vTaskInternalSetTimeOutState:0000000000000000 vTaskInternalSetTimeOutState
     /tmp/ccjq8CMK.s:4082   .text.vTaskInternalSetTimeOutState:000000000000001c $d
     /tmp/ccjq8CMK.s:4088   .text.xTaskCheckForTimeOut:0000000000000000 $t
     /tmp/ccjq8CMK.s:4095   .text.xTaskCheckForTimeOut:0000000000000000 xTaskCheckForTimeOut
     /tmp/ccjq8CMK.s:4243   .text.xTaskCheckForTimeOut:00000000000000b8 $d
     /tmp/ccjq8CMK.s:4249   .text.vTaskMissedYield:0000000000000000 $t
     /tmp/ccjq8CMK.s:4256   .text.vTaskMissedYield:0000000000000000 vTaskMissedYield
     /tmp/ccjq8CMK.s:4273   .text.vTaskMissedYield:000000000000000c $d
     /tmp/ccjq8CMK.s:4278   .text.uxTaskGetTaskNumber:0000000000000000 $t
     /tmp/ccjq8CMK.s:4285   .text.uxTaskGetTaskNumber:0000000000000000 uxTaskGetTaskNumber
     /tmp/ccjq8CMK.s:4326   .text.vTaskSetTaskNumber:0000000000000000 $t
     /tmp/ccjq8CMK.s:4333   .text.vTaskSetTaskNumber:0000000000000000 vTaskSetTaskNumber
     /tmp/ccjq8CMK.s:4368   .text.prvIdleTask:0000000000000000 $t
     /tmp/ccjq8CMK.s:4514   .text.prvCheckTasksWaitingTermination:0000000000000000 prvCheckTasksWaitingTermination
     /tmp/ccjq8CMK.s:4414   .text.prvIdleTask:0000000000000024 $d
     /tmp/ccjq8CMK.s:4420   .text.prvInitialiseTaskLists:0000000000000000 $t
     /tmp/ccjq8CMK.s:4496   .text.prvInitialiseTaskLists:000000000000005c $d
     /tmp/ccjq8CMK.s:4508   .text.prvCheckTasksWaitingTermination:0000000000000000 $t
     /tmp/ccjq8CMK.s:4577   .text.prvCheckTasksWaitingTermination:000000000000004c $d
     /tmp/ccjq8CMK.s:4584   .text.vTaskGetInfo:0000000000000000 $t
     /tmp/ccjq8CMK.s:4591   .text.vTaskGetInfo:0000000000000000 vTaskGetInfo
     /tmp/ccjq8CMK.s:4869   .text.prvTaskCheckFreeStackSpace:0000000000000000 prvTaskCheckFreeStackSpace
     /tmp/ccjq8CMK.s:4734   .text.vTaskGetInfo:00000000000000cc $d
     /tmp/ccjq8CMK.s:4739   .text.prvListTasksWithinSingleList:0000000000000000 $t
     /tmp/ccjq8CMK.s:4863   .text.prvTaskCheckFreeStackSpace:0000000000000000 $t
     /tmp/ccjq8CMK.s:4918   .text.prvDeleteTCB:0000000000000000 $t
     /tmp/ccjq8CMK.s:4957   .text.prvResetNextTaskUnblockTime:0000000000000000 $t
     /tmp/ccjq8CMK.s:5008   .text.prvResetNextTaskUnblockTime:0000000000000030 $d
     /tmp/ccjq8CMK.s:5014   .text.xTaskGetCurrentTaskHandle:0000000000000000 $t
     /tmp/ccjq8CMK.s:5021   .text.xTaskGetCurrentTaskHandle:0000000000000000 xTaskGetCurrentTaskHandle
     /tmp/ccjq8CMK.s:5047   .text.xTaskGetCurrentTaskHandle:0000000000000010 $d
     /tmp/ccjq8CMK.s:5052   .text.xTaskGetSchedulerState:0000000000000000 $t
     /tmp/ccjq8CMK.s:5059   .text.xTaskGetSchedulerState:0000000000000000 xTaskGetSchedulerState
     /tmp/ccjq8CMK.s:5105   .text.xTaskGetSchedulerState:000000000000002c $d
     /tmp/ccjq8CMK.s:5111   .text.xTaskPriorityInherit:0000000000000000 $t
     /tmp/ccjq8CMK.s:5118   .text.xTaskPriorityInherit:0000000000000000 xTaskPriorityInherit
     /tmp/ccjq8CMK.s:5275   .text.xTaskPriorityInherit:00000000000000f4 $d
     /tmp/ccjq8CMK.s:5282   .text.xTaskPriorityDisinherit:0000000000000000 $t
     /tmp/ccjq8CMK.s:5289   .text.xTaskPriorityDisinherit:0000000000000000 xTaskPriorityDisinherit
     /tmp/ccjq8CMK.s:5464   .text.xTaskPriorityDisinherit:00000000000000f8 $d
     /tmp/ccjq8CMK.s:5471   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 $t
     /tmp/ccjq8CMK.s:5478   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000000 vTaskPriorityDisinheritAfterTimeout
     /tmp/ccjq8CMK.s:5679   .text.vTaskPriorityDisinheritAfterTimeout:0000000000000124 $d
     /tmp/ccjq8CMK.s:5686   .text.uxTaskResetEventItemValue:0000000000000000 $t
     /tmp/ccjq8CMK.s:5693   .text.uxTaskResetEventItemValue:0000000000000000 uxTaskResetEventItemValue
     /tmp/ccjq8CMK.s:5728   .text.uxTaskResetEventItemValue:0000000000000024 $d
     /tmp/ccjq8CMK.s:5733   .text.pvTaskIncrementMutexHeldCount:0000000000000000 $t
     /tmp/ccjq8CMK.s:5740   .text.pvTaskIncrementMutexHeldCount:0000000000000000 pvTaskIncrementMutexHeldCount
     /tmp/ccjq8CMK.s:5768   .text.pvTaskIncrementMutexHeldCount:000000000000001c $d
     /tmp/ccjq8CMK.s:5773   .text.ulTaskNotifyTake:0000000000000000 $t
     /tmp/ccjq8CMK.s:5780   .text.ulTaskNotifyTake:0000000000000000 ulTaskNotifyTake
     /tmp/ccjq8CMK.s:5880   .text.ulTaskNotifyTake:0000000000000088 $d
     /tmp/ccjq8CMK.s:5886   .text.xTaskNotifyWait:0000000000000000 $t
     /tmp/ccjq8CMK.s:5893   .text.xTaskNotifyWait:0000000000000000 xTaskNotifyWait
     /tmp/ccjq8CMK.s:6012   .text.xTaskNotifyWait:00000000000000ac $d
     /tmp/ccjq8CMK.s:6018   .text.xTaskGenericNotify:0000000000000000 $t
     /tmp/ccjq8CMK.s:6025   .text.xTaskGenericNotify:0000000000000000 xTaskGenericNotify
     /tmp/ccjq8CMK.s:6101   .text.xTaskGenericNotify:0000000000000064 $d
     /tmp/ccjq8CMK.s:6106   .text.xTaskGenericNotify:0000000000000078 $t
     /tmp/ccjq8CMK.s:6276   .text.xTaskGenericNotify:000000000000015c $d
     /tmp/ccjq8CMK.s:6284   .text.xTaskGenericNotifyFromISR:0000000000000000 $t
     /tmp/ccjq8CMK.s:6291   .text.xTaskGenericNotifyFromISR:0000000000000000 xTaskGenericNotifyFromISR
     /tmp/ccjq8CMK.s:6389   .text.xTaskGenericNotifyFromISR:0000000000000080 $d
     /tmp/ccjq8CMK.s:6394   .text.xTaskGenericNotifyFromISR:0000000000000094 $t
     /tmp/ccjq8CMK.s:6590   .text.xTaskGenericNotifyFromISR:0000000000000198 $d
     /tmp/ccjq8CMK.s:6600   .text.vTaskNotifyGiveFromISR:0000000000000000 $t
     /tmp/ccjq8CMK.s:6607   .text.vTaskNotifyGiveFromISR:0000000000000000 vTaskNotifyGiveFromISR
     /tmp/ccjq8CMK.s:6804   .text.vTaskNotifyGiveFromISR:0000000000000108 $d
     /tmp/ccjq8CMK.s:6814   .text.xTaskNotifyStateClear:0000000000000000 $t
     /tmp/ccjq8CMK.s:6821   .text.xTaskNotifyStateClear:0000000000000000 xTaskNotifyStateClear
     /tmp/ccjq8CMK.s:6884   .text.xTaskNotifyStateClear:0000000000000048 $d
     /tmp/ccjq8CMK.s:6889   .text.prvAddCurrentTaskToDelayedList:0000000000000000 $t
     /tmp/ccjq8CMK.s:7011   .text.prvAddCurrentTaskToDelayedList:00000000000000ac $d

UNDEFINED SYMBOLS
pvPortMalloc
vPortFree
memset
vListInitialiseItem
pxPortInitialiseStack
vPortEnterCritical
vListInsertEnd
vPortExitCritical
uxListRemove
vPortValidateInterruptPriority
xTimerCreateTimerTask
xPortStartScheduler
vPortEndScheduler
vListInsert
vListInitialise
